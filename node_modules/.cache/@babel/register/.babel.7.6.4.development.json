{
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar consign = require('consign');\n\nvar app = express();\n\nvar http = require('http').createServer(app);\n\napp.use(express[\"static\"]('public'));\nconsign().include(\"libs/config.js\").then(\"libs/middlewares.js\").then(\"routes\").then(\"libs/boot.js\").into(app);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiY29uc2lnbiIsImFwcCIsImh0dHAiLCJjcmVhdGVTZXJ2ZXIiLCJ1c2UiLCJpbmNsdWRlIiwidGhlbiIsImludG8iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBckI7O0FBQ0EsSUFBSUMsT0FBTyxHQUFHRCxPQUFPLENBQUMsU0FBRCxDQUFyQjs7QUFFQSxJQUFNRSxHQUFHLEdBQUdILE9BQU8sRUFBbkI7O0FBQ0EsSUFBSUksSUFBSSxHQUFHSCxPQUFPLENBQUMsTUFBRCxDQUFQLENBQWdCSSxZQUFoQixDQUE2QkYsR0FBN0IsQ0FBWDs7QUFDQUEsR0FBRyxDQUFDRyxHQUFKLENBQVFOLE9BQU8sVUFBUCxDQUFlLFFBQWYsQ0FBUjtBQUVBRSxPQUFPLEdBQ0ZLLE9BREwsQ0FDYSxnQkFEYixFQUVLQyxJQUZMLENBRVUscUJBRlYsRUFHS0EsSUFITCxDQUdVLFFBSFYsRUFJS0EsSUFKTCxDQUlVLGNBSlYsRUFLS0MsSUFMTCxDQUtVTixHQUxWO0FBTUFPLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQlIsR0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5oL0RvY3VtZW50cy9ub2RlanMvbXlmb29kLWFwaSIsInNvdXJjZXNDb250ZW50IjpbInZhciBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xudmFyIGNvbnNpZ24gPSByZXF1aXJlKCdjb25zaWduJyk7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbnZhciBodHRwID0gcmVxdWlyZSgnaHR0cCcpLmNyZWF0ZVNlcnZlcihhcHApO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYygncHVibGljJykpXG5cbmNvbnNpZ24oKVxuICAgIC5pbmNsdWRlKFwibGlicy9jb25maWcuanNcIilcbiAgICAudGhlbihcImxpYnMvbWlkZGxld2FyZXMuanNcIilcbiAgICAudGhlbihcInJvdXRlc1wiKVxuICAgIC50aGVuKFwibGlicy9ib290LmpzXCIpXG4gICAgLmludG8oYXBwKTtcbm1vZHVsZS5leHBvcnRzID0gYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "consign",
        "app",
        "http",
        "createServer",
        "use",
        "include",
        "then",
        "into",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAArB;;AAEA,IAAME,GAAG,GAAGH,OAAO,EAAnB;;AACA,IAAII,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAP,CAAgBI,YAAhB,CAA6BF,GAA7B,CAAX;;AACAA,GAAG,CAACG,GAAJ,CAAQN,OAAO,UAAP,CAAe,QAAf,CAAR;AAEAE,OAAO,GACFK,OADL,CACa,gBADb,EAEKC,IAFL,CAEU,qBAFV,EAGKA,IAHL,CAGU,QAHV,EAIKA,IAJL,CAIU,cAJV,EAKKC,IALL,CAKUN,GALV;AAMAO,MAAM,CAACC,OAAP,GAAiBR,GAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api",
      "sourcesContent": [
        "var express = require('express');\nvar consign = require('consign');\n\nconst app = express();\nvar http = require('http').createServer(app);\napp.use(express.static('public'))\n\nconsign()\n    .include(\"libs/config.js\")\n    .then(\"libs/middlewares.js\")\n    .then(\"routes\")\n    .then(\"libs/boot.js\")\n    .into(app);\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1572679357342
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/libs/config.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/libs/config.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/libs/config.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/libs/config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
        "sourceFileName": "config.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nrequire('dotenv').config();\n\nvar mongoose = require('mongoose');\n\nmongoose.connect(process.env.DB_URL, {\n  useUnifiedTopology: true\n});\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n  console.log(\"connect mongoDB successfully!\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwibW9uZ29vc2UiLCJjb25uZWN0IiwicHJvY2VzcyIsImVudiIsIkRCX1VSTCIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRiIiwiY29ubmVjdGlvbiIsIm9uIiwiY29uc29sZSIsImVycm9yIiwiYmluZCIsIm9uY2UiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JDLE1BQWxCOztBQUVBLElBQUlDLFFBQVEsR0FBR0YsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O0FBRUFFLFFBQVEsQ0FBQ0MsT0FBVCxDQUFpQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE1BQTdCLEVBQXFDO0FBQ2pDQyxFQUFBQSxrQkFBa0IsRUFBRTtBQURhLENBQXJDO0FBSUEsSUFBSUMsRUFBRSxHQUFHTixRQUFRLENBQUNPLFVBQWxCO0FBQ0FELEVBQUUsQ0FBQ0UsRUFBSCxDQUFNLE9BQU4sRUFBZUMsT0FBTyxDQUFDQyxLQUFSLENBQWNDLElBQWQsQ0FBbUJGLE9BQW5CLEVBQTRCLG1CQUE1QixDQUFmO0FBQ0FILEVBQUUsQ0FBQ00sSUFBSCxDQUFRLE1BQVIsRUFBZ0IsWUFBWTtBQUN4QkgsRUFBQUEsT0FBTyxDQUFDSSxHQUFSLENBQVksK0JBQVo7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvbGlicyIsInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpO1xuXG52YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG5tb25nb29zZS5jb25uZWN0KHByb2Nlc3MuZW52LkRCX1VSTCwge1xuICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZVxufSk7XG5cbnZhciBkYiA9IG1vbmdvb3NlLmNvbm5lY3Rpb247XG5kYi5vbignZXJyb3InLCBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSwgJ2Nvbm5lY3Rpb24gZXJyb3I6JykpO1xuZGIub25jZSgnb3BlbicsIGZ1bmN0aW9uICgpIHtcbiAgICBjb25zb2xlLmxvZyhcImNvbm5lY3QgbW9uZ29EQiBzdWNjZXNzZnVsbHkhXCIpO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "require",
        "config",
        "mongoose",
        "connect",
        "process",
        "env",
        "DB_URL",
        "useUnifiedTopology",
        "db",
        "connection",
        "on",
        "console",
        "error",
        "bind",
        "once",
        "log"
      ],
      "mappings": ";;AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAIC,QAAQ,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AAEAE,QAAQ,CAACC,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,MAA7B,EAAqC;AACjCC,EAAAA,kBAAkB,EAAE;AADa,CAArC;AAIA,IAAIC,EAAE,GAAGN,QAAQ,CAACO,UAAlB;AACAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAeC,OAAO,CAACC,KAAR,CAAcC,IAAd,CAAmBF,OAAnB,EAA4B,mBAA5B,CAAf;AACAH,EAAE,CAACM,IAAH,CAAQ,MAAR,EAAgB,YAAY;AACxBH,EAAAA,OAAO,CAACI,GAAR,CAAY,+BAAZ;AACH,CAFD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
      "sourcesContent": [
        "require('dotenv').config();\n\nvar mongoose = require('mongoose');\n\nmongoose.connect(process.env.DB_URL, {\n    useUnifiedTopology: true\n});\n\nvar db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n    console.log(\"connect mongoDB successfully!\");\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575908095735
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/libs/middlewares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/libs/middlewares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/libs/middlewares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/libs/middlewares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
        "sourceFileName": "middlewares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar bodyParser = require('body-parser');\n\nmodule.exports = function (app) {\n  app.set(\"port\", 3000);\n  app.set(\"json spaces\", 4);\n  app.use(bodyParser.json());\n  app.use(bodyParser.urlencoded({\n    extended: true\n  })); // app.use((res, res, next) => {\n  //     delete req.body.id;\n  //     next();\n  // });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbImJvZHlQYXJzZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInNldCIsInVzZSIsImpzb24iLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsYUFBRCxDQUF4Qjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUNwQkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQixJQUFoQjtBQUNBRCxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCLENBQXZCO0FBQ0FELEVBQUFBLEdBQUcsQ0FBQ0UsR0FBSixDQUFRTixVQUFVLENBQUNPLElBQVgsRUFBUjtBQUNBSCxFQUFBQSxHQUFHLENBQUNFLEdBQUosQ0FBUU4sVUFBVSxDQUFDUSxVQUFYLENBQXNCO0FBQUNDLElBQUFBLFFBQVEsRUFBQztBQUFWLEdBQXRCLENBQVIsRUFKb0IsQ0FLcEI7QUFDQTtBQUNBO0FBQ0E7QUFDSCxDQVREIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvbGlicyIsInNvdXJjZXNDb250ZW50IjpbInZhciBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xuICAgIGFwcC5zZXQoXCJwb3J0XCIsIDMwMDApO1xuICAgIGFwcC5zZXQoXCJqc29uIHNwYWNlc1wiLCA0KTtcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbiAgICBhcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6dHJ1ZX0pKTtcbiAgICAvLyBhcHAudXNlKChyZXMsIHJlcywgbmV4dCkgPT4ge1xuICAgIC8vICAgICBkZWxldGUgcmVxLmJvZHkuaWQ7XG4gICAgLy8gICAgIG5leHQoKTtcbiAgICAvLyB9KTtcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "middlewares.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "module",
        "exports",
        "app",
        "set",
        "use",
        "json",
        "urlencoded",
        "extended"
      ],
      "mappings": ";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACpBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgB,IAAhB;AACAD,EAAAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,CAAvB;AACAD,EAAAA,GAAG,CAACE,GAAJ,CAAQN,UAAU,CAACO,IAAX,EAAR;AACAH,EAAAA,GAAG,CAACE,GAAJ,CAAQN,UAAU,CAACQ,UAAX,CAAsB;AAACC,IAAAA,QAAQ,EAAC;AAAV,GAAtB,CAAR,EAJoB,CAKpB;AACA;AACA;AACA;AACH,CATD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
      "sourcesContent": [
        "var bodyParser = require('body-parser');\n\nmodule.exports = app => {\n    app.set(\"port\", 3000);\n    app.set(\"json spaces\", 4);\n    app.use(bodyParser.json());\n    app.use(bodyParser.urlencoded({extended:true}));\n    // app.use((res, res, next) => {\n    //     delete req.body.id;\n    //     next();\n    // });\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1572679391807
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/routes/category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/routes/category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/routes/category.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/routes/category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar upload = require('../utils/upload'),\n    authController = require('../controllers/auth'),\n    categoryController = require('../controllers/category');\n\nmodule.exports = function (app) {\n  app.route('/categories').get(categoryController.getCategories).post(authController.loginRequired, upload.single('file'), categoryController.createCategory);\n  app.route('/categories/:categoryId')[\"delete\"](authController.loginRequired, categoryController.deleteCategory).put(authController.loginRequired, upload.single('file'), categoryController.updateCategory);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbInVwbG9hZCIsInJlcXVpcmUiLCJhdXRoQ29udHJvbGxlciIsImNhdGVnb3J5Q29udHJvbGxlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJyb3V0ZSIsImdldCIsImdldENhdGVnb3JpZXMiLCJwb3N0IiwibG9naW5SZXF1aXJlZCIsInNpbmdsZSIsImNyZWF0ZUNhdGVnb3J5IiwiZGVsZXRlQ2F0ZWdvcnkiLCJwdXQiLCJ1cGRhdGVDYXRlZ29yeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxpQkFBRCxDQUFwQjtBQUFBLElBQ0lDLGNBQWMsR0FBR0QsT0FBTyxDQUFDLHFCQUFELENBRDVCO0FBQUEsSUFFSUUsa0JBQWtCLEdBQUdGLE9BQU8sQ0FBQyx5QkFBRCxDQUZoQzs7QUFJQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBUztBQUN0QkEsRUFBQUEsR0FBRyxDQUFDQyxLQUFKLENBQVUsYUFBVixFQUNLQyxHQURMLENBQ1NMLGtCQUFrQixDQUFDTSxhQUQ1QixFQUVLQyxJQUZMLENBRVVSLGNBQWMsQ0FBQ1MsYUFGekIsRUFFd0NYLE1BQU0sQ0FBQ1ksTUFBUCxDQUFjLE1BQWQsQ0FGeEMsRUFFK0RULGtCQUFrQixDQUFDVSxjQUZsRjtBQUlBUCxFQUFBQSxHQUFHLENBQUNDLEtBQUosQ0FBVSx5QkFBVixZQUNZTCxjQUFjLENBQUNTLGFBRDNCLEVBQzBDUixrQkFBa0IsQ0FBQ1csY0FEN0QsRUFFS0MsR0FGTCxDQUVTYixjQUFjLENBQUNTLGFBRnhCLEVBRXVDWCxNQUFNLENBQUNZLE1BQVAsQ0FBYyxNQUFkLENBRnZDLEVBRThEVCxrQkFBa0IsQ0FBQ2EsY0FGakY7QUFHSCxDQVJEIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHVwbG9hZCA9IHJlcXVpcmUoJy4uL3V0aWxzL3VwbG9hZCcpLFxuICAgIGF1dGhDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvYXV0aCcpLFxuICAgIGNhdGVnb3J5Q29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2NhdGVnb3J5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKGFwcCkgPT4ge1xuICAgIGFwcC5yb3V0ZSgnL2NhdGVnb3JpZXMnKVxuICAgICAgICAuZ2V0KGNhdGVnb3J5Q29udHJvbGxlci5nZXRDYXRlZ29yaWVzKVxuICAgICAgICAucG9zdChhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCB1cGxvYWQuc2luZ2xlKCdmaWxlJyksIGNhdGVnb3J5Q29udHJvbGxlci5jcmVhdGVDYXRlZ29yeSk7XG4gICAgICAgIFxuICAgIGFwcC5yb3V0ZSgnL2NhdGVnb3JpZXMvOmNhdGVnb3J5SWQnKVxuICAgICAgICAuZGVsZXRlKGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIGNhdGVnb3J5Q29udHJvbGxlci5kZWxldGVDYXRlZ29yeSlcbiAgICAgICAgLnB1dChhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCB1cGxvYWQuc2luZ2xlKCdmaWxlJyksIGNhdGVnb3J5Q29udHJvbGxlci51cGRhdGVDYXRlZ29yeSk7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "upload",
        "require",
        "authController",
        "categoryController",
        "module",
        "exports",
        "app",
        "route",
        "get",
        "getCategories",
        "post",
        "loginRequired",
        "single",
        "createCategory",
        "deleteCategory",
        "put",
        "updateCategory"
      ],
      "mappings": ";;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAD5B;AAAA,IAEIE,kBAAkB,GAAGF,OAAO,CAAC,yBAAD,CAFhC;;AAIAG,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACtBA,EAAAA,GAAG,CAACC,KAAJ,CAAU,aAAV,EACKC,GADL,CACSL,kBAAkB,CAACM,aAD5B,EAEKC,IAFL,CAEUR,cAAc,CAACS,aAFzB,EAEwCX,MAAM,CAACY,MAAP,CAAc,MAAd,CAFxC,EAE+DT,kBAAkB,CAACU,cAFlF;AAIAP,EAAAA,GAAG,CAACC,KAAJ,CAAU,yBAAV,YACYL,cAAc,CAACS,aAD3B,EAC0CR,kBAAkB,CAACW,cAD7D,EAEKC,GAFL,CAESb,cAAc,CAACS,aAFxB,EAEuCX,MAAM,CAACY,MAAP,CAAc,MAAd,CAFvC,EAE8DT,kBAAkB,CAACa,cAFjF;AAGH,CARD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "sourcesContent": [
        "var upload = require('../utils/upload'),\n    authController = require('../controllers/auth'),\n    categoryController = require('../controllers/category');\n\nmodule.exports = (app) => {\n    app.route('/categories')\n        .get(categoryController.getCategories)\n        .post(authController.loginRequired, upload.single('file'), categoryController.createCategory);\n        \n    app.route('/categories/:categoryId')\n        .delete(authController.loginRequired, categoryController.deleteCategory)\n        .put(authController.loginRequired, upload.single('file'), categoryController.updateCategory);\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1572748472754
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/utils/upload.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/utils/upload.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/utils/upload.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/utils/upload.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/utils",
        "sourceFileName": "upload.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar multer = require('multer');\n\nvar storage = multer.diskStorage({\n  destination: function destination(req, file, cb) {\n    cb(null, './public/images');\n  },\n  filename: function filename(req, file, cb) {\n    console.log(file);\n    var filetype = '';\n\n    if (file.mimetype === 'image/gif') {\n      filetype = 'gif';\n    }\n\n    if (file.mimetype === 'image/png') {\n      filetype = 'png';\n    }\n\n    if (file.mimetype === 'image/jpeg') {\n      filetype = 'jpg';\n    }\n\n    cb(null, 'image-' + Date.now() + \".\" + filetype);\n  }\n});\nvar upload = multer({\n  storage: storage\n});\nmodule.exports = upload;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwbG9hZC5qcyJdLCJuYW1lcyI6WyJtdWx0ZXIiLCJyZXF1aXJlIiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXEiLCJmaWxlIiwiY2IiLCJmaWxlbmFtZSIsImNvbnNvbGUiLCJsb2ciLCJmaWxldHlwZSIsIm1pbWV0eXBlIiwiRGF0ZSIsIm5vdyIsInVwbG9hZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUFwQjs7QUFFQSxJQUFJQyxPQUFPLEdBQUdGLE1BQU0sQ0FBQ0csV0FBUCxDQUFtQjtBQUM3QkMsRUFBQUEsV0FBVyxFQUFFLHFCQUFDQyxHQUFELEVBQU1DLElBQU4sRUFBWUMsRUFBWixFQUFtQjtBQUM1QkEsSUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBTyxpQkFBUCxDQUFGO0FBQ0gsR0FINEI7QUFJN0JDLEVBQUFBLFFBQVEsRUFBRSxrQkFBQ0gsR0FBRCxFQUFNQyxJQUFOLEVBQVlDLEVBQVosRUFBbUI7QUFDekJFLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixJQUFaO0FBQ0EsUUFBSUssUUFBUSxHQUFHLEVBQWY7O0FBQ0EsUUFBSUwsSUFBSSxDQUFDTSxRQUFMLEtBQWtCLFdBQXRCLEVBQW1DO0FBQy9CRCxNQUFBQSxRQUFRLEdBQUcsS0FBWDtBQUNIOztBQUNELFFBQUlMLElBQUksQ0FBQ00sUUFBTCxLQUFrQixXQUF0QixFQUFtQztBQUMvQkQsTUFBQUEsUUFBUSxHQUFHLEtBQVg7QUFDSDs7QUFDRCxRQUFJTCxJQUFJLENBQUNNLFFBQUwsS0FBa0IsWUFBdEIsRUFBb0M7QUFDaENELE1BQUFBLFFBQVEsR0FBRyxLQUFYO0FBQ0g7O0FBQ0RKLElBQUFBLEVBQUUsQ0FBQyxJQUFELEVBQU8sV0FBV00sSUFBSSxDQUFDQyxHQUFMLEVBQVgsR0FBd0IsR0FBeEIsR0FBOEJILFFBQXJDLENBQUY7QUFDSDtBQWpCNEIsQ0FBbkIsQ0FBZDtBQW9CQSxJQUFJSSxNQUFNLEdBQUdmLE1BQU0sQ0FBQztBQUNoQkUsRUFBQUEsT0FBTyxFQUFFQTtBQURPLENBQUQsQ0FBbkI7QUFJQWMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmgvRG9jdW1lbnRzL25vZGVqcy9teWZvb2QtYXBpL3V0aWxzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xuXG52YXIgc3RvcmFnZSA9IG11bHRlci5kaXNrU3RvcmFnZSh7XG4gICAgZGVzdGluYXRpb246IChyZXEsIGZpbGUsIGNiKSA9PiB7XG4gICAgICAgIGNiKG51bGwsICcuL3B1YmxpYy9pbWFnZXMnKTtcbiAgICB9LFxuICAgIGZpbGVuYW1lOiAocmVxLCBmaWxlLCBjYikgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhmaWxlKTtcbiAgICAgICAgdmFyIGZpbGV0eXBlID0gJyc7XG4gICAgICAgIGlmIChmaWxlLm1pbWV0eXBlID09PSAnaW1hZ2UvZ2lmJykge1xuICAgICAgICAgICAgZmlsZXR5cGUgPSAnZ2lmJztcbiAgICAgICAgfVxuICAgICAgICBpZiAoZmlsZS5taW1ldHlwZSA9PT0gJ2ltYWdlL3BuZycpIHtcbiAgICAgICAgICAgIGZpbGV0eXBlID0gJ3BuZyc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZpbGUubWltZXR5cGUgPT09ICdpbWFnZS9qcGVnJykge1xuICAgICAgICAgICAgZmlsZXR5cGUgPSAnanBnJztcbiAgICAgICAgfVxuICAgICAgICBjYihudWxsLCAnaW1hZ2UtJyArIERhdGUubm93KCkgKyBcIi5cIiArIGZpbGV0eXBlKTtcbiAgICB9XG59KTtcblxudmFyIHVwbG9hZCA9IG11bHRlcih7XG4gICAgc3RvcmFnZTogc3RvcmFnZVxufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gdXBsb2FkOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "upload.js"
      ],
      "names": [
        "multer",
        "require",
        "storage",
        "diskStorage",
        "destination",
        "req",
        "file",
        "cb",
        "filename",
        "console",
        "log",
        "filetype",
        "mimetype",
        "Date",
        "now",
        "upload",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGF,MAAM,CAACG,WAAP,CAAmB;AAC7BC,EAAAA,WAAW,EAAE,qBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC5BA,IAAAA,EAAE,CAAC,IAAD,EAAO,iBAAP,CAAF;AACH,GAH4B;AAI7BC,EAAAA,QAAQ,EAAE,kBAACH,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AACzBE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,QAAIK,QAAQ,GAAG,EAAf;;AACA,QAAIL,IAAI,CAACM,QAAL,KAAkB,WAAtB,EAAmC;AAC/BD,MAAAA,QAAQ,GAAG,KAAX;AACH;;AACD,QAAIL,IAAI,CAACM,QAAL,KAAkB,WAAtB,EAAmC;AAC/BD,MAAAA,QAAQ,GAAG,KAAX;AACH;;AACD,QAAIL,IAAI,CAACM,QAAL,KAAkB,YAAtB,EAAoC;AAChCD,MAAAA,QAAQ,GAAG,KAAX;AACH;;AACDJ,IAAAA,EAAE,CAAC,IAAD,EAAO,WAAWM,IAAI,CAACC,GAAL,EAAX,GAAwB,GAAxB,GAA8BH,QAArC,CAAF;AACH;AAjB4B,CAAnB,CAAd;AAoBA,IAAII,MAAM,GAAGf,MAAM,CAAC;AAChBE,EAAAA,OAAO,EAAEA;AADO,CAAD,CAAnB;AAIAc,MAAM,CAACC,OAAP,GAAiBF,MAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/utils",
      "sourcesContent": [
        "var multer = require('multer');\n\nvar storage = multer.diskStorage({\n    destination: (req, file, cb) => {\n        cb(null, './public/images');\n    },\n    filename: (req, file, cb) => {\n        console.log(file);\n        var filetype = '';\n        if (file.mimetype === 'image/gif') {\n            filetype = 'gif';\n        }\n        if (file.mimetype === 'image/png') {\n            filetype = 'png';\n        }\n        if (file.mimetype === 'image/jpeg') {\n            filetype = 'jpg';\n        }\n        cb(null, 'image-' + Date.now() + \".\" + filetype);\n    }\n});\n\nvar upload = multer({\n    storage: storage\n});\n\nmodule.exports = upload;"
      ]
    },
    "sourceType": "script",
    "mtime": 1573395525895
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/controllers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/controllers/auth.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar User = require('../models/user'),\n    Constants = require('../utils/constants'),\n    jwt = require('jsonwebtoken');\n\nmodule.exports.loginRequired = function (req, res, next) {\n  var token = req.headers.authorization;\n  if (!token) return res.status(401).json({\n    message: 'Access denied. No token provided.'\n  });\n\n  try {\n    var decoded = jwt.verify(token, process.env.API_PRIVATE_KEY);\n    console.log(decoded);\n    req.user = decoded;\n    next();\n  } catch (ex) {\n    return res.status(401).json({\n      message: Constants.MESSAGE_UNAUTHORIZED,\n      status: Constants.STATUS_ERROR\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiVXNlciIsInJlcXVpcmUiLCJDb25zdGFudHMiLCJqd3QiLCJtb2R1bGUiLCJleHBvcnRzIiwibG9naW5SZXF1aXJlZCIsInJlcSIsInJlcyIsIm5leHQiLCJ0b2tlbiIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJkZWNvZGVkIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkFQSV9QUklWQVRFX0tFWSIsImNvbnNvbGUiLCJsb2ciLCJ1c2VyIiwiZXgiLCJNRVNTQUdFX1VOQVVUSE9SSVpFRCIsIlNUQVRVU19FUlJPUiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUFsQjtBQUFBLElBQ0lDLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG9CQUFELENBRHZCO0FBQUEsSUFFSUUsR0FBRyxHQUFHRixPQUFPLENBQUMsY0FBRCxDQUZqQjs7QUFJQUcsTUFBTSxDQUFDQyxPQUFQLENBQWVDLGFBQWYsR0FBK0IsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUNyRCxNQUFNQyxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZQyxhQUExQjtBQUVBLE1BQUksQ0FBQ0YsS0FBTCxFQUFZLE9BQU9GLEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3BDQyxJQUFBQSxPQUFPLEVBQUU7QUFEMkIsR0FBckIsQ0FBUDs7QUFJWixNQUFJO0FBQ0EsUUFBTUMsT0FBTyxHQUFHYixHQUFHLENBQUNjLE1BQUosQ0FBV1AsS0FBWCxFQUFrQlEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLGVBQTlCLENBQWhCO0FBQ0FDLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTixPQUFaO0FBQ0FULElBQUFBLEdBQUcsQ0FBQ2dCLElBQUosR0FBV1AsT0FBWDtBQUNBUCxJQUFBQSxJQUFJO0FBQ1AsR0FMRCxDQUtFLE9BQU1lLEVBQU4sRUFBVTtBQUNSLFdBQU9oQixHQUFHLENBQUNLLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN4QkMsTUFBQUEsT0FBTyxFQUFFYixTQUFTLENBQUN1QixvQkFESztBQUV4QlosTUFBQUEsTUFBTSxFQUFFWCxTQUFTLENBQUN3QjtBQUZNLEtBQXJCLENBQVA7QUFJSDtBQUNKLENBbEJEIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvY29udHJvbGxlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgVXNlciA9IHJlcXVpcmUoJy4uL21vZGVscy91c2VyJyksXG4gICAgQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnRzJyksXG4gICAgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG5cbm1vZHVsZS5leHBvcnRzLmxvZ2luUmVxdWlyZWQgPSBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcbiAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb247XG5cbiAgICBpZiAoIXRva2VuKSByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oe1xuICAgICAgICBtZXNzYWdlOiAnQWNjZXNzIGRlbmllZC4gTm8gdG9rZW4gcHJvdmlkZWQuJ1xuICAgIH0pO1xuXG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGVjb2RlZCA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkFQSV9QUklWQVRFX0tFWSk7XG4gICAgICAgIGNvbnNvbGUubG9nKGRlY29kZWQpO1xuICAgICAgICByZXEudXNlciA9IGRlY29kZWQ7XG4gICAgICAgIG5leHQoKTtcbiAgICB9IGNhdGNoKGV4KSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9VTkFVVEhPUklaRUQsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgfSk7XG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "User",
        "require",
        "Constants",
        "jwt",
        "module",
        "exports",
        "loginRequired",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "authorization",
        "status",
        "json",
        "message",
        "decoded",
        "verify",
        "process",
        "env",
        "API_PRIVATE_KEY",
        "console",
        "log",
        "user",
        "ex",
        "MESSAGE_UNAUTHORIZED",
        "STATUS_ERROR"
      ],
      "mappings": ";;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAAlB;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CADvB;AAAA,IAEIE,GAAG,GAAGF,OAAO,CAAC,cAAD,CAFjB;;AAIAG,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+B,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACrD,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,aAA1B;AAEA,MAAI,CAACF,KAAL,EAAY,OAAOF,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpCC,IAAAA,OAAO,EAAE;AAD2B,GAArB,CAAP;;AAIZ,MAAI;AACA,QAAMC,OAAO,GAAGb,GAAG,CAACc,MAAJ,CAAWP,KAAX,EAAkBQ,OAAO,CAACC,GAAR,CAAYC,eAA9B,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACAT,IAAAA,GAAG,CAACgB,IAAJ,GAAWP,OAAX;AACAP,IAAAA,IAAI;AACP,GALD,CAKE,OAAMe,EAAN,EAAU;AACR,WAAOhB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,MAAAA,OAAO,EAAEb,SAAS,CAACuB,oBADK;AAExBZ,MAAAA,MAAM,EAAEX,SAAS,CAACwB;AAFM,KAArB,CAAP;AAIH;AACJ,CAlBD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "sourcesContent": [
        "var User = require('../models/user'),\n    Constants = require('../utils/constants'),\n    jwt = require('jsonwebtoken');\n\nmodule.exports.loginRequired = function (req, res, next) {\n    const token = req.headers.authorization;\n\n    if (!token) return res.status(401).json({\n        message: 'Access denied. No token provided.'\n    });\n\n    try {\n        const decoded = jwt.verify(token, process.env.API_PRIVATE_KEY);\n        console.log(decoded);\n        req.user = decoded;\n        next();\n    } catch(ex) {\n        return res.status(401).json({\n            message: Constants.MESSAGE_UNAUTHORIZED,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1571155755164
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/models/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose'),\n    bcrypt = require('bcrypt'),\n    validator = require('validator'),\n    Constants = require('../utils/constants');\n\nvar userSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    trim: true,\n    required: [true, 'Kindly enter the name']\n  },\n  email: {\n    type: String,\n    lowercase: true,\n    trim: true,\n    required: true,\n    validate: {\n      validator: validator.isEmail,\n      message: '{VALUE} is not a valid email',\n      isAsync: false\n    }\n  },\n  hash_password: {\n    type: String,\n    required: true\n  },\n  phone: {\n    type: String,\n    validate: {\n      validator: function validator(v) {\n        return /\\d{10}/.test(v);\n      },\n      message: function message(props) {\n        return \"\".concat(props.value, \" is not a valid phone number!\");\n      }\n    },\n    required: [true, 'User phone number required']\n  },\n  birthday: {\n    type: String\n  },\n  date_created: {\n    type: Date,\n    \"default\": Date.now\n  },\n  location: [Number],\n  role: {\n    type: Number,\n    \"default\": Constants.ROLE_FARMER\n  },\n  categories: [String]\n});\n\nuserSchema.methods.comparePassword = function (password) {\n  return bcrypt.compareSync(password, this.hash_password);\n};\n\nvar User = mongoose.model('User', userSchema, 'users');\nmodule.exports = User;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiYmNyeXB0IiwidmFsaWRhdG9yIiwiQ29uc3RhbnRzIiwidXNlclNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwidHJpbSIsInJlcXVpcmVkIiwiZW1haWwiLCJsb3dlcmNhc2UiLCJ2YWxpZGF0ZSIsImlzRW1haWwiLCJtZXNzYWdlIiwiaXNBc3luYyIsImhhc2hfcGFzc3dvcmQiLCJwaG9uZSIsInYiLCJ0ZXN0IiwicHJvcHMiLCJ2YWx1ZSIsImJpcnRoZGF5IiwiZGF0ZV9jcmVhdGVkIiwiRGF0ZSIsIm5vdyIsImxvY2F0aW9uIiwiTnVtYmVyIiwicm9sZSIsIlJPTEVfRkFSTUVSIiwiY2F0ZWdvcmllcyIsIm1ldGhvZHMiLCJjb21wYXJlUGFzc3dvcmQiLCJwYXNzd29yZCIsImNvbXBhcmVTeW5jIiwiVXNlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCO0FBQUEsSUFDSUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQURwQjtBQUFBLElBRUlFLFNBQVMsR0FBR0YsT0FBTyxDQUFDLFdBQUQsQ0FGdkI7QUFBQSxJQUdJRyxTQUFTLEdBQUdILE9BQU8sQ0FBQyxvQkFBRCxDQUh2Qjs7QUFLQSxJQUFJSSxVQUFVLEdBQUcsSUFBSUwsUUFBUSxDQUFDTSxNQUFiLENBQW9CO0FBQ2pDQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsSUFBSSxFQUFFQyxNQURKO0FBRUZDLElBQUFBLElBQUksRUFBRSxJQUZKO0FBR0ZDLElBQUFBLFFBQVEsRUFBRSxDQUFDLElBQUQsRUFBTyx1QkFBUDtBQUhSLEdBRDJCO0FBTWpDQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEosSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUhJLElBQUFBLFNBQVMsRUFBRSxJQUZSO0FBR0hILElBQUFBLElBQUksRUFBRSxJQUhIO0FBSUhDLElBQUFBLFFBQVEsRUFBRSxJQUpQO0FBS0hHLElBQUFBLFFBQVEsRUFBRTtBQUNOWCxNQUFBQSxTQUFTLEVBQUVBLFNBQVMsQ0FBQ1ksT0FEZjtBQUVOQyxNQUFBQSxPQUFPLEVBQUUsOEJBRkg7QUFHTkMsTUFBQUEsT0FBTyxFQUFFO0FBSEg7QUFMUCxHQU4wQjtBQWlCakNDLEVBQUFBLGFBQWEsRUFBRTtBQUNYVixJQUFBQSxJQUFJLEVBQUVDLE1BREs7QUFFWEUsSUFBQUEsUUFBUSxFQUFFO0FBRkMsR0FqQmtCO0FBcUJqQ1EsRUFBQUEsS0FBSyxFQUFFO0FBQ0hYLElBQUFBLElBQUksRUFBRUMsTUFESDtBQUVISyxJQUFBQSxRQUFRLEVBQUU7QUFDTlgsTUFBQUEsU0FBUyxFQUFFLG1CQUFVaUIsQ0FBVixFQUFhO0FBQ3BCLGVBQU8sU0FBU0MsSUFBVCxDQUFjRCxDQUFkLENBQVA7QUFDSCxPQUhLO0FBSU5KLE1BQUFBLE9BQU8sRUFBRSxpQkFBQU0sS0FBSztBQUFBLHlCQUFPQSxLQUFLLENBQUNDLEtBQWI7QUFBQTtBQUpSLEtBRlA7QUFRSFosSUFBQUEsUUFBUSxFQUFFLENBQUMsSUFBRCxFQUFPLDRCQUFQO0FBUlAsR0FyQjBCO0FBK0JqQ2EsRUFBQUEsUUFBUSxFQUFFO0FBQ05oQixJQUFBQSxJQUFJLEVBQUVDO0FBREEsR0EvQnVCO0FBa0NqQ2dCLEVBQUFBLFlBQVksRUFBRTtBQUNWakIsSUFBQUEsSUFBSSxFQUFFa0IsSUFESTtBQUVWLGVBQVNBLElBQUksQ0FBQ0M7QUFGSixHQWxDbUI7QUFzQ2pDQyxFQUFBQSxRQUFRLEVBQUUsQ0FBQ0MsTUFBRCxDQXRDdUI7QUF1Q2pDQyxFQUFBQSxJQUFJLEVBQUU7QUFDRnRCLElBQUFBLElBQUksRUFBRXFCLE1BREo7QUFFRixlQUFTekIsU0FBUyxDQUFDMkI7QUFGakIsR0F2QzJCO0FBMkNqQ0MsRUFBQUEsVUFBVSxFQUFFLENBQUN2QixNQUFEO0FBM0NxQixDQUFwQixDQUFqQjs7QUE4Q0FKLFVBQVUsQ0FBQzRCLE9BQVgsQ0FBbUJDLGVBQW5CLEdBQXFDLFVBQVVDLFFBQVYsRUFBb0I7QUFDckQsU0FBT2pDLE1BQU0sQ0FBQ2tDLFdBQVAsQ0FBbUJELFFBQW5CLEVBQTZCLEtBQUtqQixhQUFsQyxDQUFQO0FBQ0gsQ0FGRDs7QUFJQSxJQUFJbUIsSUFBSSxHQUFHckMsUUFBUSxDQUFDc0MsS0FBVCxDQUFlLE1BQWYsRUFBdUJqQyxVQUF2QixFQUFtQyxPQUFuQyxDQUFYO0FBRUFrQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILElBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKSxcbiAgICBiY3J5cHQgPSByZXF1aXJlKCdiY3J5cHQnKSxcbiAgICB2YWxpZGF0b3IgPSByZXF1aXJlKCd2YWxpZGF0b3InKSxcbiAgICBDb25zdGFudHMgPSByZXF1aXJlKCcuLi91dGlscy9jb25zdGFudHMnKTtcblxudmFyIHVzZXJTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgICBuYW1lOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAnS2luZGx5IGVudGVyIHRoZSBuYW1lJ11cbiAgICB9LFxuICAgIGVtYWlsOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgbG93ZXJjYXNlOiB0cnVlLFxuICAgICAgICB0cmltOiB0cnVlLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgICAgIHZhbGlkYXRvcjogdmFsaWRhdG9yLmlzRW1haWwsXG4gICAgICAgICAgICBtZXNzYWdlOiAne1ZBTFVFfSBpcyBub3QgYSB2YWxpZCBlbWFpbCcsXG4gICAgICAgICAgICBpc0FzeW5jOiBmYWxzZVxuICAgICAgICB9XG4gICAgfSxcbiAgICBoYXNoX3Bhc3N3b3JkOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHBob25lOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgdmFsaWRhdGU6IHtcbiAgICAgICAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gL1xcZHsxMH0vLnRlc3Qodik7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWVzc2FnZTogcHJvcHMgPT4gYCR7cHJvcHMudmFsdWV9IGlzIG5vdCBhIHZhbGlkIHBob25lIG51bWJlciFgXG4gICAgICAgIH0sXG4gICAgICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ1VzZXIgcGhvbmUgbnVtYmVyIHJlcXVpcmVkJ11cbiAgICB9LFxuICAgIGJpcnRoZGF5OiB7XG4gICAgICAgIHR5cGU6IFN0cmluZ1xuICAgIH0sXG4gICAgZGF0ZV9jcmVhdGVkOiB7XG4gICAgICAgIHR5cGU6IERhdGUsXG4gICAgICAgIGRlZmF1bHQ6IERhdGUubm93XG4gICAgfSxcbiAgICBsb2NhdGlvbjogW051bWJlcl0sXG4gICAgcm9sZToge1xuICAgICAgICB0eXBlOiBOdW1iZXIsXG4gICAgICAgIGRlZmF1bHQ6IENvbnN0YW50cy5ST0xFX0ZBUk1FUlxuICAgIH0sXG4gICAgY2F0ZWdvcmllczogW1N0cmluZ11cbn0pO1xuXG51c2VyU2NoZW1hLm1ldGhvZHMuY29tcGFyZVBhc3N3b3JkID0gZnVuY3Rpb24gKHBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIGJjcnlwdC5jb21wYXJlU3luYyhwYXNzd29yZCwgdGhpcy5oYXNoX3Bhc3N3b3JkKTtcbn07XG5cbnZhciBVc2VyID0gbW9uZ29vc2UubW9kZWwoJ1VzZXInLCB1c2VyU2NoZW1hLCAndXNlcnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBVc2VyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "mongoose",
        "require",
        "bcrypt",
        "validator",
        "Constants",
        "userSchema",
        "Schema",
        "name",
        "type",
        "String",
        "trim",
        "required",
        "email",
        "lowercase",
        "validate",
        "isEmail",
        "message",
        "isAsync",
        "hash_password",
        "phone",
        "v",
        "test",
        "props",
        "value",
        "birthday",
        "date_created",
        "Date",
        "now",
        "location",
        "Number",
        "role",
        "ROLE_FARMER",
        "categories",
        "methods",
        "comparePassword",
        "password",
        "compareSync",
        "User",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;AAAA,IACIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CADpB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,WAAD,CAFvB;AAAA,IAGIG,SAAS,GAAGH,OAAO,CAAC,oBAAD,CAHvB;;AAKA,IAAII,UAAU,GAAG,IAAIL,QAAQ,CAACM,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,IAAI,EAAE,IAFJ;AAGFC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,uBAAP;AAHR,GAD2B;AAMjCC,EAAAA,KAAK,EAAE;AACHJ,IAAAA,IAAI,EAAEC,MADH;AAEHI,IAAAA,SAAS,EAAE,IAFR;AAGHH,IAAAA,IAAI,EAAE,IAHH;AAIHC,IAAAA,QAAQ,EAAE,IAJP;AAKHG,IAAAA,QAAQ,EAAE;AACNX,MAAAA,SAAS,EAAEA,SAAS,CAACY,OADf;AAENC,MAAAA,OAAO,EAAE,8BAFH;AAGNC,MAAAA,OAAO,EAAE;AAHH;AALP,GAN0B;AAiBjCC,EAAAA,aAAa,EAAE;AACXV,IAAAA,IAAI,EAAEC,MADK;AAEXE,IAAAA,QAAQ,EAAE;AAFC,GAjBkB;AAqBjCQ,EAAAA,KAAK,EAAE;AACHX,IAAAA,IAAI,EAAEC,MADH;AAEHK,IAAAA,QAAQ,EAAE;AACNX,MAAAA,SAAS,EAAE,mBAAUiB,CAAV,EAAa;AACpB,eAAO,SAASC,IAAT,CAAcD,CAAd,CAAP;AACH,OAHK;AAINJ,MAAAA,OAAO,EAAE,iBAAAM,KAAK;AAAA,yBAAOA,KAAK,CAACC,KAAb;AAAA;AAJR,KAFP;AAQHZ,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,4BAAP;AARP,GArB0B;AA+BjCa,EAAAA,QAAQ,EAAE;AACNhB,IAAAA,IAAI,EAAEC;AADA,GA/BuB;AAkCjCgB,EAAAA,YAAY,EAAE;AACVjB,IAAAA,IAAI,EAAEkB,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ,GAlCmB;AAsCjCC,EAAAA,QAAQ,EAAE,CAACC,MAAD,CAtCuB;AAuCjCC,EAAAA,IAAI,EAAE;AACFtB,IAAAA,IAAI,EAAEqB,MADJ;AAEF,eAASzB,SAAS,CAAC2B;AAFjB,GAvC2B;AA2CjCC,EAAAA,UAAU,EAAE,CAACvB,MAAD;AA3CqB,CAApB,CAAjB;;AA8CAJ,UAAU,CAAC4B,OAAX,CAAmBC,eAAnB,GAAqC,UAAUC,QAAV,EAAoB;AACrD,SAAOjC,MAAM,CAACkC,WAAP,CAAmBD,QAAnB,EAA6B,KAAKjB,aAAlC,CAAP;AACH,CAFD;;AAIA,IAAImB,IAAI,GAAGrC,QAAQ,CAACsC,KAAT,CAAe,MAAf,EAAuBjC,UAAvB,EAAmC,OAAnC,CAAX;AAEAkC,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "sourcesContent": [
        "var mongoose = require('mongoose'),\n    bcrypt = require('bcrypt'),\n    validator = require('validator'),\n    Constants = require('../utils/constants');\n\nvar userSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        trim: true,\n        required: [true, 'Kindly enter the name']\n    },\n    email: {\n        type: String,\n        lowercase: true,\n        trim: true,\n        required: true,\n        validate: {\n            validator: validator.isEmail,\n            message: '{VALUE} is not a valid email',\n            isAsync: false\n        }\n    },\n    hash_password: {\n        type: String,\n        required: true\n    },\n    phone: {\n        type: String,\n        validate: {\n            validator: function (v) {\n                return /\\d{10}/.test(v);\n            },\n            message: props => `${props.value} is not a valid phone number!`\n        },\n        required: [true, 'User phone number required']\n    },\n    birthday: {\n        type: String\n    },\n    date_created: {\n        type: Date,\n        default: Date.now\n    },\n    location: [Number],\n    role: {\n        type: Number,\n        default: Constants.ROLE_FARMER\n    },\n    categories: [String]\n});\n\nuserSchema.methods.comparePassword = function (password) {\n    return bcrypt.compareSync(password, this.hash_password);\n};\n\nvar User = mongoose.model('User', userSchema, 'users');\n\nmodule.exports = User;"
      ]
    },
    "sourceType": "script",
    "mtime": 1575554869393
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/utils/constants.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/utils/constants.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/utils/constants.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/utils/constants.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/utils",
        "sourceFileName": "constants.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = Object.freeze({\n  /**\n   * Success 2xx\n   */\n  STATUS_200: 'success',\n  MESSAGE_SUCCESS: 'ok',\n  MESSAGE_204: 'Data empty',\n  STATUS_204: 'Not ok',\n  MESSAGE_UPDATED: 'resource updated successfully',\n  MESSAGE_DELETED: 'resource deleted successfully',\n\n  /**\n   * Error 4xx, 5xx \n   */\n  STATUS_400: 'Bad Request',\n  MESSAGE_400: 'Bad request',\n  MESSAGE_401: 'Authentication failed. Invalid user or password.',\n  MESSAGE_404: 'Not Found Error',\n  STATUS_ERROR: 'fail',\n  MESSAGE_UNAUTHORIZED: 'Unauthorized user!',\n  MESSAGE_DELETE: 'Delete successful!',\n  MESSAGE_NOT_FOUND: 'Not found!',\n  MESSAGE_UNKNOWN_SEVER_ERROR: 'Unknown server error!',\n  MESSAGE_500: 'error',\n  MESSAGE_INVALID_PASSWORD: 'Invalid password. Password validation is at least 6 character!',\n  MESSAGE_ERROR_DUPLICATE: 'ERROR_DUPLICATE',\n\n  /* Number */\n  AMOUNT_ITEM_IN_PER_PAGE: 10,\n  MESSAGE_OUT_OF_FOOD: \"Sản phẩm đã hết hàng!\",\n\n  /* String */\n  MY_FOOD_URL: 'http://localhost:3000/',\n  PATH_IMG: 'images/',\n  PATH_PUBLIC: 'public/',\n\n  /* Order status */\n  REQUESTING: 'Requesting',\n  APPROVED: 'Approved',\n  REJECTED: 'Rejected',\n  CANCELED: 'Canceled',\n  DONE: 'Done',\n\n  /* Time */\n  AM: \"AM\",\n\n  /* Food */\n\n  /* Role */\n  ROLE_ADMIN: 1,\n  ROLE_FARMER: 2,\n  ROLE_BUYER: 3\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50cy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0IiwiZnJlZXplIiwiU1RBVFVTXzIwMCIsIk1FU1NBR0VfU1VDQ0VTUyIsIk1FU1NBR0VfMjA0IiwiU1RBVFVTXzIwNCIsIk1FU1NBR0VfVVBEQVRFRCIsIk1FU1NBR0VfREVMRVRFRCIsIlNUQVRVU180MDAiLCJNRVNTQUdFXzQwMCIsIk1FU1NBR0VfNDAxIiwiTUVTU0FHRV80MDQiLCJTVEFUVVNfRVJST1IiLCJNRVNTQUdFX1VOQVVUSE9SSVpFRCIsIk1FU1NBR0VfREVMRVRFIiwiTUVTU0FHRV9OT1RfRk9VTkQiLCJNRVNTQUdFX1VOS05PV05fU0VWRVJfRVJST1IiLCJNRVNTQUdFXzUwMCIsIk1FU1NBR0VfSU5WQUxJRF9QQVNTV09SRCIsIk1FU1NBR0VfRVJST1JfRFVQTElDQVRFIiwiQU1PVU5UX0lURU1fSU5fUEVSX1BBR0UiLCJNRVNTQUdFX09VVF9PRl9GT09EIiwiTVlfRk9PRF9VUkwiLCJQQVRIX0lNRyIsIlBBVEhfUFVCTElDIiwiUkVRVUVTVElORyIsIkFQUFJPVkVEIiwiUkVKRUNURUQiLCJDQU5DRUxFRCIsIkRPTkUiLCJBTSIsIlJPTEVfQURNSU4iLCJST0xFX0ZBUk1FUiIsIlJPTEVfQlVZRVIiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkMsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDM0I7OztBQUdBQyxFQUFBQSxVQUFVLEVBQUUsU0FKZTtBQUszQkMsRUFBQUEsZUFBZSxFQUFFLElBTFU7QUFNM0JDLEVBQUFBLFdBQVcsRUFBRSxZQU5jO0FBTzNCQyxFQUFBQSxVQUFVLEVBQUUsUUFQZTtBQVEzQkMsRUFBQUEsZUFBZSxFQUFFLCtCQVJVO0FBUzNCQyxFQUFBQSxlQUFlLEVBQUUsK0JBVFU7O0FBVTNCOzs7QUFHQUMsRUFBQUEsVUFBVSxFQUFFLGFBYmU7QUFjM0JDLEVBQUFBLFdBQVcsRUFBRSxhQWRjO0FBZTNCQyxFQUFBQSxXQUFXLEVBQUUsa0RBZmM7QUFnQjNCQyxFQUFBQSxXQUFXLEVBQUUsaUJBaEJjO0FBaUIzQkMsRUFBQUEsWUFBWSxFQUFFLE1BakJhO0FBa0IzQkMsRUFBQUEsb0JBQW9CLEVBQUUsb0JBbEJLO0FBbUIzQkMsRUFBQUEsY0FBYyxFQUFFLG9CQW5CVztBQW9CM0JDLEVBQUFBLGlCQUFpQixFQUFFLFlBcEJRO0FBcUIzQkMsRUFBQUEsMkJBQTJCLEVBQUUsdUJBckJGO0FBc0IzQkMsRUFBQUEsV0FBVyxFQUFFLE9BdEJjO0FBdUIzQkMsRUFBQUEsd0JBQXdCLEVBQUUsZ0VBdkJDO0FBd0IzQkMsRUFBQUEsdUJBQXVCLEVBQUUsaUJBeEJFOztBQXlCM0I7QUFDQUMsRUFBQUEsdUJBQXVCLEVBQUUsRUExQkU7QUEyQjNCQyxFQUFBQSxtQkFBbUIsRUFBRSx1QkEzQk07O0FBNkIzQjtBQUNBQyxFQUFBQSxXQUFXLEVBQUUsd0JBOUJjO0FBK0IzQkMsRUFBQUEsUUFBUSxFQUFFLFNBL0JpQjtBQWdDM0JDLEVBQUFBLFdBQVcsRUFBRSxTQWhDYzs7QUFpQzNCO0FBQ0FDLEVBQUFBLFVBQVUsRUFBRSxZQWxDZTtBQW1DM0JDLEVBQUFBLFFBQVEsRUFBRSxVQW5DaUI7QUFvQzNCQyxFQUFBQSxRQUFRLEVBQUUsVUFwQ2lCO0FBcUMzQkMsRUFBQUEsUUFBUSxFQUFFLFVBckNpQjtBQXNDM0JDLEVBQUFBLElBQUksRUFBRSxNQXRDcUI7O0FBd0MzQjtBQUNBQyxFQUFBQSxFQUFFLEVBQUcsSUF6Q3NCOztBQTBDM0I7O0FBRUE7QUFDQUMsRUFBQUEsVUFBVSxFQUFHLENBN0NjO0FBOEMzQkMsRUFBQUEsV0FBVyxFQUFHLENBOUNhO0FBK0MzQkMsRUFBQUEsVUFBVSxFQUFHO0FBL0NjLENBQWQsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5oL0RvY3VtZW50cy9ub2RlanMvbXlmb29kLWFwaS91dGlscyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmZyZWV6ZSh7XG4gICAgLyoqXG4gICAgICogU3VjY2VzcyAyeHhcbiAgICAgKi9cbiAgICBTVEFUVVNfMjAwOiAnc3VjY2VzcycsXG4gICAgTUVTU0FHRV9TVUNDRVNTOiAnb2snLFxuICAgIE1FU1NBR0VfMjA0OiAnRGF0YSBlbXB0eScsXG4gICAgU1RBVFVTXzIwNDogJ05vdCBvaycsXG4gICAgTUVTU0FHRV9VUERBVEVEOiAncmVzb3VyY2UgdXBkYXRlZCBzdWNjZXNzZnVsbHknLFxuICAgIE1FU1NBR0VfREVMRVRFRDogJ3Jlc291cmNlIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICAvKipcbiAgICAgKiBFcnJvciA0eHgsIDV4eCBcbiAgICAgKi9cbiAgICBTVEFUVVNfNDAwOiAnQmFkIFJlcXVlc3QnLFxuICAgIE1FU1NBR0VfNDAwOiAnQmFkIHJlcXVlc3QnLFxuICAgIE1FU1NBR0VfNDAxOiAnQXV0aGVudGljYXRpb24gZmFpbGVkLiBJbnZhbGlkIHVzZXIgb3IgcGFzc3dvcmQuJyxcbiAgICBNRVNTQUdFXzQwNDogJ05vdCBGb3VuZCBFcnJvcicsXG4gICAgU1RBVFVTX0VSUk9SOiAnZmFpbCcsXG4gICAgTUVTU0FHRV9VTkFVVEhPUklaRUQ6ICdVbmF1dGhvcml6ZWQgdXNlciEnLFxuICAgIE1FU1NBR0VfREVMRVRFOiAnRGVsZXRlIHN1Y2Nlc3NmdWwhJyxcbiAgICBNRVNTQUdFX05PVF9GT1VORDogJ05vdCBmb3VuZCEnLFxuICAgIE1FU1NBR0VfVU5LTk9XTl9TRVZFUl9FUlJPUjogJ1Vua25vd24gc2VydmVyIGVycm9yIScsXG4gICAgTUVTU0FHRV81MDA6ICdlcnJvcicsXG4gICAgTUVTU0FHRV9JTlZBTElEX1BBU1NXT1JEOiAnSW52YWxpZCBwYXNzd29yZC4gUGFzc3dvcmQgdmFsaWRhdGlvbiBpcyBhdCBsZWFzdCA2IGNoYXJhY3RlciEnLFxuICAgIE1FU1NBR0VfRVJST1JfRFVQTElDQVRFOiAnRVJST1JfRFVQTElDQVRFJyxcbiAgICAvKiBOdW1iZXIgKi9cbiAgICBBTU9VTlRfSVRFTV9JTl9QRVJfUEFHRTogMTAsXG4gICAgTUVTU0FHRV9PVVRfT0ZfRk9PRDogXCJT4bqjbiBwaOG6qW0gxJHDoyBo4bq/dCBow6BuZyFcIixcblxuICAgIC8qIFN0cmluZyAqL1xuICAgIE1ZX0ZPT0RfVVJMOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwLycsXG4gICAgUEFUSF9JTUc6ICdpbWFnZXMvJyxcbiAgICBQQVRIX1BVQkxJQzogJ3B1YmxpYy8nLFxuICAgIC8qIE9yZGVyIHN0YXR1cyAqL1xuICAgIFJFUVVFU1RJTkc6ICdSZXF1ZXN0aW5nJyxcbiAgICBBUFBST1ZFRDogJ0FwcHJvdmVkJyxcbiAgICBSRUpFQ1RFRDogJ1JlamVjdGVkJyxcbiAgICBDQU5DRUxFRDogJ0NhbmNlbGVkJyxcbiAgICBET05FOiAnRG9uZScsXG5cbiAgICAvKiBUaW1lICovXG4gICAgQU0gOiBcIkFNXCIsXG4gICAgLyogRm9vZCAqL1xuXG4gICAgLyogUm9sZSAqL1xuICAgIFJPTEVfQURNSU4gOiAxLFxuICAgIFJPTEVfRkFSTUVSIDogMixcbiAgICBST0xFX0JVWUVSIDogM1xufSk7Il19",
    "map": {
      "version": 3,
      "sources": [
        "constants.js"
      ],
      "names": [
        "module",
        "exports",
        "Object",
        "freeze",
        "STATUS_200",
        "MESSAGE_SUCCESS",
        "MESSAGE_204",
        "STATUS_204",
        "MESSAGE_UPDATED",
        "MESSAGE_DELETED",
        "STATUS_400",
        "MESSAGE_400",
        "MESSAGE_401",
        "MESSAGE_404",
        "STATUS_ERROR",
        "MESSAGE_UNAUTHORIZED",
        "MESSAGE_DELETE",
        "MESSAGE_NOT_FOUND",
        "MESSAGE_UNKNOWN_SEVER_ERROR",
        "MESSAGE_500",
        "MESSAGE_INVALID_PASSWORD",
        "MESSAGE_ERROR_DUPLICATE",
        "AMOUNT_ITEM_IN_PER_PAGE",
        "MESSAGE_OUT_OF_FOOD",
        "MY_FOOD_URL",
        "PATH_IMG",
        "PATH_PUBLIC",
        "REQUESTING",
        "APPROVED",
        "REJECTED",
        "CANCELED",
        "DONE",
        "AM",
        "ROLE_ADMIN",
        "ROLE_FARMER",
        "ROLE_BUYER"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,MAAP,CAAc;AAC3B;;;AAGAC,EAAAA,UAAU,EAAE,SAJe;AAK3BC,EAAAA,eAAe,EAAE,IALU;AAM3BC,EAAAA,WAAW,EAAE,YANc;AAO3BC,EAAAA,UAAU,EAAE,QAPe;AAQ3BC,EAAAA,eAAe,EAAE,+BARU;AAS3BC,EAAAA,eAAe,EAAE,+BATU;;AAU3B;;;AAGAC,EAAAA,UAAU,EAAE,aAbe;AAc3BC,EAAAA,WAAW,EAAE,aAdc;AAe3BC,EAAAA,WAAW,EAAE,kDAfc;AAgB3BC,EAAAA,WAAW,EAAE,iBAhBc;AAiB3BC,EAAAA,YAAY,EAAE,MAjBa;AAkB3BC,EAAAA,oBAAoB,EAAE,oBAlBK;AAmB3BC,EAAAA,cAAc,EAAE,oBAnBW;AAoB3BC,EAAAA,iBAAiB,EAAE,YApBQ;AAqB3BC,EAAAA,2BAA2B,EAAE,uBArBF;AAsB3BC,EAAAA,WAAW,EAAE,OAtBc;AAuB3BC,EAAAA,wBAAwB,EAAE,gEAvBC;AAwB3BC,EAAAA,uBAAuB,EAAE,iBAxBE;;AAyB3B;AACAC,EAAAA,uBAAuB,EAAE,EA1BE;AA2B3BC,EAAAA,mBAAmB,EAAE,uBA3BM;;AA6B3B;AACAC,EAAAA,WAAW,EAAE,wBA9Bc;AA+B3BC,EAAAA,QAAQ,EAAE,SA/BiB;AAgC3BC,EAAAA,WAAW,EAAE,SAhCc;;AAiC3B;AACAC,EAAAA,UAAU,EAAE,YAlCe;AAmC3BC,EAAAA,QAAQ,EAAE,UAnCiB;AAoC3BC,EAAAA,QAAQ,EAAE,UApCiB;AAqC3BC,EAAAA,QAAQ,EAAE,UArCiB;AAsC3BC,EAAAA,IAAI,EAAE,MAtCqB;;AAwC3B;AACAC,EAAAA,EAAE,EAAG,IAzCsB;;AA0C3B;;AAEA;AACAC,EAAAA,UAAU,EAAG,CA7Cc;AA8C3BC,EAAAA,WAAW,EAAG,CA9Ca;AA+C3BC,EAAAA,UAAU,EAAG;AA/Cc,CAAd,CAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/utils",
      "sourcesContent": [
        "module.exports = Object.freeze({\n    /**\n     * Success 2xx\n     */\n    STATUS_200: 'success',\n    MESSAGE_SUCCESS: 'ok',\n    MESSAGE_204: 'Data empty',\n    STATUS_204: 'Not ok',\n    MESSAGE_UPDATED: 'resource updated successfully',\n    MESSAGE_DELETED: 'resource deleted successfully',\n    /**\n     * Error 4xx, 5xx \n     */\n    STATUS_400: 'Bad Request',\n    MESSAGE_400: 'Bad request',\n    MESSAGE_401: 'Authentication failed. Invalid user or password.',\n    MESSAGE_404: 'Not Found Error',\n    STATUS_ERROR: 'fail',\n    MESSAGE_UNAUTHORIZED: 'Unauthorized user!',\n    MESSAGE_DELETE: 'Delete successful!',\n    MESSAGE_NOT_FOUND: 'Not found!',\n    MESSAGE_UNKNOWN_SEVER_ERROR: 'Unknown server error!',\n    MESSAGE_500: 'error',\n    MESSAGE_INVALID_PASSWORD: 'Invalid password. Password validation is at least 6 character!',\n    MESSAGE_ERROR_DUPLICATE: 'ERROR_DUPLICATE',\n    /* Number */\n    AMOUNT_ITEM_IN_PER_PAGE: 10,\n    MESSAGE_OUT_OF_FOOD: \"Sản phẩm đã hết hàng!\",\n\n    /* String */\n    MY_FOOD_URL: 'http://localhost:3000/',\n    PATH_IMG: 'images/',\n    PATH_PUBLIC: 'public/',\n    /* Order status */\n    REQUESTING: 'Requesting',\n    APPROVED: 'Approved',\n    REJECTED: 'Rejected',\n    CANCELED: 'Canceled',\n    DONE: 'Done',\n\n    /* Time */\n    AM : \"AM\",\n    /* Food */\n\n    /* Role */\n    ROLE_ADMIN : 1,\n    ROLE_FARMER : 2,\n    ROLE_BUYER : 3\n});"
      ]
    },
    "sourceType": "script",
    "mtime": 1576862935835
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/controllers/category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/controllers/category.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Category = require('../models/category'),\n    Constants = require('../utils/constants');\n\nmodule.exports.createCategory = function (req, res) {\n  console.log(req.file);\n\n  if (!req.file) {\n    return res.status(500).json({\n      message: 'error',\n      status: Constants.STATUS_ERROR\n    });\n  }\n\n  req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n  var category = new Category(req.body);\n  category.save(function (err, category) {\n    if (err) return res.json({\n      data: \"\",\n      message: err.errmsg,\n      status: Constants.STATUS_ERROR\n    });else return res.json({\n      data: category,\n      message: Constants.MESSAGE_SUCCESS,\n      status: Constants.STATUS_200\n    });\n  });\n};\n\nmodule.exports.getCategories =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var categories;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return Category.find();\n\n          case 3:\n            categories = _context.sent;\n            return _context.abrupt(\"return\", res.status(200).json({\n              data: categories,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: _context.t0,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.deleteCategory =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var category;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return Category.findOneAndRemove({\n              _id: req.params.categoryId\n            });\n\n          case 3:\n            category = _context2.sent;\n\n            if (category) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(400).json({\n              message: Constants.MESSAGE_NOT_FOUND,\n              status: Constants.MESSAGE_NOT_FOUND\n            }));\n\n          case 8:\n            return _context2.abrupt(\"return\", res.status(204).json({\n              message: Constants.MESSAGE_DELETE,\n              status: Constants.STATUS_200\n            }));\n\n          case 9:\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](0);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 11]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports.updateCategory =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var category;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (req.file) {\n              req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n            }\n\n            _context3.prev = 1;\n            _context3.next = 4;\n            return Category.findOneAndUpdate({\n              _id: req.params.categoryId\n            }, req.body, {\n              \"new\": true\n            });\n\n          case 4:\n            category = _context3.sent;\n\n            if (category) {\n              _context3.next = 9;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(404).json({\n              message: Constants.MESSAGE_NOT_FOUND,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 9:\n            return _context3.abrupt(\"return\", res.status(200).json({\n              data: Category,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 10:\n            _context3.next = 17;\n            break;\n\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](1);\n\n            if (!(_context3.t0.name === 'MongoError' && _context3.t0.code === 11000)) {\n              _context3.next = 16;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(409).json({\n              message: _context3.t0.message,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 16:\n            return _context3.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 12]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbIkNhdGVnb3J5IiwicmVxdWlyZSIsIkNvbnN0YW50cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJjcmVhdGVDYXRlZ29yeSIsInJlcSIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJmaWxlIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJTVEFUVVNfRVJST1IiLCJib2R5IiwiaW1nX3VybCIsIk1ZX0ZPT0RfVVJMIiwiUEFUSF9JTUciLCJmaWxlbmFtZSIsImNhdGVnb3J5Iiwic2F2ZSIsImVyciIsImRhdGEiLCJlcnJtc2ciLCJNRVNTQUdFX1NVQ0NFU1MiLCJTVEFUVVNfMjAwIiwiZ2V0Q2F0ZWdvcmllcyIsImZpbmQiLCJjYXRlZ29yaWVzIiwiZGVsZXRlQ2F0ZWdvcnkiLCJmaW5kT25lQW5kUmVtb3ZlIiwiX2lkIiwicGFyYW1zIiwiY2F0ZWdvcnlJZCIsIk1FU1NBR0VfTk9UX0ZPVU5EIiwiTUVTU0FHRV9ERUxFVEUiLCJNRVNTQUdFX1VOS05PV05fU0VWRVJfRVJST1IiLCJ1cGRhdGVDYXRlZ29yeSIsImZpbmRPbmVBbmRVcGRhdGUiLCJuYW1lIiwiY29kZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBSUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBdEI7QUFBQSxJQUNJQyxTQUFTLEdBQUdELE9BQU8sQ0FBQyxvQkFBRCxDQUR2Qjs7QUFHQUUsTUFBTSxDQUFDQyxPQUFQLENBQWVDLGNBQWYsR0FBZ0MsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CO0FBQ2hEQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBRyxDQUFDSSxJQUFoQjs7QUFDQSxNQUFJLENBQUNKLEdBQUcsQ0FBQ0ksSUFBVCxFQUFlO0FBQ1gsV0FBT0gsR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDeEJDLE1BQUFBLE9BQU8sRUFBRSxPQURlO0FBRXhCRixNQUFBQSxNQUFN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WTtBQUZNLGFBQXJCLENBaEJhOztBQUFBO0FBQUEsOENBcUJiUCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN4QlcsY0FBQUEsSUFBSSxFQUFFdkIsUUFEa0I7QUFFeEJhLGNBQUFBLE9BQU8sRUFBRVgsU0FBUyxDQUFDdUIsZUFGSztBQUd4QmQsY0FBQUEsTUFBTSxFQUFFVCxTQUFTLENBQUN3QjtBQUhNLGFBQXJCLENBckJhOztBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUEsa0JBMkJwQixhQUFJYyxJQUFKLEtBQWEsWUFBYixJQUE2QixhQUFJQyxJQUFKLEtBQWEsS0EzQnRCO0FBQUE7QUFBQTtBQUFBOztBQUFBLDhDQTRCYmxDLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxjQUFBQSxPQUFPLEVBQUUsYUFBSUEsT0FEVztBQUV4QkYsY0FBQUEsTUFBTSxFQUFFVCxTQUFTLENBQUNZO0FBRk0sYUFBckIsQ0E1QmE7O0FBQUE7QUFBQSw4Q0FnQ2pCUCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN4QkMsY0FBQUEsT0FBTyxFQUFFWCxTQUFTLENBQUNtQywyQkFESztBQUV4QjFCLGNBQUFBLE1BQU0sRUFBRVQsU0FBUyxDQUFDWTtBQUZNLGFBQXJCLENBaENpQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFoQzs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmgvRG9jdW1lbnRzL25vZGVqcy9teWZvb2QtYXBpL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIENhdGVnb3J5ID0gcmVxdWlyZSgnLi4vbW9kZWxzL2NhdGVnb3J5JyksXG4gICAgQ29uc3RhbnRzID0gcmVxdWlyZSgnLi4vdXRpbHMvY29uc3RhbnRzJyk7XG5cbm1vZHVsZS5leHBvcnRzLmNyZWF0ZUNhdGVnb3J5ID0gZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG4gICAgY29uc29sZS5sb2cocmVxLmZpbGUpO1xuICAgIGlmICghcmVxLmZpbGUpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdlcnJvcicsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJlcS5ib2R5LmltZ191cmwgPSBDb25zdGFudHMuTVlfRk9PRF9VUkwgKyBDb25zdGFudHMuUEFUSF9JTUcgKyByZXEuZmlsZS5maWxlbmFtZTtcblxuICAgIHZhciBjYXRlZ29yeSA9IG5ldyBDYXRlZ29yeShyZXEuYm9keSk7XG5cbiAgICBjYXRlZ29yeS5zYXZlKGZ1bmN0aW9uIChlcnIsIGNhdGVnb3J5KSB7XG4gICAgICAgIGlmIChlcnIpXG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oe1xuICAgICAgICAgICAgICAgIGRhdGE6IFwiXCIsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogZXJyLmVycm1zZyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBlbHNlXG4gICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oe1xuICAgICAgICAgICAgICAgIGRhdGE6IGNhdGVnb3J5LFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IENvbnN0YW50cy5NRVNTQUdFX1NVQ0NFU1MsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTXzIwMFxuICAgICAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cy5nZXRDYXRlZ29yaWVzID0gYXN5bmMgZnVuY3Rpb24gKHJlcSwgcmVzKSB7XG5cbiAgICB0cnkge1xuICAgICAgICB2YXIgY2F0ZWdvcmllcyA9IGF3YWl0IENhdGVnb3J5LmZpbmQoKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgIGRhdGE6IGNhdGVnb3JpZXMsXG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9TVUNDRVNTLFxuICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTXzIwMFxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgICAgICAgbWVzc2FnZTogZXgsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZGVsZXRlQ2F0ZWdvcnkgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICB0cnkge1xuICAgICAgICBsZXQgY2F0ZWdvcnkgPSBhd2FpdCBDYXRlZ29yeS5maW5kT25lQW5kUmVtb3ZlKHtcbiAgICAgICAgICAgIF9pZDogcmVxLnBhcmFtcy5jYXRlZ29yeUlkXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmICghY2F0ZWdvcnkpXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IENvbnN0YW50cy5NRVNTQUdFX05PVF9GT1VORCxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5NRVNTQUdFX05PVF9GT1VORFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwNCkuanNvbih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogQ29uc3RhbnRzLk1FU1NBR0VfREVMRVRFLFxuICAgICAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU18yMDBcbiAgICAgICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9VTktOT1dOX1NFVkVSX0VSUk9SLFxuICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTX0VSUk9SXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLnVwZGF0ZUNhdGVnb3J5ID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG5cbiAgICBpZiAocmVxLmZpbGUpIHtcbiAgICAgICAgcmVxLmJvZHkuaW1nX3VybCA9IENvbnN0YW50cy5NWV9GT09EX1VSTCArIENvbnN0YW50cy5QQVRIX0lNRyArIHJlcS5maWxlLmZpbGVuYW1lO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICAgIGxldCBjYXRlZ29yeSA9IGF3YWl0IENhdGVnb3J5LmZpbmRPbmVBbmRVcGRhdGUoe1xuICAgICAgICAgICAgICAgIF9pZDogcmVxLnBhcmFtcy5jYXRlZ29yeUlkXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVxLmJvZHksIHtcbiAgICAgICAgICAgICAgICBuZXc6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcblxuICAgICAgICBpZiAoIWNhdGVnb3J5KVxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9OT1RfRk9VTkQsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTX0VSUk9SXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZWxzZVxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICBkYXRhOiBDYXRlZ29yeSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9TVUNDRVNTLFxuICAgICAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU18yMDBcbiAgICAgICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBpZiAoZXJyLm5hbWUgPT09ICdNb25nb0Vycm9yJyAmJiBlcnIuY29kZSA9PT0gMTEwMDApXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDkpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU19FUlJPUlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9VTktOT1dOX1NFVkVSX0VSUk9SLFxuICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTX0VSUk9SXG4gICAgICAgIH0pO1xuICAgIH1cbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "Category",
        "require",
        "Constants",
        "module",
        "exports",
        "createCategory",
        "req",
        "res",
        "console",
        "log",
        "file",
        "status",
        "json",
        "message",
        "STATUS_ERROR",
        "body",
        "img_url",
        "MY_FOOD_URL",
        "PATH_IMG",
        "filename",
        "category",
        "save",
        "err",
        "data",
        "errmsg",
        "MESSAGE_SUCCESS",
        "STATUS_200",
        "getCategories",
        "find",
        "categories",
        "deleteCategory",
        "findOneAndRemove",
        "_id",
        "params",
        "categoryId",
        "MESSAGE_NOT_FOUND",
        "MESSAGE_DELETE",
        "MESSAGE_UNKNOWN_SEVER_ERROR",
        "updateCategory",
        "findOneAndUpdate",
        "name",
        "code"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "sourcesContent": [
        "var Category = require('../models/category'),\n    Constants = require('../utils/constants');\n\nmodule.exports.createCategory = function (req, res) {\n    console.log(req.file);\n    if (!req.file) {\n        return res.status(500).json({\n            message: 'error',\n            status: Constants.STATUS_ERROR\n        });\n    }\n    req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n\n    var category = new Category(req.body);\n\n    category.save(function (err, category) {\n        if (err)\n            return res.json({\n                data: \"\",\n                message: err.errmsg,\n                status: Constants.STATUS_ERROR\n            });\n        else\n            return res.json({\n                data: category,\n                message: Constants.MESSAGE_SUCCESS,\n                status: Constants.STATUS_200\n            });\n    });\n};\n\nmodule.exports.getCategories = async function (req, res) {\n\n    try {\n        var categories = await Category.find();\n        return res.status(200).json({\n            data: categories,\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        });\n    } catch (ex) {\n        return res.status(500).json({\n            message: ex,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};\n\nmodule.exports.deleteCategory = async (req, res) => {\n    try {\n        let category = await Category.findOneAndRemove({\n            _id: req.params.categoryId\n        });\n\n        if (!category)\n            return res.status(400).json({\n                message: Constants.MESSAGE_NOT_FOUND,\n                status: Constants.MESSAGE_NOT_FOUND\n            });\n        else\n            return res.status(204).json({\n                message: Constants.MESSAGE_DELETE,\n                status: Constants.STATUS_200\n            });\n    } catch (ex) {\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};\n\nmodule.exports.updateCategory = async (req, res) => {\n\n    if (req.file) {\n        req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n    }\n\n    try {\n        let category = await Category.findOneAndUpdate({\n                _id: req.params.categoryId\n            },\n            req.body, {\n                new: true\n            }\n        );\n\n        if (!category)\n            return res.status(404).json({\n                message: Constants.MESSAGE_NOT_FOUND,\n                status: Constants.STATUS_ERROR\n            });\n        else\n            return res.status(200).json({\n                data: Category,\n                message: Constants.MESSAGE_SUCCESS,\n                status: Constants.STATUS_200\n            });\n    } catch (err) {\n        if (err.name === 'MongoError' && err.code === 11000)\n            return res.status(409).json({\n                message: err.message,\n                status: Constants.STATUS_ERROR\n            });\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1571156413582
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/models/category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/models/category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/models/category.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/models/category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar CategorySchema = new mongoose.Schema({\n  name: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  description: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  img_url: {\n    type: String\n  }\n});\nvar Category = mongoose.model('Category', CategorySchema, 'categories');\nmodule.exports = Category;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIkNhdGVnb3J5U2NoZW1hIiwiU2NoZW1hIiwibmFtZSIsInR5cGUiLCJTdHJpbmciLCJ0cmltIiwicmVxdWlyZWQiLCJkZXNjcmlwdGlvbiIsImltZ191cmwiLCJDYXRlZ29yeSIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLGNBQWMsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQWIsQ0FBb0I7QUFDckNDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxJQUFJLEVBQUVDLE1BREo7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLElBRko7QUFHRkMsSUFBQUEsUUFBUSxFQUFFO0FBSFIsR0FEK0I7QUFNckNDLEVBQUFBLFdBQVcsRUFBRTtBQUNUSixJQUFBQSxJQUFJLEVBQUVDLE1BREc7QUFFVEMsSUFBQUEsSUFBSSxFQUFFLElBRkc7QUFHVEMsSUFBQUEsUUFBUSxFQUFFO0FBSEQsR0FOd0I7QUFXckNFLEVBQUFBLE9BQU8sRUFBRTtBQUNMTCxJQUFBQSxJQUFJLEVBQUVDO0FBREQ7QUFYNEIsQ0FBcEIsQ0FBckI7QUFnQkEsSUFBSUssUUFBUSxHQUFHWCxRQUFRLENBQUNZLEtBQVQsQ0FBZSxVQUFmLEVBQTJCVixjQUEzQixFQUEyQyxZQUEzQyxDQUFmO0FBRUFXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsUUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5oL0RvY3VtZW50cy9ub2RlanMvbXlmb29kLWFwaS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xuXG52YXIgQ2F0ZWdvcnlTY2hlbWEgPSBuZXcgbW9uZ29vc2UuU2NoZW1hKHtcbiAgICBuYW1lOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIGRlc2NyaXB0aW9uOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIGltZ191cmw6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfVxufSk7XG5cbnZhciBDYXRlZ29yeSA9IG1vbmdvb3NlLm1vZGVsKCdDYXRlZ29yeScsIENhdGVnb3J5U2NoZW1hLCAnY2F0ZWdvcmllcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENhdGVnb3J5O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "mongoose",
        "require",
        "CategorySchema",
        "Schema",
        "name",
        "type",
        "String",
        "trim",
        "required",
        "description",
        "img_url",
        "Category",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,cAAc,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,IAAI,EAAE,IAFJ;AAGFC,IAAAA,QAAQ,EAAE;AAHR,GAD+B;AAMrCC,EAAAA,WAAW,EAAE;AACTJ,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,IAAI,EAAE,IAFG;AAGTC,IAAAA,QAAQ,EAAE;AAHD,GANwB;AAWrCE,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAEC;AADD;AAX4B,CAApB,CAArB;AAgBA,IAAIK,QAAQ,GAAGX,QAAQ,CAACY,KAAT,CAAe,UAAf,EAA2BV,cAA3B,EAA2C,YAA3C,CAAf;AAEAW,MAAM,CAACC,OAAP,GAAiBH,QAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "sourcesContent": [
        "var mongoose = require('mongoose');\n\nvar CategorySchema = new mongoose.Schema({\n    name: {\n        type: String,\n        trim: true,\n        required: true\n    },\n    description: {\n        type: String,\n        trim: true,\n        required: true\n    },\n    img_url: {\n        type: String\n    }\n});\n\nvar Category = mongoose.model('Category', CategorySchema, 'categories');\n\nmodule.exports = Category;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1576858903570
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/routes/food.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/routes/food.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/routes/food.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/routes/food.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
        "sourceFileName": "food.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar upload = require('../utils/upload'),\n    authController = require('../controllers/auth'),\n    foodController = require('../controllers/food');\n\nmodule.exports = function (app) {\n  app.get('/foods', authController.loginRequired, foodController.getFoodsOfUser);\n  app.post('/foods/:categoryId', upload.single('file'), authController.loginRequired, foodController.createFood);\n  app.route('/foods/:userId').get(authController.loginRequired, foodController.getFoodsByUserId);\n  app.route('/foods/:foodId').put(authController.loginRequired, upload.single('file'), foodController.updateFoodById)[\"delete\"](authController.loginRequired, foodController.deleteFoodById);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb2QuanMiXSwibmFtZXMiOlsidXBsb2FkIiwicmVxdWlyZSIsImF1dGhDb250cm9sbGVyIiwiZm9vZENvbnRyb2xsZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZ2V0IiwibG9naW5SZXF1aXJlZCIsImdldEZvb2RzT2ZVc2VyIiwicG9zdCIsInNpbmdsZSIsImNyZWF0ZUZvb2QiLCJyb3V0ZSIsImdldEZvb2RzQnlVc2VySWQiLCJwdXQiLCJ1cGRhdGVGb29kQnlJZCIsImRlbGV0ZUZvb2RCeUlkIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE1BQU0sR0FBR0MsT0FBTyxDQUFDLGlCQUFELENBQXBCO0FBQUEsSUFDSUMsY0FBYyxHQUFHRCxPQUFPLENBQUMscUJBQUQsQ0FENUI7QUFBQSxJQUVJRSxjQUFjLEdBQUdGLE9BQU8sQ0FBQyxxQkFBRCxDQUY1Qjs7QUFJQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBUztBQUN0QkEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsUUFBUixFQUFrQkwsY0FBYyxDQUFDTSxhQUFqQyxFQUFnREwsY0FBYyxDQUFDTSxjQUEvRDtBQUVBSCxFQUFBQSxHQUFHLENBQUNJLElBQUosQ0FBUyxvQkFBVCxFQUErQlYsTUFBTSxDQUFDVyxNQUFQLENBQWMsTUFBZCxDQUEvQixFQUFzRFQsY0FBYyxDQUFDTSxhQUFyRSxFQUFvRkwsY0FBYyxDQUFDUyxVQUFuRztBQUVBTixFQUFBQSxHQUFHLENBQUNPLEtBQUosQ0FBVSxnQkFBVixFQUNLTixHQURMLENBQ1NMLGNBQWMsQ0FBQ00sYUFEeEIsRUFDdUNMLGNBQWMsQ0FBQ1csZ0JBRHREO0FBR0FSLEVBQUFBLEdBQUcsQ0FBQ08sS0FBSixDQUFVLGdCQUFWLEVBQ0tFLEdBREwsQ0FDU2IsY0FBYyxDQUFDTSxhQUR4QixFQUN1Q1IsTUFBTSxDQUFDVyxNQUFQLENBQWMsTUFBZCxDQUR2QyxFQUM4RFIsY0FBYyxDQUFDYSxjQUQ3RSxZQUVZZCxjQUFjLENBQUNNLGFBRjNCLEVBRTBDTCxjQUFjLENBQUNjLGNBRnpEO0FBR0gsQ0FYRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmgvRG9jdW1lbnRzL25vZGVqcy9teWZvb2QtYXBpL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB1cGxvYWQgPSByZXF1aXJlKCcuLi91dGlscy91cGxvYWQnKSxcbiAgICBhdXRoQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2F1dGgnKSxcbiAgICBmb29kQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2Zvb2QnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoYXBwKSA9PiB7XG4gICAgYXBwLmdldCgnL2Zvb2RzJywgYXV0aENvbnRyb2xsZXIubG9naW5SZXF1aXJlZCwgZm9vZENvbnRyb2xsZXIuZ2V0Rm9vZHNPZlVzZXIpO1xuXG4gICAgYXBwLnBvc3QoJy9mb29kcy86Y2F0ZWdvcnlJZCcsIHVwbG9hZC5zaW5nbGUoJ2ZpbGUnKSwgYXV0aENvbnRyb2xsZXIubG9naW5SZXF1aXJlZCwgZm9vZENvbnRyb2xsZXIuY3JlYXRlRm9vZCk7XG5cbiAgICBhcHAucm91dGUoJy9mb29kcy86dXNlcklkJylcbiAgICAgICAgLmdldChhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCBmb29kQ29udHJvbGxlci5nZXRGb29kc0J5VXNlcklkKTtcbiAgICBcbiAgICBhcHAucm91dGUoJy9mb29kcy86Zm9vZElkJylcbiAgICAgICAgLnB1dChhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCB1cGxvYWQuc2luZ2xlKCdmaWxlJyksIGZvb2RDb250cm9sbGVyLnVwZGF0ZUZvb2RCeUlkKVxuICAgICAgICAuZGVsZXRlKGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIGZvb2RDb250cm9sbGVyLmRlbGV0ZUZvb2RCeUlkKTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "food.js"
      ],
      "names": [
        "upload",
        "require",
        "authController",
        "foodController",
        "module",
        "exports",
        "app",
        "get",
        "loginRequired",
        "getFoodsOfUser",
        "post",
        "single",
        "createFood",
        "route",
        "getFoodsByUserId",
        "put",
        "updateFoodById",
        "deleteFoodById"
      ],
      "mappings": ";;AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAApB;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAD5B;AAAA,IAEIE,cAAc,GAAGF,OAAO,CAAC,qBAAD,CAF5B;;AAIAG,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACtBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkBL,cAAc,CAACM,aAAjC,EAAgDL,cAAc,CAACM,cAA/D;AAEAH,EAAAA,GAAG,CAACI,IAAJ,CAAS,oBAAT,EAA+BV,MAAM,CAACW,MAAP,CAAc,MAAd,CAA/B,EAAsDT,cAAc,CAACM,aAArE,EAAoFL,cAAc,CAACS,UAAnG;AAEAN,EAAAA,GAAG,CAACO,KAAJ,CAAU,gBAAV,EACKN,GADL,CACSL,cAAc,CAACM,aADxB,EACuCL,cAAc,CAACW,gBADtD;AAGAR,EAAAA,GAAG,CAACO,KAAJ,CAAU,gBAAV,EACKE,GADL,CACSb,cAAc,CAACM,aADxB,EACuCR,MAAM,CAACW,MAAP,CAAc,MAAd,CADvC,EAC8DR,cAAc,CAACa,cAD7E,YAEYd,cAAc,CAACM,aAF3B,EAE0CL,cAAc,CAACc,cAFzD;AAGH,CAXD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "sourcesContent": [
        "var upload = require('../utils/upload'),\n    authController = require('../controllers/auth'),\n    foodController = require('../controllers/food');\n\nmodule.exports = (app) => {\n    app.get('/foods', authController.loginRequired, foodController.getFoodsOfUser);\n\n    app.post('/foods/:categoryId', upload.single('file'), authController.loginRequired, foodController.createFood);\n\n    app.route('/foods/:userId')\n        .get(authController.loginRequired, foodController.getFoodsByUserId);\n    \n    app.route('/foods/:foodId')\n        .put(authController.loginRequired, upload.single('file'), foodController.updateFoodById)\n        .delete(authController.loginRequired, foodController.deleteFoodById);\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1575905252264
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/controllers/food.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/food.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/controllers/food.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/food.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
        "sourceFileName": "food.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Food = require('../models/food'),\n    Constants = require('../utils/constants'),\n    User = require('../models/user'),\n    fs = require('fs');\n\nmodule.exports.createFood =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var food, user, newFood;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (req.file) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_500,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 2:\n            req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n            req.body.userId = req.user._id;\n            req.body.categoryId = req.params.categoryId;\n            food = new Food(req.body);\n            _context.prev = 6;\n            _context.next = 9;\n            return User.findOne({\n              _id: req.user._id\n            });\n\n          case 9:\n            user = _context.sent;\n            if (user.categories == undefined) user.categories = [];\n\n            if (user.categories.includes(req.params.categoryId)) {\n              _context.next = 15;\n              break;\n            }\n\n            user.categories.push(req.params.categoryId);\n            _context.next = 15;\n            return User.findOneAndUpdate({\n              _id: req.user._id\n            }, {\n              categories: user.categories\n            }, {\n              useFindAndModify: false\n            });\n\n          case 15:\n            _context.next = 17;\n            return food.save();\n\n          case 17:\n            newFood = _context.sent;\n            return _context.abrupt(\"return\", res.status(201).json({\n              data: newFood,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](6);\n\n            if (!(_context.t0.name === 'MongoError' && _context.t0.code == 11000)) {\n              _context.next = 25;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(409).json({\n              message: _context.t0.message,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 25:\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR + _context.t0.message,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[6, 21]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getFoodsByUserId =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var page, positionStart, foods, totalFoods, totalPage, currentPage;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            page = parseInt(req.query.page) || 1;\n            positionStart = (page - 1) * Constants.AMOUNT_ITEM_IN_PER_PAGE;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return Food.find({\n              userId: req.params.userId\n            }).sort({\n              _id: -1\n            }).limit(Constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n\n          case 5:\n            foods = _context2.sent;\n            _context2.next = 8;\n            return Food.countDocuments({\n              userId: req.params.userId\n            });\n\n          case 8:\n            totalFoods = _context2.sent;\n            totalPage = Math.ceil(totalFoods / Constants.AMOUNT_ITEM_IN_PER_PAGE);\n            currentPage = page > totalPage ? totalPage : page;\n\n            if (foods) {\n              _context2.next = 13;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(204).json({\n              message: Constants.MESSAGE_204,\n              status: Constants.STATUS_204\n            }));\n\n          case 13:\n            res.status(200).json({\n              data: {\n                foods: foods,\n                total_page: totalPage,\n                current_page: currentPage,\n                total_food: totalFoods\n              },\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            });\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](2);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: _context2.t0,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 16]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getFoodsOfUser =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var page, positionStart, foods, totalFoods, totalPage, currentPage;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            page = parseInt(req.query.page) || 1;\n            positionStart = (page - 1) * Constants.AMOUNT_ITEM_IN_PER_PAGE;\n            _context3.prev = 2;\n            _context3.next = 5;\n            return Food.find({\n              userId: req.user._id\n            }).sort({\n              _id: -1\n            }).limit(Constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n\n          case 5:\n            foods = _context3.sent;\n\n            if (foods) {\n              _context3.next = 8;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(204).json({\n              data: \"\",\n              message: Constants.MESSAGE_204,\n              status: Constants.STATUS_204\n            }));\n\n          case 8:\n            _context3.next = 10;\n            return Food.countDocuments({\n              userId: req.user._id\n            });\n\n          case 10:\n            totalFoods = _context3.sent;\n            totalPage = Math.ceil(totalFoods / Constants.AMOUNT_ITEM_IN_PER_PAGE);\n            currentPage = page > totalPage ? totalPage : page;\n            res.status(200).json({\n              data: {\n                foods: foods,\n                total_page: totalPage,\n                current_page: currentPage,\n                total_food: totalFoods\n              },\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            });\n            _context3.next = 19;\n            break;\n\n          case 16:\n            _context3.prev = 16;\n            _context3.t0 = _context3[\"catch\"](2);\n            return _context3.abrupt(\"return\", res.status(500).json({\n              message: _context3.t0,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 19:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 16]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmodule.exports.updateFoodById =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var food, path, numberFoodWithOldCategoryId, user, newFood;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (req.file) req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return Food.findOneAndUpdate({\n              _id: req.params.foodId\n            }, {\n              $set: req.body\n            }, {\n              useFindAndModify: false\n            });\n\n          case 4:\n            food = _context4.sent;\n\n            if (food) {\n              _context4.next = 7;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.status(400).json({\n              message: Constants.MESSAGE_NOT_FOUND,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 7:\n            if (req.file) {\n              try {\n                path = food.img_url.replace(Constants.MY_FOOD_URL, '');\n                fs.unlinkSync(Constants.PATH_PUBLIC + path);\n                console.log('successfully deleted img-url of ' + food.name);\n              } catch (error) {\n                console.log('can not delete img-url');\n              }\n            }\n\n            console.log(\"old category: \" + food.categoryId);\n            console.log(\"new category: \" + req.body.categoryId);\n\n            if (!(req.body.categoryId && req.body.categoryId != food.categoryId)) {\n              _context4.next = 30;\n              break;\n            }\n\n            _context4.next = 13;\n            return Food.countDocuments({\n              categoryId: food.categoryId,\n              userId: req.user._id\n            });\n\n          case 13:\n            numberFoodWithOldCategoryId = _context4.sent;\n\n            if (!(numberFoodWithOldCategoryId == 0)) {\n              _context4.next = 17;\n              break;\n            }\n\n            _context4.next = 17;\n            return User.updateOne({\n              _id: req.user._id\n            }, {\n              $pull: {\n                categories: food.categoryId\n              }\n            });\n\n          case 17:\n            _context4.prev = 17;\n            _context4.next = 20;\n            return User.findOne({\n              _id: req.user._id\n            });\n\n          case 20:\n            user = _context4.sent;\n\n            if (user.categories.includes(req.body.categoryId)) {\n              _context4.next = 25;\n              break;\n            }\n\n            user.categories.push(req.body.categoryId);\n            _context4.next = 25;\n            return User.findOneAndUpdate({\n              _id: req.user._id\n            }, {\n              $set: {\n                categories: user.categories\n              }\n            }, {\n              useFindAndModify: false\n            });\n\n          case 25:\n            _context4.next = 30;\n            break;\n\n          case 27:\n            _context4.prev = 27;\n            _context4.t0 = _context4[\"catch\"](17);\n            console.log(_context4.t0);\n\n          case 30:\n            _context4.next = 32;\n            return Food.findOne({\n              _id: req.params.foodId\n            });\n\n          case 32:\n            newFood = _context4.sent;\n            return _context4.abrupt(\"return\", res.status(200).json({\n              data: newFood,\n              message: Constants.MESSAGE_UPDATED,\n              status: Constants.STATUS_200\n            }));\n\n          case 36:\n            _context4.prev = 36;\n            _context4.t1 = _context4[\"catch\"](1);\n\n            if (!(_context4.t1.name === 'MongoError' && _context4.t1.code === 11000)) {\n              _context4.next = 40;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.status(409).json({\n              message: _context4.t1.message,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 40:\n            return _context4.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 41:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 36], [17, 27]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nmodule.exports.deleteFoodById =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var food, path, countFoodSameCategoryOfUser;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return Food.findOneAndRemove({\n              _id: req.params.foodId\n            }, {\n              useFindAndModify: false\n            });\n\n          case 3:\n            food = _context5.sent;\n\n            if (food) {\n              _context5.next = 8;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", res.status(400).json({\n              message: Constants.MESSAGE_NOT_FOUND,\n              status: Constants.MESSAGE_NOT_FOUND\n            }));\n\n          case 8:\n            try {\n              path = food.img_url.replace(Constants.MY_FOOD_URL, '');\n              console.log('path > ' + path);\n              console.log('path system > ' + Constants.PATH_PUBLIC + path);\n              fs.unlinkSync(Constants.PATH_PUBLIC + path);\n              console.log('successfully deleted img-url of ' + food.name);\n            } catch (error) {\n              console.log('can not delete img-url');\n            }\n\n            _context5.next = 11;\n            return Food.countDocuments({\n              categoryId: food.categoryId,\n              userId: req.user._id\n            });\n\n          case 11:\n            countFoodSameCategoryOfUser = _context5.sent;\n\n            if (!(countFoodSameCategoryOfUser == 0)) {\n              _context5.next = 15;\n              break;\n            }\n\n            _context5.next = 15;\n            return User.updateOne({\n              _id: req.user._id\n            }, {\n              $pull: {\n                categories: food.categoryId\n              }\n            });\n\n          case 15:\n            return _context5.abrupt(\"return\", res.status(200).json({\n              message: Constants.MESSAGE_DELETED,\n              status: Constants.STATUS_200\n            }));\n\n          case 16:\n            _context5.next = 21;\n            break;\n\n          case 18:\n            _context5.prev = 18;\n            _context5.t0 = _context5[\"catch\"](0);\n            return _context5.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 21:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 18]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb2QuanMiXSwibmFtZXMiOlsiRm9vZCIsInJlcXVpcmUiLCJDb25zdGFudHMiLCJVc2VyIiwiZnMiLCJtb2R1bGUiLCJleHBvcnRzIiwiY3JlYXRlRm9vZCIsInJlcSIsInJlcyIsImZpbGUiLCJzdGF0dXMiLCJqc29uIiwibWVzc2FnZSIsIk1FU1NBR0VfNTAwIiwiU1RBVFVTX0VSUk9SIiwiYm9keSIsImltZ191cmwiLCJNWV9GT09EX1VSTCIsIlBBVEhfSU1HIiwiZmlsZW5hbWUiLCJ1c2VySWQiLCJ1c2VyIiwiX2lkIiwiY2F0ZWdvcnlJZCIsInBhcmFtcyIsImZvb2QiLCJmaW5kT25lIiwiY2F0ZWdvcmllcyIsInVuZGVmaW5lZCIsImluY2x1ZGVzIiwicHVzaCIsImZpbmRPbmVBbmRVcGRhdGUiLCJ1c2VGaW5kQW5kTW9kaWZ5Iiwic2F2ZSIsIm5ld0Zvb2QiLCJkYXRhIiwiTUVTU0FHRV9TVUNDRVNTIiwiU1RBVFVTXzIwMCIsIm5hbWUiLCJjb2RlIiwiTUVTU0FHRV9VTktOT1dOX1NFVkVSX0VSUk9SIiwiZ2V0Rm9vZHNCeVVzZXJJZCIsInBhZ2UiLCJwYXJzZUludCIsInF1ZXJ5IiwicG9zaXRpb25TdGFydCIsIkFNT1VOVF9JVEVNX0lOX1BFUl9QQUdFIiwiZmluZCIsInNvcnQiLCJsaW1pdCIsInNraXAiLCJmb29kcyIsImNvdW50RG9jdW1lbnRzIiwidG90YWxGb29kcyIsInRvdGFsUGFnZSIsIk1hdGgiLCJjZWlsIiwiY3VycmVudFBhZ2UiLCJNRVNTQUdFXzIwNCIsIlNUQVRVU18yMDQiLCJ0b3RhbF9wYWdlIiwiY3VycmVudF9wYWdlIiwidG90YWxfZm9vZCIsImdldEZvb2RzT2ZVc2VyIiwidXBkYXRlRm9vZEJ5SWQiLCJmb29kSWQiLCIkc2V0IiwiTUVTU0FHRV9OT1RfRk9VTkQiLCJwYXRoIiwicmVwbGFjZSIsInVubGlua1N5bmMiLCJQQVRIX1BVQkxJQyIsImNvbnNvbGUiLCJsb2ciLCJlcnJvciIsIm51bWJlckZvb2RXaXRoT2xkQ2F0ZWdvcnlJZCIsInVwZGF0ZU9uZSIsIiRwdWxsIiwiTUVTU0FHRV9VUERBVEVEIiwiZGVsZXRlRm9vZEJ5SWQiLCJmaW5kT25lQW5kUmVtb3ZlIiwiY291bnRGb29kU2FtZUNhdGVnb3J5T2ZVc2VyIiwiTUVTU0FHRV9ERUxFVEVEIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUFsQjtBQUFBLElBQ0lDLFNBQVMsR0FBR0QsT0FBTyxDQUFDLG9CQUFELENBRHZCO0FBQUEsSUFFSUUsSUFBSSxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FGbEI7QUFBQSxJQUdJRyxFQUFFLEdBQUdILE9BQU8sQ0FBQyxJQUFELENBSGhCOztBQUtBSSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsVUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQTRCLGlCQUFPQyxHQUFQLEVBQVlDLEdBQVo7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZ0JBQ25CRCxHQUFHLENBQUNFLElBRGU7QUFBQTtBQUFBO0FBQUE7O0FBQUEsNkNBRWJELEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQ3hCQyxjQUFBQSxPQUFPLEVBQUVYLFNBQVMsQ0FBQ1ksV0FESztBQUV4QkgsY0FBQUEsTUFBTSxFQUFFVCxTQUFTLENBQUNhO0FBRk0sYUFBckIsQ0FGYTs7QUFBQTtBQU14QlAsWUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVNDLE9BQVQsR0FBbUJmLFNBQVMsQ0FBQ2dCLFdBQVYsR0FBd0JoQixTQUFTLENBQUNpQixRQUFsQyxHQUE2Q1gsR0FBRyxDQUFDRSxJQUFKLENBQVNVLFFBQXpFO0FBQ0FaLFlBQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTSyxNQUFULEdBQWtCYixHQUFHLENBQUNjLElBQUosQ0FBU0MsR0FBM0I7QUFDQWYsWUFBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVNRLFVBQVQsR0FBc0JoQixHQUFHLENBQUNp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Q3hCQyxjQUFBQSxPQUFPLEVBQUVYLFNBQVMsQ0FBQ2lGLGVBREs7QUFFeEJ4RSxjQUFBQSxNQUFNLEVBQUVULFNBQVMsQ0FBQ29DO0FBRk0sYUFBckIsQ0F2Q2E7O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLDhDQTZDakI3QixHQUFHLENBQUNFLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUN4QkMsY0FBQUEsT0FBTyxFQUFFWCxTQUFTLENBQUN1QywyQkFESztBQUV4QjlCLGNBQUFBLE1BQU0sRUFBRVQsU0FBUyxDQUFDYTtBQUZNLGFBQXJCLENBN0NpQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFoQzs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmgvRG9jdW1lbnRzL25vZGVqcy9teWZvb2QtYXBpL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIEZvb2QgPSByZXF1aXJlKCcuLi9tb2RlbHMvZm9vZCcpLFxuICAgIENvbnN0YW50cyA9IHJlcXVpcmUoJy4uL3V0aWxzL2NvbnN0YW50cycpLFxuICAgIFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpLFxuICAgIGZzID0gcmVxdWlyZSgnZnMnKTtcblxubW9kdWxlLmV4cG9ydHMuY3JlYXRlRm9vZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGlmICghcmVxLmZpbGUpXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV81MDAsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgfSk7XG4gICAgcmVxLmJvZHkuaW1nX3VybCA9IENvbnN0YW50cy5NWV9GT09EX1VSTCArIENvbnN0YW50cy5QQVRIX0lNRyArIHJlcS5maWxlLmZpbGVuYW1lO1xuICAgIHJlcS5ib2R5LnVzZXJJZCA9IHJlcS51c2VyLl9pZDtcbiAgICByZXEuYm9keS5jYXRlZ29yeUlkID0gcmVxLnBhcmFtcy5jYXRlZ29yeUlkXG5cbiAgICBjb25zdCBmb29kID0gbmV3IEZvb2QocmVxLmJvZHkpO1xuXG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIHVzZXIgPSBhd2FpdCBVc2VyLmZpbmRPbmUoe1xuICAgICAgICAgICAgX2lkOiByZXEudXNlci5faWRcbiAgICAgICAgfSlcblxuICAgICAgICBpZiAodXNlci5jYXRlZ29yaWVzID09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHVzZXIuY2F0ZWdvcmllcyA9IFtdXG4gICAgICAgIGlmICghdXNlci5jYXRlZ29yaWVzLmluY2x1ZGVzKHJlcS5wYXJhbXMuY2F0ZWdvcnlJZCkpIHtcbiAgICAgICAgICAgIHVzZXIuY2F0ZWdvcmllcy5wdXNoKHJlcS5wYXJhbXMuY2F0ZWdvcnlJZClcbiAgICAgICAgICAgIGF3YWl0IFVzZXIuZmluZE9uZUFuZFVwZGF0ZSh7XG4gICAgICAgICAgICAgICAgX2lkOiByZXEudXNlci5faWRcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICBjYXRlZ29yaWVzOiB1c2VyLmNhdGVnb3JpZXNcbiAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBuZXdGb29kID0gYXdhaXQgZm9vZC5zYXZlKCk7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7XG4gICAgICAgICAgICBkYXRhOiBuZXdGb29kLFxuICAgICAgICAgICAgbWVzc2FnZTogQ29uc3RhbnRzLk1FU1NBR0VfU1VDQ0VTUyxcbiAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU18yMDBcbiAgICAgICAgfSlcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgaWYgKGVyci5uYW1lID09PSAnTW9uZ29FcnJvcicgJiYgZXJyLmNvZGUgPT0gMTEwMDApXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDkpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU19FUlJPUlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9VTktOT1dOX1NFVkVSX0VSUk9SICsgZXJyLm1lc3NhZ2UsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZ2V0Rm9vZHNCeVVzZXJJZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGxldCBwYWdlID0gcGFyc2VJbnQocmVxLnF1ZXJ5LnBhZ2UpIHx8IDFcbiAgICBsZXQgcG9zaXRpb25TdGFydCA9IChwYWdlIC0gMSkgKiBDb25zdGFudHMuQU1PVU5UX0lURU1fSU5fUEVSX1BBR0VcbiAgICB0cnkge1xuICAgICAgICBsZXQgZm9vZHMgPSBhd2FpdCBGb29kLmZpbmQoe1xuICAgICAgICAgICAgdXNlcklkOiByZXEucGFyYW1zLnVzZXJJZFxuICAgICAgICB9KS5zb3J0KHtcbiAgICAgICAgICAgIF9pZDogLTFcbiAgICAgICAgfSkubGltaXQoQ29uc3RhbnRzLkFNT1VOVF9JVEVNX0lOX1BFUl9QQUdFKS5za2lwKHBvc2l0aW9uU3RhcnQpO1xuXG4gICAgICAgIGxldCB0b3RhbEZvb2RzID0gYXdhaXQgRm9vZC5jb3VudERvY3VtZW50cyh7XG4gICAgICAgICAgICB1c2VySWQ6IHJlcS5wYXJhbXMudXNlcklkXG4gICAgICAgIH0pXG5cbiAgICAgICAgbGV0IHRvdGFsUGFnZSA9IE1hdGguY2VpbCh0b3RhbEZvb2RzIC8gQ29uc3RhbnRzLkFNT1VOVF9JVEVNX0lOX1BFUl9QQUdFKVxuXG4gICAgICAgIGxldCBjdXJyZW50UGFnZSA9IChwYWdlID4gdG90YWxQYWdlKSA/IHRvdGFsUGFnZSA6IHBhZ2VcblxuICAgICAgICBpZiAoIWZvb2RzKVxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjA0KS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV8yMDQsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTXzIwNFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIGZvb2RzOiBmb29kcyxcbiAgICAgICAgICAgICAgICB0b3RhbF9wYWdlOiB0b3RhbFBhZ2UsXG4gICAgICAgICAgICAgICAgY3VycmVudF9wYWdlOiBjdXJyZW50UGFnZSxcbiAgICAgICAgICAgICAgICB0b3RhbF9mb29kOiB0b3RhbEZvb2RzXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWVzc2FnZTogQ29uc3RhbnRzLk1FU1NBR0VfU1VDQ0VTUyxcbiAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU18yMDBcbiAgICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBlcnIsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZ2V0Rm9vZHNPZlVzZXIgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICB2YXIgcGFnZSA9IHBhcnNlSW50KHJlcS5xdWVyeS5wYWdlKSB8fCAxXG4gICAgdmFyIHBvc2l0aW9uU3RhcnQgPSAocGFnZSAtIDEpICogQ29uc3RhbnRzLkFNT1VOVF9JVEVNX0lOX1BFUl9QQUdFXG4gICAgdHJ5IHtcbiAgICAgICAgdmFyIGZvb2RzID0gYXdhaXQgRm9vZC5maW5kKHtcbiAgICAgICAgICAgIHVzZXJJZDogcmVxLnVzZXIuX2lkXG4gICAgICAgIH0pLnNvcnQoe1xuICAgICAgICAgICAgX2lkOiAtMVxuICAgICAgICB9KS5saW1pdChDb25zdGFudHMuQU1PVU5UX0lURU1fSU5fUEVSX1BBR0UpLnNraXAocG9zaXRpb25TdGFydCk7XG5cbiAgICAgICAgaWYgKCFmb29kcylcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwNCkuanNvbih7XG4gICAgICAgICAgICAgICAgZGF0YTogXCJcIixcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV8yMDQsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTXzIwNFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgbGV0IHRvdGFsRm9vZHMgPSBhd2FpdCBGb29kLmNvdW50RG9jdW1lbnRzKHtcbiAgICAgICAgICAgIHVzZXJJZDogcmVxLnVzZXIuX2lkXG4gICAgICAgIH0pXG5cbiAgICAgICAgbGV0IHRvdGFsUGFnZSA9IE1hdGguY2VpbCh0b3RhbEZvb2RzIC8gQ29uc3RhbnRzLkFNT1VOVF9JVEVNX0lOX1BFUl9QQUdFKVxuXG4gICAgICAgIGxldCBjdXJyZW50UGFnZSA9IChwYWdlID4gdG90YWxQYWdlKSA/IHRvdGFsUGFnZSA6IHBhZ2VcblxuICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgZm9vZHM6IGZvb2RzLFxuICAgICAgICAgICAgICAgIHRvdGFsX3BhZ2U6IHRvdGFsUGFnZSxcbiAgICAgICAgICAgICAgICBjdXJyZW50X3BhZ2U6IGN1cnJlbnRQYWdlLFxuICAgICAgICAgICAgICAgIHRvdGFsX2Zvb2Q6IHRvdGFsRm9vZHNcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9TVUNDRVNTLFxuICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTXzIwMFxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IGVycixcbiAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU19FUlJPUlxuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cy51cGRhdGVGb29kQnlJZCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIGlmIChyZXEuZmlsZSkgcmVxLmJvZHkuaW1nX3VybCA9IENvbnN0YW50cy5NWV9GT09EX1VSTCArIENvbnN0YW50cy5QQVRIX0lNRyArIHJlcS5maWxlLmZpbGVuYW1lO1xuICAgIHRyeSB7XG4gICAgICAgIGxldCBmb29kID0gYXdhaXQgRm9vZC5maW5kT25lQW5kVXBkYXRlKHtcbiAgICAgICAgICAgIF9pZDogcmVxLnBhcmFtcy5mb29kSWRcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgJHNldDogcmVxLmJvZHlcbiAgICAgICAgfSwge1xuICAgICAgICAgICAgdXNlRmluZEFuZE1vZGlmeTogZmFsc2VcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKCFmb29kKVxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9OT1RfRk9VTkQsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTX0VSUk9SXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICBpZiAocmVxLmZpbGUpIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IGZvb2QuaW1nX3VybC5yZXBsYWNlKENvbnN0YW50cy5NWV9GT09EX1VSTCwgJycpO1xuICAgICAgICAgICAgICAgIGZzLnVubGlua1N5bmMoQ29uc3RhbnRzLlBBVEhfUFVCTElDICsgcGF0aCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3NmdWxseSBkZWxldGVkIGltZy11cmwgb2YgJyArIGZvb2QubmFtZSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjYW4gbm90IGRlbGV0ZSBpbWctdXJsJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zb2xlLmxvZyhcIm9sZCBjYXRlZ29yeTogXCIgKyBmb29kLmNhdGVnb3J5SWQpXG4gICAgICAgIGNvbnNvbGUubG9nKFwibmV3IGNhdGVnb3J5OiBcIiArIHJlcS5ib2R5LmNhdGVnb3J5SWQpXG4gICAgICAgIGlmICgocmVxLmJvZHkuY2F0ZWdvcnlJZCkgJiYgKHJlcS5ib2R5LmNhdGVnb3J5SWQgIT0gZm9vZC5jYXRlZ29yeUlkKSkge1xuICAgICAgICAgICAgY29uc3QgbnVtYmVyRm9vZFdpdGhPbGRDYXRlZ29yeUlkID0gYXdhaXQgRm9vZC5jb3VudERvY3VtZW50cyh7XG4gICAgICAgICAgICAgICAgY2F0ZWdvcnlJZDogZm9vZC5jYXRlZ29yeUlkLFxuICAgICAgICAgICAgICAgIHVzZXJJZDogcmVxLnVzZXIuX2lkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKG51bWJlckZvb2RXaXRoT2xkQ2F0ZWdvcnlJZCA9PSAwKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgVXNlci51cGRhdGVPbmUoe1xuICAgICAgICAgICAgICAgICAgICBfaWQ6IHJlcS51c2VyLl9pZFxuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgJHB1bGw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3JpZXM6IGZvb2QuY2F0ZWdvcnlJZFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBsZXQgdXNlciA9IGF3YWl0IFVzZXIuZmluZE9uZSh7XG4gICAgICAgICAgICAgICAgICAgIF9pZDogcmVxLnVzZXIuX2lkXG4gICAgICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgICAgICBpZiAoIXVzZXIuY2F0ZWdvcmllcy5pbmNsdWRlcyhyZXEuYm9keS5jYXRlZ29yeUlkKSkge1xuICAgICAgICAgICAgICAgICAgICB1c2VyLmNhdGVnb3JpZXMucHVzaChyZXEuYm9keS5jYXRlZ29yeUlkKVxuICAgICAgICAgICAgICAgICAgICBhd2FpdCBVc2VyLmZpbmRPbmVBbmRVcGRhdGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgX2lkOiByZXEudXNlci5faWRcbiAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgJHNldCA6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXRlZ29yaWVzOiB1c2VyLmNhdGVnb3JpZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXNlRmluZEFuZE1vZGlmeTogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG5ld0Zvb2QgPSBhd2FpdCBGb29kLmZpbmRPbmUoe1xuICAgICAgICAgICAgX2lkOiByZXEucGFyYW1zLmZvb2RJZFxuICAgICAgICB9KTtcblxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgZGF0YTogbmV3Rm9vZCxcbiAgICAgICAgICAgIG1lc3NhZ2U6IENvbnN0YW50cy5NRVNTQUdFX1VQREFURUQsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfMjAwXG4gICAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBpZiAoZXJyLm5hbWUgPT09ICdNb25nb0Vycm9yJyAmJiBlcnIuY29kZSA9PT0gMTEwMDApXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDkpLmpzb24oe1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVyci5tZXNzYWdlLFxuICAgICAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU19FUlJPUlxuICAgICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbih7XG4gICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9VTktOT1dOX1NFVkVSX0VSUk9SLFxuICAgICAgICAgICAgc3RhdHVzOiBDb25zdGFudHMuU1RBVFVTX0VSUk9SXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzLmRlbGV0ZUZvb2RCeUlkID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgbGV0IGZvb2QgPSBhd2FpdCBGb29kLmZpbmRPbmVBbmRSZW1vdmUoe1xuICAgICAgICAgICAgX2lkOiByZXEucGFyYW1zLmZvb2RJZFxuICAgICAgICB9LCB7XG4gICAgICAgICAgICB1c2VGaW5kQW5kTW9kaWZ5OiBmYWxzZVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIWZvb2QpIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgICAgICAgbWVzc2FnZTogQ29uc3RhbnRzLk1FU1NBR0VfTk9UX0ZPVU5ELFxuICAgICAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLk1FU1NBR0VfTk9UX0ZPVU5EXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IGZvb2QuaW1nX3VybC5yZXBsYWNlKENvbnN0YW50cy5NWV9GT09EX1VSTCwgJycpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwYXRoID4gJyArIHBhdGgpXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3BhdGggc3lzdGVtID4gJyArIENvbnN0YW50cy5QQVRIX1BVQkxJQyArIHBhdGgpXG4gICAgICAgICAgICAgICAgZnMudW5saW5rU3luYyhDb25zdGFudHMuUEFUSF9QVUJMSUMgKyBwYXRoKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgaW1nLXVybCBvZiAnICsgZm9vZC5uYW1lKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NhbiBub3QgZGVsZXRlIGltZy11cmwnKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgY291bnRGb29kU2FtZUNhdGVnb3J5T2ZVc2VyID0gYXdhaXQgRm9vZC5jb3VudERvY3VtZW50cyh7XG4gICAgICAgICAgICAgICAgY2F0ZWdvcnlJZDogZm9vZC5jYXRlZ29yeUlkLFxuICAgICAgICAgICAgICAgIHVzZXJJZDogcmVxLnVzZXIuX2lkXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgaWYgKGNvdW50Rm9vZFNhbWVDYXRlZ29yeU9mVXNlciA9PSAwKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgVXNlci51cGRhdGVPbmUoe1xuICAgICAgICAgICAgICAgICAgICBfaWQ6IHJlcS51c2VyLl9pZFxuICAgICAgICAgICAgICAgIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgJHB1bGw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3JpZXM6IGZvb2QuY2F0ZWdvcnlJZFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBDb25zdGFudHMuTUVTU0FHRV9ERUxFVEVELFxuICAgICAgICAgICAgICAgIHN0YXR1czogQ29uc3RhbnRzLlNUQVRVU18yMDBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZXgpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgICAgICAgIG1lc3NhZ2U6IENvbnN0YW50cy5NRVNTQUdFX1VOS05PV05fU0VWRVJfRVJST1IsXG4gICAgICAgICAgICBzdGF0dXM6IENvbnN0YW50cy5TVEFUVVNfRVJST1JcbiAgICAgICAgfSk7XG4gICAgfVxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "food.js"
      ],
      "names": [
        "Food",
        "require",
        "Constants",
        "User",
        "fs",
        "module",
        "exports",
        "createFood",
        "req",
        "res",
        "file",
        "status",
        "json",
        "message",
        "MESSAGE_500",
        "STATUS_ERROR",
        "body",
        "img_url",
        "MY_FOOD_URL",
        "PATH_IMG",
        "filename",
        "userId",
        "user",
        "_id",
        "categoryId",
        "params",
        "food",
        "findOne",
        "categories",
        "undefined",
        "includes",
        "push",
        "findOneAndUpdate",
        "useFindAndModify",
        "save",
        "newFood",
        "data",
        "MESSAGE_SUCCESS",
        "STATUS_200",
        "name",
        "code",
        "MESSAGE_UNKNOWN_SEVER_ERROR",
        "getFoodsByUserId",
        "page",
        "parseInt",
        "query",
        "positionStart",
        "AMOUNT_ITEM_IN_PER_PAGE",
        "find",
        "sort",
        "limit",
        "skip",
        "foods",
        "countDocuments",
        "totalFoods",
        "totalPage",
        "Math",
        "ceil",
        "currentPage",
        "MESSAGE_204",
        "STATUS_204",
        "total_page",
        "current_page",
        "total_food",
        "getFoodsOfUser",
        "updateFoodById",
        "foodId",
        "$set",
        "MESSAGE_NOT_FOUND",
        "path",
        "replace",
        "unlinkSync",
        "PATH_PUBLIC",
        "console",
        "log",
        "error",
        "numberFoodWithOldCategoryId",
        "updateOne",
        "$pull",
        "MESSAGE_UPDATED",
        "deleteFoodById",
        "findOneAndRemove",
        "countFoodSameCategoryOfUser",
        "MESSAGE_DELETED"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "sourcesContent": [
        "var Food = require('../models/food'),\n    Constants = require('../utils/constants'),\n    User = require('../models/user'),\n    fs = require('fs');\n\nmodule.exports.createFood = async (req, res) => {\n    if (!req.file)\n        return res.status(500).json({\n            message: Constants.MESSAGE_500,\n            status: Constants.STATUS_ERROR\n        });\n    req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n    req.body.userId = req.user._id;\n    req.body.categoryId = req.params.categoryId\n\n    const food = new Food(req.body);\n\n    try {\n        var user = await User.findOne({\n            _id: req.user._id\n        })\n\n        if (user.categories == undefined)\n            user.categories = []\n        if (!user.categories.includes(req.params.categoryId)) {\n            user.categories.push(req.params.categoryId)\n            await User.findOneAndUpdate({\n                _id: req.user._id\n            }, {\n                categories: user.categories\n            }, {\n                useFindAndModify: false\n            })\n        }\n\n        var newFood = await food.save();\n        return res.status(201).json({\n            data: newFood,\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        })\n    } catch (err) {\n        if (err.name === 'MongoError' && err.code == 11000)\n            return res.status(409).json({\n                message: err.message,\n                status: Constants.STATUS_ERROR\n            });\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR + err.message,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};\n\nmodule.exports.getFoodsByUserId = async (req, res) => {\n    let page = parseInt(req.query.page) || 1\n    let positionStart = (page - 1) * Constants.AMOUNT_ITEM_IN_PER_PAGE\n    try {\n        let foods = await Food.find({\n            userId: req.params.userId\n        }).sort({\n            _id: -1\n        }).limit(Constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n\n        let totalFoods = await Food.countDocuments({\n            userId: req.params.userId\n        })\n\n        let totalPage = Math.ceil(totalFoods / Constants.AMOUNT_ITEM_IN_PER_PAGE)\n\n        let currentPage = (page > totalPage) ? totalPage : page\n\n        if (!foods)\n            return res.status(204).json({\n                message: Constants.MESSAGE_204,\n                status: Constants.STATUS_204\n            });\n\n        res.status(200).json({\n            data: {\n                foods: foods,\n                total_page: totalPage,\n                current_page: currentPage,\n                total_food: totalFoods\n            },\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        });\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};\n\nmodule.exports.getFoodsOfUser = async (req, res) => {\n    var page = parseInt(req.query.page) || 1\n    var positionStart = (page - 1) * Constants.AMOUNT_ITEM_IN_PER_PAGE\n    try {\n        var foods = await Food.find({\n            userId: req.user._id\n        }).sort({\n            _id: -1\n        }).limit(Constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n\n        if (!foods)\n            return res.status(204).json({\n                data: \"\",\n                message: Constants.MESSAGE_204,\n                status: Constants.STATUS_204\n            });\n\n        let totalFoods = await Food.countDocuments({\n            userId: req.user._id\n        })\n\n        let totalPage = Math.ceil(totalFoods / Constants.AMOUNT_ITEM_IN_PER_PAGE)\n\n        let currentPage = (page > totalPage) ? totalPage : page\n\n        res.status(200).json({\n            data: {\n                foods: foods,\n                total_page: totalPage,\n                current_page: currentPage,\n                total_food: totalFoods\n            },\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        });\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};\n\nmodule.exports.updateFoodById = async (req, res) => {\n    if (req.file) req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n    try {\n        let food = await Food.findOneAndUpdate({\n            _id: req.params.foodId\n        }, {\n            $set: req.body\n        }, {\n            useFindAndModify: false\n        });\n\n        if (!food)\n            return res.status(400).json({\n                message: Constants.MESSAGE_NOT_FOUND,\n                status: Constants.STATUS_ERROR\n            });\n\n        if (req.file) {\n            try {\n                const path = food.img_url.replace(Constants.MY_FOOD_URL, '');\n                fs.unlinkSync(Constants.PATH_PUBLIC + path);\n                console.log('successfully deleted img-url of ' + food.name);\n            } catch (error) {\n                console.log('can not delete img-url')\n            }\n        }\n        console.log(\"old category: \" + food.categoryId)\n        console.log(\"new category: \" + req.body.categoryId)\n        if ((req.body.categoryId) && (req.body.categoryId != food.categoryId)) {\n            const numberFoodWithOldCategoryId = await Food.countDocuments({\n                categoryId: food.categoryId,\n                userId: req.user._id\n            });\n            \n            if (numberFoodWithOldCategoryId == 0) {\n                await User.updateOne({\n                    _id: req.user._id\n                }, {\n                    $pull: {\n                        categories: food.categoryId\n                    }\n                })\n            }\n\n            try {\n                let user = await User.findOne({\n                    _id: req.user._id\n                })\n    \n                if (!user.categories.includes(req.body.categoryId)) {\n                    user.categories.push(req.body.categoryId)\n                    await User.findOneAndUpdate({\n                        _id: req.user._id\n                    }, {\n                        $set : {\n                            categories: user.categories\n                        }\n                    }, {\n                        useFindAndModify: false\n                    })\n                } \n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        const newFood = await Food.findOne({\n            _id: req.params.foodId\n        });\n\n        return res.status(200).json({\n            data: newFood,\n            message: Constants.MESSAGE_UPDATED,\n            status: Constants.STATUS_200\n        });\n    } catch (err) {\n        if (err.name === 'MongoError' && err.code === 11000)\n            return res.status(409).json({\n                message: err.message,\n                status: Constants.STATUS_ERROR\n            });\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};\n\nmodule.exports.deleteFoodById = async (req, res) => {\n    try {\n        let food = await Food.findOneAndRemove({\n            _id: req.params.foodId\n        }, {\n            useFindAndModify: false\n        });\n\n        if (!food) {\n            return res.status(400).json({\n                message: Constants.MESSAGE_NOT_FOUND,\n                status: Constants.MESSAGE_NOT_FOUND\n            });\n        } else {\n            try {\n                const path = food.img_url.replace(Constants.MY_FOOD_URL, '');\n                console.log('path > ' + path)\n                console.log('path system > ' + Constants.PATH_PUBLIC + path)\n                fs.unlinkSync(Constants.PATH_PUBLIC + path);\n                console.log('successfully deleted img-url of ' + food.name);\n            } catch (error) {\n                console.log('can not delete img-url')\n            }\n\n            let countFoodSameCategoryOfUser = await Food.countDocuments({\n                categoryId: food.categoryId,\n                userId: req.user._id\n            });\n\n            if (countFoodSameCategoryOfUser == 0) {\n                await User.updateOne({\n                    _id: req.user._id\n                }, {\n                    $pull: {\n                        categories: food.categoryId\n                    }\n                })\n            }\n\n            return res.status(200).json({\n                message: Constants.MESSAGE_DELETED,\n                status: Constants.STATUS_200\n            });\n        }\n    } catch (ex) {\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577379082182
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/models/food.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/models/food.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/models/food.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/models/food.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
        "sourceFileName": "food.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar FoodSchema = new mongoose.Schema({\n  name: {\n    type: String,\n    trim: true,\n    required: true\n  },\n  cost: {\n    type: Number,\n    \"default\": 0\n  },\n  unit: {\n    type: String,\n    \"default\": 'kg'\n  },\n  amount_buy: {\n    type: Number,\n    \"default\": 0\n  },\n  img_url: {\n    type: String\n  },\n  state: {\n    type: Boolean,\n    \"default\": true\n  },\n  userId: {\n    type: String,\n    required: true\n  },\n  categoryId: {\n    type: String,\n    required: true\n  },\n  date_created: {\n    type: Date,\n    \"default\": Date.now\n  }\n});\nvar Food = mongoose.model('Food', FoodSchema, 'foods');\nmodule.exports = Food;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvb2QuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiRm9vZFNjaGVtYSIsIlNjaGVtYSIsIm5hbWUiLCJ0eXBlIiwiU3RyaW5nIiwidHJpbSIsInJlcXVpcmVkIiwiY29zdCIsIk51bWJlciIsInVuaXQiLCJhbW91bnRfYnV5IiwiaW1nX3VybCIsInN0YXRlIiwiQm9vbGVhbiIsInVzZXJJZCIsImNhdGVnb3J5SWQiLCJkYXRlX2NyZWF0ZWQiLCJEYXRlIiwibm93IiwiRm9vZCIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUVBLElBQUlDLFVBQVUsR0FBRyxJQUFJRixRQUFRLENBQUNHLE1BQWIsQ0FBb0I7QUFDakNDLEVBQUFBLElBQUksRUFBRTtBQUNGQyxJQUFBQSxJQUFJLEVBQUVDLE1BREo7QUFFRkMsSUFBQUEsSUFBSSxFQUFFLElBRko7QUFHRkMsSUFBQUEsUUFBUSxFQUFFO0FBSFIsR0FEMkI7QUFNakNDLEVBQUFBLElBQUksRUFBRTtBQUNGSixJQUFBQSxJQUFJLEVBQUVLLE1BREo7QUFFRixlQUFTO0FBRlAsR0FOMkI7QUFVakNDLEVBQUFBLElBQUksRUFBRTtBQUNGTixJQUFBQSxJQUFJLEVBQUVDLE1BREo7QUFFRixlQUFTO0FBRlAsR0FWMkI7QUFjakNNLEVBQUFBLFVBQVUsRUFBRTtBQUNSUCxJQUFBQSxJQUFJLEVBQUVLLE1BREU7QUFFUixlQUFTO0FBRkQsR0FkcUI7QUFrQmpDRyxFQUFBQSxPQUFPLEVBQUU7QUFDTFIsSUFBQUEsSUFBSSxFQUFFQztBQURELEdBbEJ3QjtBQXFCakNRLEVBQUFBLEtBQUssRUFBRTtBQUNIVCxJQUFBQSxJQUFJLEVBQUVVLE9BREg7QUFFSCxlQUFTO0FBRk4sR0FyQjBCO0FBeUJqQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pYLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKRSxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQXpCeUI7QUE2QmpDUyxFQUFBQSxVQUFVLEVBQUU7QUFDUlosSUFBQUEsSUFBSSxFQUFFQyxNQURFO0FBRVJFLElBQUFBLFFBQVEsRUFBRTtBQUZGLEdBN0JxQjtBQWlDakNVLEVBQUFBLFlBQVksRUFBRTtBQUNWYixJQUFBQSxJQUFJLEVBQUVjLElBREk7QUFFVixlQUFTQSxJQUFJLENBQUNDO0FBRko7QUFqQ21CLENBQXBCLENBQWpCO0FBdUNBLElBQUlDLElBQUksR0FBR3JCLFFBQVEsQ0FBQ3NCLEtBQVQsQ0FBZSxNQUFmLEVBQXVCcEIsVUFBdkIsRUFBbUMsT0FBbkMsQ0FBWDtBQUVBcUIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSCxJQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmgvRG9jdW1lbnRzL25vZGVqcy9teWZvb2QtYXBpL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbInZhciBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5cbnZhciBGb29kU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgbmFtZToge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHRyaW06IHRydWUsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBjb3N0OiB7XG4gICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgZGVmYXVsdDogMFxuICAgIH0sXG4gICAgdW5pdDoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6ICdrZydcbiAgICB9LFxuICAgIGFtb3VudF9idXk6IHtcbiAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICBkZWZhdWx0OiAwXG4gICAgfSxcbiAgICBpbWdfdXJsOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZ1xuICAgIH0sXG4gICAgc3RhdGU6IHtcbiAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgIH0sXG4gICAgdXNlcklkOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIGNhdGVnb3J5SWQ6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgZGF0ZV9jcmVhdGVkOiB7XG4gICAgICAgIHR5cGU6IERhdGUsXG4gICAgICAgIGRlZmF1bHQ6IERhdGUubm93XG4gICAgfVxufSk7XG5cbnZhciBGb29kID0gbW9uZ29vc2UubW9kZWwoJ0Zvb2QnLCBGb29kU2NoZW1hLCAnZm9vZHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBGb29kOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "food.js"
      ],
      "names": [
        "mongoose",
        "require",
        "FoodSchema",
        "Schema",
        "name",
        "type",
        "String",
        "trim",
        "required",
        "cost",
        "Number",
        "unit",
        "amount_buy",
        "img_url",
        "state",
        "Boolean",
        "userId",
        "categoryId",
        "date_created",
        "Date",
        "now",
        "Food",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,UAAU,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACjCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,IAAI,EAAE,IAFJ;AAGFC,IAAAA,QAAQ,EAAE;AAHR,GAD2B;AAMjCC,EAAAA,IAAI,EAAE;AACFJ,IAAAA,IAAI,EAAEK,MADJ;AAEF,eAAS;AAFP,GAN2B;AAUjCC,EAAAA,IAAI,EAAE;AACFN,IAAAA,IAAI,EAAEC,MADJ;AAEF,eAAS;AAFP,GAV2B;AAcjCM,EAAAA,UAAU,EAAE;AACRP,IAAAA,IAAI,EAAEK,MADE;AAER,eAAS;AAFD,GAdqB;AAkBjCG,EAAAA,OAAO,EAAE;AACLR,IAAAA,IAAI,EAAEC;AADD,GAlBwB;AAqBjCQ,EAAAA,KAAK,EAAE;AACHT,IAAAA,IAAI,EAAEU,OADH;AAEH,eAAS;AAFN,GArB0B;AAyBjCC,EAAAA,MAAM,EAAE;AACJX,IAAAA,IAAI,EAAEC,MADF;AAEJE,IAAAA,QAAQ,EAAE;AAFN,GAzByB;AA6BjCS,EAAAA,UAAU,EAAE;AACRZ,IAAAA,IAAI,EAAEC,MADE;AAERE,IAAAA,QAAQ,EAAE;AAFF,GA7BqB;AAiCjCU,EAAAA,YAAY,EAAE;AACVb,IAAAA,IAAI,EAAEc,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AAjCmB,CAApB,CAAjB;AAuCA,IAAIC,IAAI,GAAGrB,QAAQ,CAACsB,KAAT,CAAe,MAAf,EAAuBpB,UAAvB,EAAmC,OAAnC,CAAX;AAEAqB,MAAM,CAACC,OAAP,GAAiBH,IAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "sourcesContent": [
        "var mongoose = require('mongoose');\n\nvar FoodSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        trim: true,\n        required: true\n    },\n    cost: {\n        type: Number,\n        default: 0\n    },\n    unit: {\n        type: String,\n        default: 'kg'\n    },\n    amount_buy: {\n        type: Number,\n        default: 0\n    },\n    img_url: {\n        type: String\n    },\n    state: {\n        type: Boolean,\n        default: true\n    },\n    userId: {\n        type: String,\n        required: true\n    },\n    categoryId: {\n        type: String,\n        required: true\n    },\n    date_created: {\n        type: Date,\n        default: Date.now\n    }\n});\n\nvar Food = mongoose.model('Food', FoodSchema, 'foods');\n\nmodule.exports = Food;"
      ]
    },
    "sourceType": "script",
    "mtime": 1574522038783
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/routes/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/routes/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/routes/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar controller = require('../controllers/index');\n\nmodule.exports = function (app) {\n  app.get('/', controller.index);\n  app.get('/list_user', controller.getUsers);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnRyb2xsZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImdldCIsImluZGV4IiwiZ2V0VXNlcnMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsVUFBVSxHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBeEI7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxHQUFELEVBQVM7QUFDdEJBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLEdBQVIsRUFBYUwsVUFBVSxDQUFDTSxLQUF4QjtBQUVBRixFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCTCxVQUFVLENBQUNPLFFBQWpDO0FBQ0gsQ0FKRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmgvRG9jdW1lbnRzL25vZGVqcy9teWZvb2QtYXBpL3JvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBjb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvaW5kZXgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAoYXBwKSA9PiB7XG4gICAgYXBwLmdldCgnLycsIGNvbnRyb2xsZXIuaW5kZXgpO1xuXG4gICAgYXBwLmdldCgnL2xpc3RfdXNlcicsIGNvbnRyb2xsZXIuZ2V0VXNlcnMpO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "controller",
        "require",
        "module",
        "exports",
        "app",
        "get",
        "index",
        "getUsers"
      ],
      "mappings": ";;AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,sBAAD,CAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACtBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaL,UAAU,CAACM,KAAxB;AAEAF,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAsBL,UAAU,CAACO,QAAjC;AACH,CAJD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "sourcesContent": [
        "var controller = require('../controllers/index');\n\nmodule.exports = (app) => {\n    app.get('/', controller.index);\n\n    app.get('/list_user', controller.getUsers);\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571070642369
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/controllers/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/controllers/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar User = require('../models/user');\n\nmodule.exports.index = function (req, res) {\n  res.json({\n    author: \"dong bin\"\n  });\n};\n\nmodule.exports.getUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var users;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return User.find();\n\n          case 2:\n            users = _context.sent;\n            res.json({\n              users: users\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlVzZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImluZGV4IiwicmVxIiwicmVzIiwianNvbiIsImF1dGhvciIsImdldFVzZXJzIiwiZmluZCIsInVzZXJzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFJQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxnQkFBRCxDQUFsQjs7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLENBQWVDLEtBQWYsR0FBdUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakNBLEVBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTO0FBQUNDLElBQUFBLE1BQU0sRUFBRTtBQUFULEdBQVQ7QUFDSCxDQUZEOztBQUlBTixNQUFNLENBQUNDLE9BQVAsQ0FBZU0sUUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsMEJBQTBCLGlCQUFlSixHQUFmLEVBQW9CQyxHQUFwQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNKTixJQUFJLENBQUNVLElBQUwsRUFESTs7QUFBQTtBQUNsQkMsWUFBQUEsS0FEa0I7QUFFdEJMLFlBQUFBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTO0FBQ0xJLGNBQUFBLEtBQUssRUFBRUE7QUFERixhQUFUOztBQUZzQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUExQjs7QUFBQTtBQUFBO0FBQUE7QUFBQSIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbmgvRG9jdW1lbnRzL25vZGVqcy9teWZvb2QtYXBpL2NvbnRyb2xsZXJzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFVzZXIgPSByZXF1aXJlKCcuLi9tb2RlbHMvdXNlcicpO1xuXG5tb2R1bGUuZXhwb3J0cy5pbmRleCA9IChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHthdXRob3I6IFwiZG9uZyBiaW5cIn0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMuZ2V0VXNlcnMgPSBhc3luYyBmdW5jdGlvbihyZXEsIHJlcykge1xuICAgIHZhciB1c2VycyA9IGF3YWl0IFVzZXIuZmluZCgpO1xuICAgIHJlcy5qc29uKHtcbiAgICAgICAgdXNlcnM6IHVzZXJzXG4gICAgfSk7XG59O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "User",
        "require",
        "module",
        "exports",
        "index",
        "req",
        "res",
        "json",
        "author",
        "getUsers",
        "find",
        "users"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAAlB;;AAEAC,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAT;AACH,CAFD;;AAIAN,MAAM,CAACC,OAAP,CAAeM,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA0B,iBAAeJ,GAAf,EAAoBC,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJN,IAAI,CAACU,IAAL,EADI;;AAAA;AAClBC,YAAAA,KADkB;AAEtBL,YAAAA,GAAG,CAACC,IAAJ,CAAS;AACLI,cAAAA,KAAK,EAAEA;AADF,aAAT;;AAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "sourcesContent": [
        "var User = require('../models/user');\n\nmodule.exports.index = (req, res) => {\n    res.json({author: \"dong bin\"});\n};\n\nmodule.exports.getUsers = async function(req, res) {\n    var users = await User.find();\n    res.json({\n        users: users\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1571201642406
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/routes/order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/routes/order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/routes/order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/routes/order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar orderController = require('../controllers/order'),\n    authController = require('../controllers/auth');\n\nmodule.exports = function (app) {\n  app.route('/order').post(authController.loginRequired, orderController.createOrder).get(authController.loginRequired, orderController.getOrders);\n  app.route('/order/:orderId').get(authController.loginRequired, orderController.getOrderByUserId).put(authController.loginRequired, orderController.updateOrderStatus);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLmpzIl0sIm5hbWVzIjpbIm9yZGVyQ29udHJvbGxlciIsInJlcXVpcmUiLCJhdXRoQ29udHJvbGxlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJyb3V0ZSIsInBvc3QiLCJsb2dpblJlcXVpcmVkIiwiY3JlYXRlT3JkZXIiLCJnZXQiLCJnZXRPcmRlcnMiLCJnZXRPcmRlckJ5VXNlcklkIiwicHV0IiwidXBkYXRlT3JkZXJTdGF0dXMiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsZUFBZSxHQUFHQyxPQUFPLENBQUMsc0JBQUQsQ0FBN0I7QUFBQSxJQUNJQyxjQUFjLEdBQUdELE9BQU8sQ0FBQyxxQkFBRCxDQUQ1Qjs7QUFHQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBUztBQUN0QkEsRUFBQUEsR0FBRyxDQUFDQyxLQUFKLENBQVUsUUFBVixFQUNLQyxJQURMLENBQ1VMLGNBQWMsQ0FBQ00sYUFEekIsRUFDd0NSLGVBQWUsQ0FBQ1MsV0FEeEQsRUFFS0MsR0FGTCxDQUVTUixjQUFjLENBQUNNLGFBRnhCLEVBRXVDUixlQUFlLENBQUNXLFNBRnZEO0FBSUFOLEVBQUFBLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLGlCQUFWLEVBQ0tJLEdBREwsQ0FDU1IsY0FBYyxDQUFDTSxhQUR4QixFQUN1Q1IsZUFBZSxDQUFDWSxnQkFEdkQsRUFFS0MsR0FGTCxDQUVTWCxjQUFjLENBQUNNLGFBRnhCLEVBRXVDUixlQUFlLENBQUNjLGlCQUZ2RDtBQUdILENBUkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5oL0RvY3VtZW50cy9ub2RlanMvbXlmb29kLWFwaS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgb3JkZXJDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvb3JkZXInKSxcbiAgICBhdXRoQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL2F1dGgnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IChhcHApID0+IHtcbiAgICBhcHAucm91dGUoJy9vcmRlcicpXG4gICAgICAgIC5wb3N0KGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIG9yZGVyQ29udHJvbGxlci5jcmVhdGVPcmRlcilcbiAgICAgICAgLmdldChhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCBvcmRlckNvbnRyb2xsZXIuZ2V0T3JkZXJzKVxuXG4gICAgYXBwLnJvdXRlKCcvb3JkZXIvOm9yZGVySWQnKVxuICAgICAgICAuZ2V0KGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIG9yZGVyQ29udHJvbGxlci5nZXRPcmRlckJ5VXNlcklkKVxuICAgICAgICAucHV0KGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIG9yZGVyQ29udHJvbGxlci51cGRhdGVPcmRlclN0YXR1cylcbn07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "orderController",
        "require",
        "authController",
        "module",
        "exports",
        "app",
        "route",
        "post",
        "loginRequired",
        "createOrder",
        "get",
        "getOrders",
        "getOrderByUserId",
        "put",
        "updateOrderStatus"
      ],
      "mappings": ";;AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,sBAAD,CAA7B;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,qBAAD,CAD5B;;AAGAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACtBA,EAAAA,GAAG,CAACC,KAAJ,CAAU,QAAV,EACKC,IADL,CACUL,cAAc,CAACM,aADzB,EACwCR,eAAe,CAACS,WADxD,EAEKC,GAFL,CAESR,cAAc,CAACM,aAFxB,EAEuCR,eAAe,CAACW,SAFvD;AAIAN,EAAAA,GAAG,CAACC,KAAJ,CAAU,iBAAV,EACKI,GADL,CACSR,cAAc,CAACM,aADxB,EACuCR,eAAe,CAACY,gBADvD,EAEKC,GAFL,CAESX,cAAc,CAACM,aAFxB,EAEuCR,eAAe,CAACc,iBAFvD;AAGH,CARD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "sourcesContent": [
        "var orderController = require('../controllers/order'),\n    authController = require('../controllers/auth')\n\nmodule.exports = (app) => {\n    app.route('/order')\n        .post(authController.loginRequired, orderController.createOrder)\n        .get(authController.loginRequired, orderController.getOrders)\n\n    app.route('/order/:orderId')\n        .get(authController.loginRequired, orderController.getOrderByUserId)\n        .put(authController.loginRequired, orderController.updateOrderStatus)\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1575907808600
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/controllers/order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/controllers/order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Order = require('../models/order'),\n    User = require('../models/user'),\n    Constants = require('../utils/constants'),\n    Food = require('../models/food');\n\nmodule.exports.createOrder =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var oldOrder, food, farmer, order, newOrder;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req.body.buyerId = req.user._id;\n            _context.prev = 1;\n            _context.next = 4;\n            return Order.findOne({\n              foodId: req.body.foodId,\n              buyerId: req.body.buyerId\n            });\n\n          case 4:\n            oldOrder = _context.sent;\n\n            if (!oldOrder) {\n              _context.next = 8;\n              break;\n            }\n\n            if (!(oldOrder.status === Constants.REQUESTING || oldOrder.status === Constants.APPROVED)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(200).json({\n              message: Constants.MESSAGE_ERROR_DUPLICATE,\n              status: Constants.STATUS_400\n            }));\n\n          case 8:\n            _context.next = 10;\n            return Food.findOne({\n              _id: req.body.foodId\n            });\n\n          case 10:\n            food = _context.sent;\n\n            if (!(food.state === false)) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(200).json({\n              message: Constants.MESSAGE_OUT_OF_FOOD,\n              status: Constants.STATUS_400\n            }));\n\n          case 13:\n            _context.next = 15;\n            return User.findOne({\n              _id: req.body.sellerId\n            });\n\n          case 15:\n            farmer = _context.sent;\n            req.body.food = food;\n            req.body.farmer = farmer;\n            order = new Order(req.body);\n            _context.next = 21;\n            return order.save();\n\n          case 21:\n            newOrder = _context.sent;\n            return _context.abrupt(\"return\", res.status(201).json({\n              data: newOrder,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 25:\n            _context.prev = 25;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (!(_context.t0.name == 'MongoError' && _context.t0.code == 11000)) {\n              _context.next = 29;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(409).json({\n              message: _context.t0.message,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 29:\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 30:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 25]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getOrders =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var page, positionStart, orders, totalOrders, totalPage, currentPage;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            page = parseInt(req.query.page) || 1;\n            positionStart = (page - 1) * Constants.AMOUNT_ITEM_IN_PER_PAGE;\n            _context2.prev = 2;\n            _context2.next = 5;\n            return Order.find({\n              $or: [{\n                buyerId: req.user._id\n              }, {\n                sellerId: req.user._id\n              }]\n            }).sort({\n              _id: -1\n            }).limit(Constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n\n          case 5:\n            orders = _context2.sent;\n            _context2.next = 8;\n            return Order.countDocuments({\n              $or: [{\n                buyerId: req.user._id\n              }, {\n                sellerId: req.user._id\n              }]\n            });\n\n          case 8:\n            totalOrders = _context2.sent;\n            totalPage = Math.ceil(totalOrders / Constants.AMOUNT_ITEM_IN_PER_PAGE);\n            currentPage = page > totalPage ? totalPage : page;\n\n            if (orders) {\n              _context2.next = 13;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(204).json({\n              message: Constants.MESSAGE_204,\n              status: Constants.STATUS_204\n            }));\n\n          case 13:\n            // if (req.user.role == Constants.ROLE_FARMER) {\n            //     // remove order with status == cancel\n            //     orders.filter((item) => {\n            //         return item.status != Constants.CANCELED\n            //     })\n            // }\n            res.status(200).json({\n              data: {\n                orders: orders,\n                total_page: totalPage,\n                current_page: currentPage,\n                total_item: totalOrders\n              },\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            });\n            _context2.next = 19;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](2);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: _context2.t0,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[2, 16]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getOrderByUserId =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var orderId, userId, order;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            orderId = req.params.orderId;\n            userId = req.user._id;\n            _context3.prev = 2;\n            _context3.next = 5;\n            return Order.findOne({\n              $and: [{\n                _id: orderId\n              }, {\n                $or: [{\n                  buyerId: userId\n                }, {\n                  sellerId: userId\n                }]\n              }]\n            });\n\n          case 5:\n            order = _context3.sent;\n\n            if (order) {\n              _context3.next = 8;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", res.status(404).json({\n              message: Constants.MESSAGE_404,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 8:\n            return _context3.abrupt(\"return\", res.status(200).json({\n              data: order,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](2);\n            return _context3.abrupt(\"return\", res.status(500).json({\n              message: _context3.t0,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 11]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmodule.exports.updateOrderStatus =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var orderId, toStatus, userId, role, filter, order, message, isUpdate, update, updatedOrder;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            orderId = req.params.orderId;\n            toStatus = req.query.toStatus;\n            userId = req.user._id;\n            role = req.user.role;\n            filter = {\n              $and: [{\n                _id: orderId\n              }, {\n                $or: [{\n                  sellerId: userId\n                }, {\n                  buyerId: userId\n                }]\n              }]\n            };\n            _context4.prev = 5;\n            _context4.next = 8;\n            return Order.findOne(filter);\n\n          case 8:\n            order = _context4.sent;\n\n            if (order) {\n              _context4.next = 11;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.status(400).json({\n              message: Constants.MESSAGE_400,\n              status: Constants.STATUS_400\n            }));\n\n          case 11:\n            message = Constants.MESSAGE_400;\n            isUpdate = false;\n            _context4.t0 = toStatus;\n            _context4.next = _context4.t0 === Constants.APPROVED ? 16 : _context4.t0 === Constants.REJECTED ? 16 : _context4.t0 === Constants.CANCELED ? 18 : _context4.t0 === Constants.DONE ? 20 : 28;\n            break;\n\n          case 16:\n            if (order.status == Constants.REQUESTING && role == Constants.ROLE_FARMER) {\n              isUpdate = true;\n            } else {\n              message = order.status + \" can not approve/reject or unauthorized\";\n            }\n\n            return _context4.abrupt(\"break\", 29);\n\n          case 18:\n            if (order.status == Constants.REQUESTING && role == Constants.ROLE_BUYER) {\n              isUpdate = true;\n            } else {\n              message = order.status + \" can not cancel or unauthorized\";\n            }\n\n            return _context4.abrupt(\"break\", 29);\n\n          case 20:\n            if (!(order.status == Constants.APPROVED && role == Constants.ROLE_FARMER)) {\n              _context4.next = 26;\n              break;\n            }\n\n            _context4.next = 23;\n            return Food.findOneAndUpdate({\n              _id: order.foodId\n            }, {\n              $inc: {\n                amount_buy: 1\n              }\n            }, {\n              useFindAndModify: false\n            });\n\n          case 23:\n            isUpdate = true;\n            _context4.next = 27;\n            break;\n\n          case 26:\n            message = order.status + \" can not done or unauthorized\";\n\n          case 27:\n            return _context4.abrupt(\"break\", 29);\n\n          case 28:\n            isUpdate = false;\n\n          case 29:\n            if (!isUpdate) {\n              _context4.next = 45;\n              break;\n            }\n\n            _context4.prev = 30;\n            update = toStatus == Constants.DONE ? {\n              $set: {\n                status: toStatus\n              },\n              $inc: {\n                \"food.amount_buy\": 1\n              }\n            } : {\n              $set: {\n                status: toStatus\n              }\n            };\n            _context4.next = 34;\n            return Order.findOneAndUpdate(filter, update, {\n              returnOriginal: false,\n              useFindAndModify: false\n            });\n\n          case 34:\n            updatedOrder = _context4.sent;\n            console.log(updatedOrder);\n\n            if (updatedOrder) {\n              _context4.next = 38;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.status(400).json({\n              message: Constants.MESSAGE_400,\n              status: Constants.STATUS_400\n            }));\n\n          case 38:\n            return _context4.abrupt(\"return\", res.status(200).json({\n              data: updatedOrder,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 41:\n            _context4.prev = 41;\n            _context4.t1 = _context4[\"catch\"](30);\n            console.log(_context4.t1);\n            return _context4.abrupt(\"return\", res.status(500).json({\n              message: _context4.t1,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 45:\n            return _context4.abrupt(\"return\", res.status(200).json({\n              message: message,\n              status: Constants.STATUS_400\n            }));\n\n          case 48:\n            _context4.prev = 48;\n            _context4.t2 = _context4[\"catch\"](5);\n            console.log(_context4.t2);\n            return _context4.abrupt(\"return\", res.status(500).json({\n              message: _context4.t2,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 52:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[5, 48], [30, 41]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "Order",
        "require",
        "User",
        "Constants",
        "Food",
        "module",
        "exports",
        "createOrder",
        "req",
        "res",
        "body",
        "buyerId",
        "user",
        "_id",
        "findOne",
        "foodId",
        "oldOrder",
        "status",
        "REQUESTING",
        "APPROVED",
        "json",
        "message",
        "MESSAGE_ERROR_DUPLICATE",
        "STATUS_400",
        "food",
        "state",
        "MESSAGE_OUT_OF_FOOD",
        "sellerId",
        "farmer",
        "order",
        "save",
        "newOrder",
        "data",
        "MESSAGE_SUCCESS",
        "STATUS_200",
        "name",
        "code",
        "STATUS_ERROR",
        "MESSAGE_UNKNOWN_SEVER_ERROR",
        "getOrders",
        "page",
        "parseInt",
        "query",
        "positionStart",
        "AMOUNT_ITEM_IN_PER_PAGE",
        "find",
        "$or",
        "sort",
        "limit",
        "skip",
        "orders",
        "countDocuments",
        "totalOrders",
        "totalPage",
        "Math",
        "ceil",
        "currentPage",
        "MESSAGE_204",
        "STATUS_204",
        "total_page",
        "current_page",
        "total_item",
        "getOrderByUserId",
        "orderId",
        "params",
        "userId",
        "$and",
        "MESSAGE_404",
        "updateOrderStatus",
        "toStatus",
        "role",
        "filter",
        "MESSAGE_400",
        "isUpdate",
        "REJECTED",
        "CANCELED",
        "DONE",
        "ROLE_FARMER",
        "ROLE_BUYER",
        "findOneAndUpdate",
        "$inc",
        "amount_buy",
        "useFindAndModify",
        "update",
        "$set",
        "returnOriginal",
        "updatedOrder",
        "console",
        "log"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "sourcesContent": [
        "var Order = require('../models/order'),\n    User = require('../models/user'),\n    Constants = require('../utils/constants'),\n    Food = require('../models/food');\n\nmodule.exports.createOrder = async (req, res) => {\n    req.body.buyerId = req.user._id;\n\n    try {\n        var oldOrder = await Order.findOne({\n            foodId: req.body.foodId,\n            buyerId: req.body.buyerId\n        })\n\n        if (oldOrder) {\n            if (oldOrder.status === Constants.REQUESTING || oldOrder.status === Constants.APPROVED)\n                return res.status(200).json({\n                    message: Constants.MESSAGE_ERROR_DUPLICATE,\n                    status: Constants.STATUS_400\n                })\n        }\n\n        let food = await Food.findOne({\n            _id: req.body.foodId\n        });\n\n        if (food.state === false) {\n            return res.status(200).json({\n                message: Constants.MESSAGE_OUT_OF_FOOD,\n                status: Constants.STATUS_400\n            })\n        }\n\n        let farmer = await User.findOne({\n            _id: req.body.sellerId\n        })\n\n        req.body.food = food\n        req.body.farmer = farmer\n        let order = new Order(req.body);\n        let newOrder = await order.save();\n        return res.status(201).json({\n            data: newOrder,\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        });\n    } catch (err) {\n        if (err.name == 'MongoError' && err.code == 11000)\n            return res.status(409).json({\n                message: err.message,\n                status: Constants.STATUS_ERROR\n            });\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n            status: Constants.STATUS_ERROR\n        });\n    }\n};\n\nmodule.exports.getOrders = async (req, res) => {\n    let page = parseInt(req.query.page) || 1\n    let positionStart = (page - 1) * Constants.AMOUNT_ITEM_IN_PER_PAGE\n    try {\n        let orders = await Order.find({\n            $or: [{\n                buyerId: req.user._id\n            }, {\n                sellerId: req.user._id\n            }]\n        }).sort({\n            _id: -1\n        }).limit(Constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n\n        let totalOrders = await Order.countDocuments({\n            $or: [{\n                buyerId: req.user._id\n            }, {\n                sellerId: req.user._id\n            }]\n        })\n\n        let totalPage = Math.ceil(totalOrders / Constants.AMOUNT_ITEM_IN_PER_PAGE)\n\n        let currentPage = (page > totalPage) ? totalPage : page\n\n        if (!orders)\n            return res.status(204).json({\n                message: Constants.MESSAGE_204,\n                status: Constants.STATUS_204\n            });\n\n        // if (req.user.role == Constants.ROLE_FARMER) {\n        //     // remove order with status == cancel\n        //     orders.filter((item) => {\n        //         return item.status != Constants.CANCELED\n        //     })\n        // }\n\n        res.status(200).json({\n            data: {\n                orders: orders,\n                total_page: totalPage,\n                current_page: currentPage,\n                total_item: totalOrders\n            },\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        });\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: Constants.STATUS_ERROR\n        });\n    }\n}\n\nmodule.exports.getOrderByUserId = async (req, res) => {\n    const orderId = req.params.orderId\n    const userId = req.user._id\n    try {\n        let order = await Order.findOne({\n            $and: [{\n                    _id: orderId\n                },\n                {\n                    $or: [{\n                        buyerId: userId\n                    }, {\n                        sellerId: userId\n                    }]\n                }\n            ]\n        })\n\n        if (!order)\n            return res.status(404).json({\n                message: Constants.MESSAGE_404,\n                status: Constants.STATUS_ERROR\n            })\n\n        return res.status(200).json({\n            data: order,\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        })\n\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: Constants.STATUS_ERROR\n        })\n    }\n}\n\nmodule.exports.updateOrderStatus = async (req, res) => {\n    const orderId = req.params.orderId\n    const toStatus = req.query.toStatus\n    const userId = req.user._id\n    const role = req.user.role\n    const filter = {\n        $and: [{\n            _id: orderId\n        }, {\n            $or: [{\n                sellerId: userId\n            }, {\n                buyerId: userId\n            }]\n        }]\n    }\n\n    try {\n        let order = await Order.findOne(filter)\n\n        if (!order) return res.status(400).json({\n            message: Constants.MESSAGE_400,\n            status: Constants.STATUS_400\n        })\n\n        let message = Constants.MESSAGE_400\n        let isUpdate = false\n\n        switch (toStatus) {\n            case Constants.APPROVED:\n            case Constants.REJECTED:\n                if ((order.status == Constants.REQUESTING) && (role == Constants.ROLE_FARMER)) {\n                    isUpdate = true\n                } else {\n                    message = order.status + \" can not approve/reject or unauthorized\"\n                }\n                break\n            case Constants.CANCELED:\n                if ((order.status == Constants.REQUESTING) && (role == Constants.ROLE_BUYER)) {\n                    isUpdate = true\n                } else {\n                    message = order.status + \" can not cancel or unauthorized\"\n                }\n                break\n            case Constants.DONE:\n                if ((order.status == Constants.APPROVED) && (role == Constants.ROLE_FARMER)) {\n                    await Food.findOneAndUpdate({\n                        _id: order.foodId\n                    }, {\n                        $inc: {\n                            amount_buy: 1\n                        }\n                    },{\n                        useFindAndModify: false\n                    })\n                    isUpdate = true\n                } else {\n                    message = order.status + \" can not done or unauthorized\"\n                }\n                break\n            default:\n                isUpdate = false\n        }\n\n        if (isUpdate) {\n            try {\n                let update = toStatus == Constants.DONE ? {\n                    $set: {\n                        status: toStatus\n                    },\n                    $inc: {\n                        \"food.amount_buy\": 1\n                    }\n                } : {\n                    $set: {\n                        status: toStatus\n                    }\n                }\n                let updatedOrder = await Order.findOneAndUpdate(filter, update, {\n                    returnOriginal: false,\n                    useFindAndModify: false\n                })\n\n                console.log(updatedOrder)\n\n                if (!updatedOrder) return res.status(400).json({\n                    message: Constants.MESSAGE_400,\n                    status: Constants.STATUS_400\n                })\n\n                return res.status(200).json({\n                    data: updatedOrder,\n                    message: Constants.MESSAGE_SUCCESS,\n                    status: Constants.STATUS_200\n                })\n            } catch (err) {\n                console.log(err)\n                return res.status(500).json({\n                    message: err,\n                    status: Constants.STATUS_ERROR\n                });\n            }\n        }\n\n        return res.status(200).json({\n            message: message,\n            status: Constants.STATUS_400\n        })\n\n    } catch (err) {\n        console.log(err)\n        return res.status(500).json({\n            message: err,\n            status: Constants.STATUS_ERROR\n        });\n    }\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577504932912
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/models/order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/models/order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/models/order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/models/order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose'),\n    Constants = require('../utils/constants');\n\nvar OrderSchema = new mongoose.Schema({\n  buyerId: {\n    type: String,\n    required: true\n  },\n  sellerId: {\n    type: String,\n    required: true\n  },\n  foodId: {\n    type: String,\n    required: true\n  },\n  food: {\n    _id: {\n      type: String\n    },\n    name: {\n      type: String,\n      trim: true,\n      required: true\n    },\n    cost: {\n      type: Number,\n      \"default\": 0\n    },\n    unit: {\n      type: String,\n      \"default\": 'kg'\n    },\n    amount_buy: {\n      type: Number,\n      \"default\": 0\n    },\n    img_url: {\n      type: String\n    },\n    state: {\n      type: Boolean,\n      \"default\": true\n    },\n    userId: {\n      type: String,\n      required: true\n    },\n    categoryId: {\n      type: String,\n      required: true\n    },\n    date_created: {\n      type: Date,\n      \"default\": Date.now\n    }\n  },\n  status: {\n    type: String,\n    \"default\": Constants.REQUESTING\n  },\n  date_created: {\n    type: Date,\n    \"default\": Date.now\n  },\n  date_buy: {\n    type: String,\n    required: [true, 'Have to have date buy']\n  },\n  shift: {\n    type: String,\n    \"default\": Constants.AM\n  },\n  note: {\n    type: String,\n    \"default\": \"\"\n  }\n});\n/** We can reorder */\n\nvar Order = mongoose.model('Order', OrderSchema, 'orders');\nmodule.exports = Order;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIkNvbnN0YW50cyIsIk9yZGVyU2NoZW1hIiwiU2NoZW1hIiwiYnV5ZXJJZCIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInNlbGxlcklkIiwiZm9vZElkIiwiZm9vZCIsIl9pZCIsIm5hbWUiLCJ0cmltIiwiY29zdCIsIk51bWJlciIsInVuaXQiLCJhbW91bnRfYnV5IiwiaW1nX3VybCIsInN0YXRlIiwiQm9vbGVhbiIsInVzZXJJZCIsImNhdGVnb3J5SWQiLCJkYXRlX2NyZWF0ZWQiLCJEYXRlIiwibm93Iiwic3RhdHVzIiwiUkVRVUVTVElORyIsImRhdGVfYnV5Iiwic2hpZnQiLCJBTSIsIm5vdGUiLCJPcmRlciIsIm1vZGVsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxVQUFELENBQXRCO0FBQUEsSUFDSUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsb0JBQUQsQ0FEdkI7O0FBR0EsSUFBSUUsV0FBVyxHQUFHLElBQUlILFFBQVEsQ0FBQ0ksTUFBYixDQUFvQjtBQUNsQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQ0xDLElBQUFBLElBQUksRUFBRUMsTUFERDtBQUVMQyxJQUFBQSxRQUFRLEVBQUU7QUFGTCxHQUR5QjtBQUtsQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQ05ILElBQUFBLElBQUksRUFBRUMsTUFEQTtBQUVOQyxJQUFBQSxRQUFRLEVBQUU7QUFGSixHQUx3QjtBQVNsQ0UsRUFBQUEsTUFBTSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKQyxJQUFBQSxRQUFRLEVBQUU7QUFGTixHQVQwQjtBQWFsQ0csRUFBQUEsSUFBSSxFQUFFO0FBQ0ZDLElBQUFBLEdBQUcsRUFBRTtBQUNETixNQUFBQSxJQUFJLEVBQUVDO0FBREwsS0FESDtBQUlGTSxJQUFBQSxJQUFJLEVBQUU7QUFDRlAsTUFBQUEsSUFBSSxFQUFFQyxNQURKO0FBRUZPLE1BQUFBLElBQUksRUFBRSxJQUZKO0FBR0ZOLE1BQUFBLFFBQVEsRUFBRTtBQUhSLEtBSko7QUFTRk8sSUFBQUEsSUFBSSxFQUFFO0FBQ0ZULE1BQUFBLElBQUksRUFBRVUsTUFESjtBQUVGLGlCQUFTO0FBRlAsS0FUSjtBQWFGQyxJQUFBQSxJQUFJLEVBQUU7QUFDRlgsTUFBQUEsSUFBSSxFQUFFQyxNQURKO0FBRUYsaUJBQVM7QUFGUCxLQWJKO0FBaUJGVyxJQUFBQSxVQUFVLEVBQUU7QUFDUlosTUFBQUEsSUFBSSxFQUFFVSxNQURFO0FBRVIsaUJBQVM7QUFGRCxLQWpCVjtBQXFCRkcsSUFBQUEsT0FBTyxFQUFFO0FBQ0xiLE1BQUFBLElBQUksRUFBRUM7QUFERCxLQXJCUDtBQXdCRmEsSUFBQUEsS0FBSyxFQUFFO0FBQ0hkLE1BQUFBLElBQUksRUFBRWUsT0FESDtBQUVILGlCQUFTO0FBRk4sS0F4Qkw7QUE0QkZDLElBQUFBLE1BQU0sRUFBRTtBQUNKaEIsTUFBQUEsSUFBSSxFQUFFQyxNQURGO0FBRUpDLE1BQUFBLFFBQVEsRUFBRTtBQUZOLEtBNUJOO0FBZ0NGZSxJQUFBQSxVQUFVLEVBQUU7QUFDUmpCLE1BQUFBLElBQUksRUFBRUMsTUFERTtBQUVSQyxNQUFBQSxRQUFRLEVBQUU7QUFGRixLQWhDVjtBQW9DRmdCLElBQUFBLFlBQVksRUFBRTtBQUNWbEIsTUFBQUEsSUFBSSxFQUFFbUIsSUFESTtBQUVWLGlCQUFTQSxJQUFJLENBQUNDO0FBRko7QUFwQ1osR0FiNEI7QUFzRGxDQyxFQUFBQSxNQUFNLEVBQUU7QUFDSnJCLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKLGVBQVNMLFNBQVMsQ0FBQzBCO0FBRmYsR0F0RDBCO0FBMERsQ0osRUFBQUEsWUFBWSxFQUFFO0FBQ1ZsQixJQUFBQSxJQUFJLEVBQUVtQixJQURJO0FBRVYsZUFBU0EsSUFBSSxDQUFDQztBQUZKLEdBMURvQjtBQThEbENHLEVBQUFBLFFBQVEsRUFBRTtBQUNOdkIsSUFBQUEsSUFBSSxFQUFFQyxNQURBO0FBRU5DLElBQUFBLFFBQVEsRUFBRSxDQUFDLElBQUQsRUFBTyx1QkFBUDtBQUZKLEdBOUR3QjtBQWtFbENzQixFQUFBQSxLQUFLLEVBQUU7QUFDSHhCLElBQUFBLElBQUksRUFBRUMsTUFESDtBQUVILGVBQVNMLFNBQVMsQ0FBQzZCO0FBRmhCLEdBbEUyQjtBQXNFbENDLEVBQUFBLElBQUksRUFBRTtBQUNGMUIsSUFBQUEsSUFBSSxFQUFFQyxNQURKO0FBRUYsZUFBUztBQUZQO0FBdEU0QixDQUFwQixDQUFsQjtBQTRFQTs7QUFFQSxJQUFJMEIsS0FBSyxHQUFHakMsUUFBUSxDQUFDa0MsS0FBVCxDQUFlLE9BQWYsRUFBd0IvQixXQUF4QixFQUFxQyxRQUFyQyxDQUFaO0FBRUFnQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJILEtBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKSxcbiAgICBDb25zdGFudHMgPSByZXF1aXJlKCcuLi91dGlscy9jb25zdGFudHMnKTtcblxudmFyIE9yZGVyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgYnV5ZXJJZDoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBzZWxsZXJJZDoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICBmb29kSWQ6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAgZm9vZDoge1xuICAgICAgICBfaWQ6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZ1xuICAgICAgICB9LFxuICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICB0cmltOiB0cnVlLFxuICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgY29zdDoge1xuICAgICAgICAgICAgdHlwZTogTnVtYmVyLFxuICAgICAgICAgICAgZGVmYXVsdDogMFxuICAgICAgICB9LFxuICAgICAgICB1bml0OiB7XG4gICAgICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgICAgICBkZWZhdWx0OiAna2cnXG4gICAgICAgIH0sXG4gICAgICAgIGFtb3VudF9idXk6IHtcbiAgICAgICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgICAgIGRlZmF1bHQ6IDBcbiAgICAgICAgfSxcbiAgICAgICAgaW1nX3VybDoge1xuICAgICAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgICAgIH0sXG4gICAgICAgIHN0YXRlOiB7XG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB1c2VySWQ6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGNhdGVnb3J5SWQ6IHtcbiAgICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIGRhdGVfY3JlYXRlZDoge1xuICAgICAgICAgICAgdHlwZTogRGF0ZSxcbiAgICAgICAgICAgIGRlZmF1bHQ6IERhdGUubm93XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHN0YXR1czoge1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIGRlZmF1bHQ6IENvbnN0YW50cy5SRVFVRVNUSU5HXG4gICAgfSxcbiAgICBkYXRlX2NyZWF0ZWQ6IHtcbiAgICAgICAgdHlwZTogRGF0ZSxcbiAgICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcbiAgICB9LFxuICAgIGRhdGVfYnV5OiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAnSGF2ZSB0byBoYXZlIGRhdGUgYnV5J11cbiAgICB9LFxuICAgIHNoaWZ0OiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogQ29uc3RhbnRzLkFNXG4gICAgfSxcbiAgICBub3RlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgZGVmYXVsdDogXCJcIlxuICAgIH1cbn0pO1xuXG4vKiogV2UgY2FuIHJlb3JkZXIgKi9cblxudmFyIE9yZGVyID0gbW9uZ29vc2UubW9kZWwoJ09yZGVyJywgT3JkZXJTY2hlbWEsICdvcmRlcnMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBPcmRlcjsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "mongoose",
        "require",
        "Constants",
        "OrderSchema",
        "Schema",
        "buyerId",
        "type",
        "String",
        "required",
        "sellerId",
        "foodId",
        "food",
        "_id",
        "name",
        "trim",
        "cost",
        "Number",
        "unit",
        "amount_buy",
        "img_url",
        "state",
        "Boolean",
        "userId",
        "categoryId",
        "date_created",
        "Date",
        "now",
        "status",
        "REQUESTING",
        "date_buy",
        "shift",
        "AM",
        "note",
        "Order",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;AAAA,IACIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CADvB;;AAGA,IAAIE,WAAW,GAAG,IAAIH,QAAQ,CAACI,MAAb,CAAoB;AAClCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GADyB;AAKlCC,EAAAA,QAAQ,EAAE;AACNH,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GALwB;AASlCE,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GAT0B;AAalCG,EAAAA,IAAI,EAAE;AACFC,IAAAA,GAAG,EAAE;AACDN,MAAAA,IAAI,EAAEC;AADL,KADH;AAIFM,IAAAA,IAAI,EAAE;AACFP,MAAAA,IAAI,EAAEC,MADJ;AAEFO,MAAAA,IAAI,EAAE,IAFJ;AAGFN,MAAAA,QAAQ,EAAE;AAHR,KAJJ;AASFO,IAAAA,IAAI,EAAE;AACFT,MAAAA,IAAI,EAAEU,MADJ;AAEF,iBAAS;AAFP,KATJ;AAaFC,IAAAA,IAAI,EAAE;AACFX,MAAAA,IAAI,EAAEC,MADJ;AAEF,iBAAS;AAFP,KAbJ;AAiBFW,IAAAA,UAAU,EAAE;AACRZ,MAAAA,IAAI,EAAEU,MADE;AAER,iBAAS;AAFD,KAjBV;AAqBFG,IAAAA,OAAO,EAAE;AACLb,MAAAA,IAAI,EAAEC;AADD,KArBP;AAwBFa,IAAAA,KAAK,EAAE;AACHd,MAAAA,IAAI,EAAEe,OADH;AAEH,iBAAS;AAFN,KAxBL;AA4BFC,IAAAA,MAAM,EAAE;AACJhB,MAAAA,IAAI,EAAEC,MADF;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KA5BN;AAgCFe,IAAAA,UAAU,EAAE;AACRjB,MAAAA,IAAI,EAAEC,MADE;AAERC,MAAAA,QAAQ,EAAE;AAFF,KAhCV;AAoCFgB,IAAAA,YAAY,EAAE;AACVlB,MAAAA,IAAI,EAAEmB,IADI;AAEV,iBAASA,IAAI,CAACC;AAFJ;AApCZ,GAb4B;AAsDlCC,EAAAA,MAAM,EAAE;AACJrB,IAAAA,IAAI,EAAEC,MADF;AAEJ,eAASL,SAAS,CAAC0B;AAFf,GAtD0B;AA0DlCJ,EAAAA,YAAY,EAAE;AACVlB,IAAAA,IAAI,EAAEmB,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ,GA1DoB;AA8DlCG,EAAAA,QAAQ,EAAE;AACNvB,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,uBAAP;AAFJ,GA9DwB;AAkElCsB,EAAAA,KAAK,EAAE;AACHxB,IAAAA,IAAI,EAAEC,MADH;AAEH,eAASL,SAAS,CAAC6B;AAFhB,GAlE2B;AAsElCC,EAAAA,IAAI,EAAE;AACF1B,IAAAA,IAAI,EAAEC,MADJ;AAEF,eAAS;AAFP;AAtE4B,CAApB,CAAlB;AA4EA;;AAEA,IAAI0B,KAAK,GAAGjC,QAAQ,CAACkC,KAAT,CAAe,OAAf,EAAwB/B,WAAxB,EAAqC,QAArC,CAAZ;AAEAgC,MAAM,CAACC,OAAP,GAAiBH,KAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "sourcesContent": [
        "var mongoose = require('mongoose'),\n    Constants = require('../utils/constants');\n\nvar OrderSchema = new mongoose.Schema({\n    buyerId: {\n        type: String,\n        required: true\n    },\n    sellerId: {\n        type: String,\n        required: true\n    },\n    foodId: {\n        type: String,\n        required: true\n    },\n    food: {\n        _id: {\n            type: String\n        },\n        name: {\n            type: String,\n            trim: true,\n            required: true\n        },\n        cost: {\n            type: Number,\n            default: 0\n        },\n        unit: {\n            type: String,\n            default: 'kg'\n        },\n        amount_buy: {\n            type: Number,\n            default: 0\n        },\n        img_url: {\n            type: String\n        },\n        state: {\n            type: Boolean,\n            default: true\n        },\n        userId: {\n            type: String,\n            required: true\n        },\n        categoryId: {\n            type: String,\n            required: true\n        },\n        date_created: {\n            type: Date,\n            default: Date.now\n        }\n    },\n    status: {\n        type: String,\n        default: Constants.REQUESTING\n    },\n    date_created: {\n        type: Date,\n        default: Date.now\n    },\n    date_buy: {\n        type: String,\n        required: [true, 'Have to have date buy']\n    },\n    shift: {\n        type: String,\n        default: Constants.AM\n    },\n    note: {\n        type: String,\n        default: \"\"\n    }\n});\n\n/** We can reorder */\n\nvar Order = mongoose.model('Order', OrderSchema, 'orders');\n\nmodule.exports = Order;"
      ]
    },
    "sourceType": "script",
    "mtime": 1575555864503
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/routes/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/routes/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/routes/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/routes/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar userController = require('../controllers/user'),\n    upload = require('../utils/upload'),\n    authController = require('../controllers/auth');\n\nmodule.exports = function (app) {\n  app.post('/register', userController.register);\n  app.post('/sign_in', userController.sign_in);\n  app.route('/users').get(authController.loginRequired, userController.getUsers).put(upload.single('file'), authController.loginRequired, userController.updateOwner);\n  app.get('/users_by_category_id/:categoryId', userController.getUsersWithCategoryId);\n  app.get('/users/:userId/numbers_of_foods', userController.getTheNumberOfFoodWithUserId);\n  app.route('/users/:userId').get(authController.loginRequired, userController.getUserWithId).put(authController.loginRequired, userController.updateUser)[\"delete\"](authController.loginRequired, userController.deleteUser);\n  app.get('/users/information/:userId', authController.loginRequired, userController.getUserInformationRelatedFood);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsidXNlckNvbnRyb2xsZXIiLCJyZXF1aXJlIiwidXBsb2FkIiwiYXV0aENvbnRyb2xsZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwicG9zdCIsInJlZ2lzdGVyIiwic2lnbl9pbiIsInJvdXRlIiwiZ2V0IiwibG9naW5SZXF1aXJlZCIsImdldFVzZXJzIiwicHV0Iiwic2luZ2xlIiwidXBkYXRlT3duZXIiLCJnZXRVc2Vyc1dpdGhDYXRlZ29yeUlkIiwiZ2V0VGhlTnVtYmVyT2ZGb29kV2l0aFVzZXJJZCIsImdldFVzZXJXaXRoSWQiLCJ1cGRhdGVVc2VyIiwiZGVsZXRlVXNlciIsImdldFVzZXJJbmZvcm1hdGlvblJlbGF0ZWRGb29kIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLGNBQWMsR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQTVCO0FBQUEsSUFDSUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsaUJBQUQsQ0FEcEI7QUFBQSxJQUVJRSxjQUFjLEdBQUdGLE9BQU8sQ0FBQyxxQkFBRCxDQUY1Qjs7QUFJQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBUztBQUN0QkEsRUFBQUEsR0FBRyxDQUFDQyxJQUFKLENBQVMsV0FBVCxFQUFzQlAsY0FBYyxDQUFDUSxRQUFyQztBQUVBRixFQUFBQSxHQUFHLENBQUNDLElBQUosQ0FBUyxVQUFULEVBQXFCUCxjQUFjLENBQUNTLE9BQXBDO0FBRUFILEVBQUFBLEdBQUcsQ0FBQ0ksS0FBSixDQUFVLFFBQVYsRUFDS0MsR0FETCxDQUNTUixjQUFjLENBQUNTLGFBRHhCLEVBQ3VDWixjQUFjLENBQUNhLFFBRHRELEVBRUtDLEdBRkwsQ0FFU1osTUFBTSxDQUFDYSxNQUFQLENBQWMsTUFBZCxDQUZULEVBRWdDWixjQUFjLENBQUNTLGFBRi9DLEVBRThEWixjQUFjLENBQUNnQixXQUY3RTtBQUlBVixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSxtQ0FBUixFQUE2Q1gsY0FBYyxDQUFDaUIsc0JBQTVEO0FBRUFYLEVBQUFBLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLGlDQUFSLEVBQTJDWCxjQUFjLENBQUNrQiw0QkFBMUQ7QUFFQVosRUFBQUEsR0FBRyxDQUFDSSxLQUFKLENBQVUsZ0JBQVYsRUFDS0MsR0FETCxDQUNTUixjQUFjLENBQUNTLGFBRHhCLEVBQ3VDWixjQUFjLENBQUNtQixhQUR0RCxFQUVLTCxHQUZMLENBRVNYLGNBQWMsQ0FBQ1MsYUFGeEIsRUFFdUNaLGNBQWMsQ0FBQ29CLFVBRnRELFlBR1lqQixjQUFjLENBQUNTLGFBSDNCLEVBRzBDWixjQUFjLENBQUNxQixVQUh6RDtBQUtBZixFQUFBQSxHQUFHLENBQUNLLEdBQUosQ0FBUSw0QkFBUixFQUFzQ1IsY0FBYyxDQUFDUyxhQUFyRCxFQUFvRVosY0FBYyxDQUFDc0IsNkJBQW5GO0FBQ0gsQ0FuQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5oL0RvY3VtZW50cy9ub2RlanMvbXlmb29kLWFwaS9yb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXNlckNvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy91c2VyJyksXG4gICAgdXBsb2FkID0gcmVxdWlyZSgnLi4vdXRpbHMvdXBsb2FkJyksXG4gICAgYXV0aENvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9hdXRoJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKGFwcCkgPT4ge1xuICAgIGFwcC5wb3N0KCcvcmVnaXN0ZXInLCB1c2VyQ29udHJvbGxlci5yZWdpc3Rlcik7XG5cbiAgICBhcHAucG9zdCgnL3NpZ25faW4nLCB1c2VyQ29udHJvbGxlci5zaWduX2luKTtcblxuICAgIGFwcC5yb3V0ZSgnL3VzZXJzJylcbiAgICAgICAgLmdldChhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCB1c2VyQ29udHJvbGxlci5nZXRVc2VycylcbiAgICAgICAgLnB1dCh1cGxvYWQuc2luZ2xlKCdmaWxlJyksIGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIHVzZXJDb250cm9sbGVyLnVwZGF0ZU93bmVyKTtcblxuICAgIGFwcC5nZXQoJy91c2Vyc19ieV9jYXRlZ29yeV9pZC86Y2F0ZWdvcnlJZCcsIHVzZXJDb250cm9sbGVyLmdldFVzZXJzV2l0aENhdGVnb3J5SWQpXG5cbiAgICBhcHAuZ2V0KCcvdXNlcnMvOnVzZXJJZC9udW1iZXJzX29mX2Zvb2RzJywgdXNlckNvbnRyb2xsZXIuZ2V0VGhlTnVtYmVyT2ZGb29kV2l0aFVzZXJJZClcblxuICAgIGFwcC5yb3V0ZSgnL3VzZXJzLzp1c2VySWQnKVxuICAgICAgICAuZ2V0KGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIHVzZXJDb250cm9sbGVyLmdldFVzZXJXaXRoSWQpXG4gICAgICAgIC5wdXQoYXV0aENvbnRyb2xsZXIubG9naW5SZXF1aXJlZCwgdXNlckNvbnRyb2xsZXIudXBkYXRlVXNlcilcbiAgICAgICAgLmRlbGV0ZShhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCB1c2VyQ29udHJvbGxlci5kZWxldGVVc2VyKTtcblxuICAgIGFwcC5nZXQoJy91c2Vycy9pbmZvcm1hdGlvbi86dXNlcklkJywgYXV0aENvbnRyb2xsZXIubG9naW5SZXF1aXJlZCwgdXNlckNvbnRyb2xsZXIuZ2V0VXNlckluZm9ybWF0aW9uUmVsYXRlZEZvb2QpXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "userController",
        "require",
        "upload",
        "authController",
        "module",
        "exports",
        "app",
        "post",
        "register",
        "sign_in",
        "route",
        "get",
        "loginRequired",
        "getUsers",
        "put",
        "single",
        "updateOwner",
        "getUsersWithCategoryId",
        "getTheNumberOfFoodWithUserId",
        "getUserWithId",
        "updateUser",
        "deleteUser",
        "getUserInformationRelatedFood"
      ],
      "mappings": ";;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,qBAAD,CAA5B;AAAA,IACIC,MAAM,GAAGD,OAAO,CAAC,iBAAD,CADpB;AAAA,IAEIE,cAAc,GAAGF,OAAO,CAAC,qBAAD,CAF5B;;AAIAG,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACtBA,EAAAA,GAAG,CAACC,IAAJ,CAAS,WAAT,EAAsBP,cAAc,CAACQ,QAArC;AAEAF,EAAAA,GAAG,CAACC,IAAJ,CAAS,UAAT,EAAqBP,cAAc,CAACS,OAApC;AAEAH,EAAAA,GAAG,CAACI,KAAJ,CAAU,QAAV,EACKC,GADL,CACSR,cAAc,CAACS,aADxB,EACuCZ,cAAc,CAACa,QADtD,EAEKC,GAFL,CAESZ,MAAM,CAACa,MAAP,CAAc,MAAd,CAFT,EAEgCZ,cAAc,CAACS,aAF/C,EAE8DZ,cAAc,CAACgB,WAF7E;AAIAV,EAAAA,GAAG,CAACK,GAAJ,CAAQ,mCAAR,EAA6CX,cAAc,CAACiB,sBAA5D;AAEAX,EAAAA,GAAG,CAACK,GAAJ,CAAQ,iCAAR,EAA2CX,cAAc,CAACkB,4BAA1D;AAEAZ,EAAAA,GAAG,CAACI,KAAJ,CAAU,gBAAV,EACKC,GADL,CACSR,cAAc,CAACS,aADxB,EACuCZ,cAAc,CAACmB,aADtD,EAEKL,GAFL,CAESX,cAAc,CAACS,aAFxB,EAEuCZ,cAAc,CAACoB,UAFtD,YAGYjB,cAAc,CAACS,aAH3B,EAG0CZ,cAAc,CAACqB,UAHzD;AAKAf,EAAAA,GAAG,CAACK,GAAJ,CAAQ,4BAAR,EAAsCR,cAAc,CAACS,aAArD,EAAoEZ,cAAc,CAACsB,6BAAnF;AACH,CAnBD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "sourcesContent": [
        "var userController = require('../controllers/user'),\n    upload = require('../utils/upload'),\n    authController = require('../controllers/auth');\n\nmodule.exports = (app) => {\n    app.post('/register', userController.register);\n\n    app.post('/sign_in', userController.sign_in);\n\n    app.route('/users')\n        .get(authController.loginRequired, userController.getUsers)\n        .put(upload.single('file'), authController.loginRequired, userController.updateOwner);\n\n    app.get('/users_by_category_id/:categoryId', userController.getUsersWithCategoryId)\n\n    app.get('/users/:userId/numbers_of_foods', userController.getTheNumberOfFoodWithUserId)\n\n    app.route('/users/:userId')\n        .get(authController.loginRequired, userController.getUserWithId)\n        .put(authController.loginRequired, userController.updateUser)\n        .delete(authController.loginRequired, userController.deleteUser);\n\n    app.get('/users/information/:userId', authController.loginRequired, userController.getUserInformationRelatedFood)\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1577517066011
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/controllers/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/controllers/user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar User = require('../models/user'),\n    Food = require('../models/food'),\n    jwt = require('jsonwebtoken'),\n    bcrypt = require('bcrypt'),\n    Comment = require('../models/comment'),\n    constants = require('../utils/constants');\n\nmodule.exports.register = function (req, res) {\n  if (req.body.password.trim().length < 6) {\n    return res.status(400).json({\n      data: \"\",\n      message: constants.MESSAGE_INVALID_PASSWORD,\n      status: constants.STATUS_ERROR\n    });\n  }\n\n  var newUser = new User(req.body);\n  newUser.hash_password = bcrypt.hashSync(req.body.password.trim(), 10);\n  newUser.save(function (err, user) {\n    if (err) {\n      console.log(err);\n      return res.status(400).json({\n        data: \"\",\n        message: err.message,\n        status: constants.STATUS_ERROR\n      });\n    } else {\n      newUser.hash_password = undefined;\n      return res.json({\n        data: newUser,\n        message: constants.MESSAGE_SUCCESS,\n        status: constants.STATUS_200\n      });\n    }\n  });\n};\n\nmodule.exports.sign_in = function (req, res) {\n  User.findOne({\n    email: req.body.email\n  }, function (err, user) {\n    if (err) {\n      return res.status(500).json({\n        message: err\n      });\n    }\n\n    if (!user || !user.comparePassword(req.body.password)) {\n      return res.status(401).json({\n        message: constants.MESSAGE_401,\n        status: constants.STATUS_ERROR\n      });\n    }\n\n    user.hash_password = undefined;\n    return res.json({\n      token: jwt.sign({\n        _id: user._id,\n        role: user.role\n      }, process.env.API_PRIVATE_KEY),\n      data: user,\n      message: constants.MESSAGE_SUCCESS,\n      status: constants.STATUS_200\n    });\n  });\n};\n\nmodule.exports.getUsers =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var page, positionStart, result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = parseInt(req.query.page) || 1;\n            positionStart = (page - 1) * constants.AMOUNT_ITEM_IN_PER_PAGE;\n            _context.next = 4;\n            return User.find().limit(constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n\n          case 4:\n            result = _context.sent;\n            result.forEach(function (e) {\n              e.hash_password = undefined;\n            });\n            return _context.abrupt(\"return\", res.json({\n              data: result,\n              message: constants.MESSAGE_SUCCESS,\n              status: constants.STATUS_200\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getUsersWithCategoryId =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var categoryId, result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            categoryId = req.params.categoryId;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return User.find({\n              categories: categoryId\n            });\n\n          case 4:\n            result = _context2.sent;\n\n            if (result) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(204).json({\n              message: constants.MESSAGE_204,\n              status: constants.STATUS_204\n            }));\n\n          case 7:\n            result.forEach(function (e) {\n              e.hash_password = undefined;\n            });\n            return _context2.abrupt(\"return\", res.status(200).json({\n              data: result,\n              message: constants.MESSAGE_SUCCESS,\n              status: constants.STATUS_200\n            }));\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: _context2.t0,\n              status: constants.STATUS_ERROR\n            }));\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 11]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getTheNumberOfFoodWithUserId =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var userIdParams, count;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            userIdParams = req.params.userId;\n            _context3.prev = 1;\n            _context3.next = 4;\n            return Food.countDocuments({\n              userId: userIdParams\n            });\n\n          case 4:\n            count = _context3.sent;\n            return _context3.abrupt(\"return\", res.status(200).json({\n              data: count,\n              message: constants.MESSAGE_SUCCESS,\n              status: constants.STATUS_200\n            }));\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](1);\n            return _context3.abrupt(\"return\", res.status(500).json({\n              message: _context3.t0,\n              status: constants.STATUS_ERROR\n            }));\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getUserInformationRelatedFood =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var userIdParams, count, comments, rate, data;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            userIdParams = req.params.userId;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return Food.countDocuments({\n              userId: userIdParams\n            });\n\n          case 4:\n            count = _context4.sent;\n            console.log(\"abc\");\n            _context4.next = 8;\n            return Comment.find({\n              sellerId: userIdParams\n            });\n\n          case 8:\n            comments = _context4.sent;\n            rate = 0;\n\n            if (comments.length > 0) {\n              rate = comments.reduce(function (total, item) {\n                return {\n                  rating: total.rating + item.rating\n                };\n              }).rating / comments.length;\n            }\n\n            data = {\n              count: count,\n              rate: Math.ceil(rate)\n            };\n            return _context4.abrupt(\"return\", res.status(200).json({\n              data: data,\n              message: constants.MESSAGE_SUCCESS,\n              status: constants.STATUS_200\n            }));\n\n          case 15:\n            _context4.prev = 15;\n            _context4.t0 = _context4[\"catch\"](1);\n            return _context4.abrupt(\"return\", res.status(500).json({\n              message: _context4.t0,\n              status: constants.STATUS_ERROR\n            }));\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 15]]);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getUserWithId = function (req, res) {\n  var userId = req.params.userId;\n  User.findOne({\n    _id: userId\n  }, function (err, user) {\n    if (err) return res.json({\n      data: \"\",\n      message: err.message,\n      status: constants.STATUS_ERROR\n    });\n\n    if (!user) {\n      return res.status(404).json({\n        message: 'Not found',\n        status: \"fail\"\n      });\n    }\n\n    user.hash_password = undefined;\n    return res.json({\n      data: user,\n      message: constants.MESSAGE_SUCCESS,\n      status: constants.STATUS_200\n    });\n  });\n};\n\nmodule.exports.updateUser = function (req, res) {\n  User.findOneAndUpdate({\n    _id: req.params.userId\n  }, req.body, {\n    \"new\": true\n  }, function (err, user) {\n    if (err) return res.json({\n      data: \"\",\n      message: err.message,\n      status: constants.STATUS_ERROR\n    });\n    return res.json({\n      data: user,\n      message: constants.MESSAGE_SUCCESS,\n      status: constants.STATUS_ERROR\n    });\n  });\n};\n\nmodule.exports.deleteUser = function (req, res) {\n  User.remove({\n    _id: req.params.userId\n  }, function (err) {\n    if (err) return res.json({\n      data: \"\",\n      message: err.message,\n      status: constants.STATUS_ERROR\n    });\n    return res.json({\n      message: constants.MESSAGE_DELETE,\n      status: constants.STATUS_200\n    });\n  });\n};\n\nmodule.exports.updateOwner =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var filter, update, user;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (req.file) req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n            filter = {\n              _id: req.user._id\n            };\n            update = req.body;\n            _context5.prev = 3;\n            _context5.next = 6;\n            return User.findOneAndUpdate(filter, update, {\n              returnOriginal: false,\n              useFindAndModify: false\n            });\n\n          case 6:\n            user = _context5.sent;\n\n            if (user) {\n              _context5.next = 9;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", res.status(400).json({\n              message: Constants.MESSAGE_400,\n              status: Constants.STATUS_400\n            }));\n\n          case 9:\n            return _context5.abrupt(\"return\", res.status(200).json({\n              data: user,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 12:\n            _context5.prev = 12;\n            _context5.t0 = _context5[\"catch\"](3);\n            return _context5.abrupt(\"return\", res.status(500).json({\n              message: _context5.t0,\n              status: constants.STATUS_ERROR\n            }));\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[3, 12]]);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "User",
        "require",
        "Food",
        "jwt",
        "bcrypt",
        "Comment",
        "constants",
        "module",
        "exports",
        "register",
        "req",
        "res",
        "body",
        "password",
        "trim",
        "length",
        "status",
        "json",
        "data",
        "message",
        "MESSAGE_INVALID_PASSWORD",
        "STATUS_ERROR",
        "newUser",
        "hash_password",
        "hashSync",
        "save",
        "err",
        "user",
        "console",
        "log",
        "undefined",
        "MESSAGE_SUCCESS",
        "STATUS_200",
        "sign_in",
        "findOne",
        "email",
        "comparePassword",
        "MESSAGE_401",
        "token",
        "sign",
        "_id",
        "role",
        "process",
        "env",
        "API_PRIVATE_KEY",
        "getUsers",
        "page",
        "parseInt",
        "query",
        "positionStart",
        "AMOUNT_ITEM_IN_PER_PAGE",
        "find",
        "limit",
        "skip",
        "result",
        "forEach",
        "e",
        "getUsersWithCategoryId",
        "categoryId",
        "params",
        "categories",
        "MESSAGE_204",
        "STATUS_204",
        "getTheNumberOfFoodWithUserId",
        "userIdParams",
        "userId",
        "countDocuments",
        "count",
        "getUserInformationRelatedFood",
        "sellerId",
        "comments",
        "rate",
        "reduce",
        "total",
        "item",
        "rating",
        "Math",
        "ceil",
        "getUserWithId",
        "updateUser",
        "findOneAndUpdate",
        "deleteUser",
        "remove",
        "MESSAGE_DELETE",
        "updateOwner",
        "file",
        "img_url",
        "Constants",
        "MY_FOOD_URL",
        "PATH_IMG",
        "filename",
        "filter",
        "update",
        "returnOriginal",
        "useFindAndModify",
        "MESSAGE_400",
        "STATUS_400"
      ],
      "mappings": "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",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "sourcesContent": [
        "var User = require('../models/user'),\n    Food = require('../models/food'),\n    jwt = require('jsonwebtoken'),\n    bcrypt = require('bcrypt'),\n    Comment = require('../models/comment'),\n    constants = require('../utils/constants');\n\nmodule.exports.register = function (req, res) {\n    if (req.body.password.trim().length < 6) {\n        return res.status(400).json({\n            data: \"\",\n            message: constants.MESSAGE_INVALID_PASSWORD,\n            status: constants.STATUS_ERROR\n        });\n    }\n    var newUser = new User(req.body);\n    newUser.hash_password = bcrypt.hashSync(req.body.password.trim(), 10);\n    newUser.save(function (err, user) {\n        if (err) {\n            console.log(err)\n            return res.status(400).json({\n                data: \"\",\n                message: err.message,\n                status: constants.STATUS_ERROR\n            });\n        } else {\n            newUser.hash_password = undefined;\n            return res.json({\n                data: newUser,\n                message: constants.MESSAGE_SUCCESS,\n                status: constants.STATUS_200\n            });\n        }\n    });\n};\n\nmodule.exports.sign_in = function (req, res) {\n    User.findOne({\n        email: req.body.email\n    }, function (err, user) {\n        if (err) {\n            return res.status(500).json({\n                message: err\n            })\n        }\n        if (!user || !user.comparePassword(req.body.password)) {\n            return res.status(401).json({\n                message: constants.MESSAGE_401,\n                status: constants.STATUS_ERROR\n            });\n        }\n        user.hash_password = undefined\n        return res.json({\n            token: jwt.sign({\n                _id: user._id,\n                role: user.role\n            }, process.env.API_PRIVATE_KEY),\n            data: user,\n            message: constants.MESSAGE_SUCCESS,\n            status: constants.STATUS_200\n        });\n    });\n};\n\nmodule.exports.getUsers = async function (req, res) {\n    var page = parseInt(req.query.page) || 1;\n    var positionStart = (page - 1) * constants.AMOUNT_ITEM_IN_PER_PAGE\n    var result = await User.find().limit(constants.AMOUNT_ITEM_IN_PER_PAGE).skip(positionStart);\n    result.forEach((e) => {\n        e.hash_password = undefined;\n    });\n    return res.json({\n        data: result,\n        message: constants.MESSAGE_SUCCESS,\n        status: constants.STATUS_200\n    });\n};\n\nmodule.exports.getUsersWithCategoryId = async (req, res) => {\n    var categoryId = req.params.categoryId\n\n    try {\n        var result = await User.find({\n            categories: categoryId\n        })\n\n        if (!result)\n            return res.status(204).json({\n                message: constants.MESSAGE_204,\n                status: constants.STATUS_204\n            });\n\n        result.forEach((e) => {\n            e.hash_password = undefined\n        })\n\n        return res.status(200).json({\n            data: result,\n            message: constants.MESSAGE_SUCCESS,\n            status: constants.STATUS_200\n        })\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: constants.STATUS_ERROR\n        });\n    }\n}\n\nmodule.exports.getTheNumberOfFoodWithUserId = async (req, res) => {\n    var userIdParams = req.params.userId;\n    try {\n        var count = await Food.countDocuments({\n            userId: userIdParams\n        });\n        return res.status(200).json({\n            data: count,\n            message: constants.MESSAGE_SUCCESS,\n            status: constants.STATUS_200\n        })\n\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: constants.STATUS_ERROR\n        })\n    }\n}\n\nmodule.exports.getUserInformationRelatedFood = async (req, res) => {\n    var userIdParams = req.params.userId;\n    try {\n        const count = await Food.countDocuments({\n            userId: userIdParams\n        });\n\n        console.log(\"abc\")\n\n        let comments = await Comment.find({\n            sellerId: userIdParams\n        })\n        \n        var rate = 0\n\n        if (comments.length > 0) {\n            rate = comments.reduce((total, item) => {\n                return {\n                    rating: total.rating + item.rating\n                }\n            }).rating / comments.length\n        }\n        \n        let data = {\n            count: count,\n            rate: Math.ceil(rate)\n        }\n\n        return res.status(200).json({\n            data: data,\n            message: constants.MESSAGE_SUCCESS,\n            status: constants.STATUS_200\n        })\n\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: constants.STATUS_ERROR\n        })\n    }\n}\n\nmodule.exports.getUserWithId = function (req, res) {\n    var userId = req.params.userId\n    User.findOne({\n        _id: userId\n    }, function (err, user) {\n        if (err)\n            return res.json({\n                data: \"\",\n                message: err.message,\n                status: constants.STATUS_ERROR\n            });\n        if (!user) {\n            return res.status(404).json({\n                message: 'Not found',\n                status: \"fail\"\n            });\n        }\n        user.hash_password = undefined\n        return res.json({\n            data: user,\n            message: constants.MESSAGE_SUCCESS,\n            status: constants.STATUS_200\n        });\n    });\n};\n\nmodule.exports.updateUser = function (req, res) {\n    User.findOneAndUpdate({\n        _id: req.params.userId\n    }, req.body, {\n        new: true\n    }, function (err, user) {\n        if (err)\n            return res.json({\n                data: \"\",\n                message: err.message,\n                status: constants.STATUS_ERROR\n            })\n        return res.json({\n            data: user,\n            message: constants.MESSAGE_SUCCESS,\n            status: constants.STATUS_ERROR\n        });\n    });\n};\n\nmodule.exports.deleteUser = function (req, res) {\n    User.remove({\n        _id: req.params.userId\n    }, function (err) {\n        if (err)\n            return res.json({\n                data: \"\",\n                message: err.message,\n                status: constants.STATUS_ERROR\n            });\n        return res.json({\n            message: constants.MESSAGE_DELETE,\n            status: constants.STATUS_200\n        });\n    });\n};\n\nmodule.exports.updateOwner = async (req, res) => {\n    if (req.file)\n        req.body.img_url = Constants.MY_FOOD_URL + Constants.PATH_IMG + req.file.filename;\n\n    const filter = {\n        _id: req.user._id\n    }\n\n    const update = req.body\n\n    try {\n        let user = await User.findOneAndUpdate(filter, update, {\n            returnOriginal: false,\n            useFindAndModify: false\n        })\n        if (!user) return res.status(400).json({\n            message: Constants.MESSAGE_400,\n            status: Constants.STATUS_400\n        })\n        return res.status(200).json({\n            data: user,\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        })\n    } catch (err) {\n        return res.status(500).json({\n            message: err,\n            status: constants.STATUS_ERROR\n        });\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1577521114560
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/libs/boot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/libs/boot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/libs/boot.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/libs/boot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
        "sourceFileName": "boot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.listen(app.get(\"port\"), function () {\n    console.log(\"My Food API - Port \".concat(app.get(\"port\")));\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb3QuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUk7QUFDcEJBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUM5QkMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLDhCQUFrQ0osR0FBRyxDQUFDRSxHQUFKLENBQVEsTUFBUixDQUFsQztBQUNILEdBRkQ7QUFHSCxDQUpEIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvbGlicyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcbiAgICBhcHAubGlzdGVuKGFwcC5nZXQoXCJwb3J0XCIpLCAoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBNeSBGb29kIEFQSSAtIFBvcnQgJHthcHAuZ2V0KFwicG9ydFwiKX1gKTtcbiAgICB9KTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "boot.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACpBA,EAAAA,GAAG,CAACC,MAAJ,CAAWD,GAAG,CAACE,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAC9BC,IAAAA,OAAO,CAACC,GAAR,8BAAkCJ,GAAG,CAACE,GAAJ,CAAQ,MAAR,CAAlC;AACH,GAFD;AAGH,CAJD",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/libs",
      "sourcesContent": [
        "module.exports = app => {\n    app.listen(app.get(\"port\"), () => {\n        console.log(`My Food API - Port ${app.get(\"port\")}`);\n    });\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570548080065
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/routes/comments.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/routes/comments.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/routes/comments.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/routes/comments.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
        "sourceFileName": "comments.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar authController = require('../controllers/auth'),\n    commentController = require('../controllers/comments');\n\nmodule.exports = function (app) {\n  app.route('/comment').post(authController.loginRequired, commentController.createComment); //.get(authController.loginRequired, commentController.getComments);\n\n  app.get('/comment/:farmerId', authController.loginRequired, commentController.getCommentsByFarmerId);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnRzLmpzIl0sIm5hbWVzIjpbImF1dGhDb250cm9sbGVyIiwicmVxdWlyZSIsImNvbW1lbnRDb250cm9sbGVyIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInJvdXRlIiwicG9zdCIsImxvZ2luUmVxdWlyZWQiLCJjcmVhdGVDb21tZW50IiwiZ2V0IiwiZ2V0Q29tbWVudHNCeUZhcm1lcklkIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLGNBQWMsR0FBR0MsT0FBTyxDQUFDLHFCQUFELENBQTVCO0FBQUEsSUFDSUMsaUJBQWlCLEdBQUdELE9BQU8sQ0FBQyx5QkFBRCxDQUQvQjs7QUFHQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLEdBQUQsRUFBUztBQUN0QkEsRUFBQUEsR0FBRyxDQUFDQyxLQUFKLENBQVUsVUFBVixFQUNLQyxJQURMLENBQ1VQLGNBQWMsQ0FBQ1EsYUFEekIsRUFDd0NOLGlCQUFpQixDQUFDTyxhQUQxRCxFQURzQixDQUdsQjs7QUFFSkosRUFBQUEsR0FBRyxDQUFDSyxHQUFKLENBQVEsb0JBQVIsRUFBOEJWLGNBQWMsQ0FBQ1EsYUFBN0MsRUFBNEROLGlCQUFpQixDQUFDUyxxQkFBOUU7QUFDSCxDQU5EIiwic291cmNlUm9vdCI6Ii9ob21lL2FuaC9Eb2N1bWVudHMvbm9kZWpzL215Zm9vZC1hcGkvcm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGF1dGhDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvYXV0aCcpLFxuICAgIGNvbW1lbnRDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvY29tbWVudHMnKVxuXG5tb2R1bGUuZXhwb3J0cyA9IChhcHApID0+IHtcbiAgICBhcHAucm91dGUoJy9jb21tZW50JylcbiAgICAgICAgLnBvc3QoYXV0aENvbnRyb2xsZXIubG9naW5SZXF1aXJlZCwgY29tbWVudENvbnRyb2xsZXIuY3JlYXRlQ29tbWVudClcbiAgICAgICAgLy8uZ2V0KGF1dGhDb250cm9sbGVyLmxvZ2luUmVxdWlyZWQsIGNvbW1lbnRDb250cm9sbGVyLmdldENvbW1lbnRzKTtcbiAgICBcbiAgICBhcHAuZ2V0KCcvY29tbWVudC86ZmFybWVySWQnLCBhdXRoQ29udHJvbGxlci5sb2dpblJlcXVpcmVkLCBjb21tZW50Q29udHJvbGxlci5nZXRDb21tZW50c0J5RmFybWVySWQpXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "comments.js"
      ],
      "names": [
        "authController",
        "require",
        "commentController",
        "module",
        "exports",
        "app",
        "route",
        "post",
        "loginRequired",
        "createComment",
        "get",
        "getCommentsByFarmerId"
      ],
      "mappings": ";;AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,qBAAD,CAA5B;AAAA,IACIC,iBAAiB,GAAGD,OAAO,CAAC,yBAAD,CAD/B;;AAGAE,MAAM,CAACC,OAAP,GAAiB,UAACC,GAAD,EAAS;AACtBA,EAAAA,GAAG,CAACC,KAAJ,CAAU,UAAV,EACKC,IADL,CACUP,cAAc,CAACQ,aADzB,EACwCN,iBAAiB,CAACO,aAD1D,EADsB,CAGlB;;AAEJJ,EAAAA,GAAG,CAACK,GAAJ,CAAQ,oBAAR,EAA8BV,cAAc,CAACQ,aAA7C,EAA4DN,iBAAiB,CAACS,qBAA9E;AACH,CAND",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/routes",
      "sourcesContent": [
        "var authController = require('../controllers/auth'),\n    commentController = require('../controllers/comments')\n\nmodule.exports = (app) => {\n    app.route('/comment')\n        .post(authController.loginRequired, commentController.createComment)\n        //.get(authController.loginRequired, commentController.getComments);\n    \n    app.get('/comment/:farmerId', authController.loginRequired, commentController.getCommentsByFarmerId)\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577506208738
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/controllers/comments.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/comments.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/controllers/comments.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/controllers/comments.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
        "sourceFileName": "comments.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Comment = require('../models/comment'),\n    User = require('../models/user'),\n    Constants = require('../utils/constants');\n\nmodule.exports.createComment =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var check, comment, newComment;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return Comment.findOne({\n              orderId: req.body.orderId\n            });\n\n          case 3:\n            check = _context.sent;\n\n            if (!check) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(200).json({\n              message: \"Bạn đã đánh giá đơn hàng này rồi!\",\n              status: Constants.MESSAGE_ERROR_DUPLICATE\n            }));\n\n          case 6:\n            comment = new Comment(req.body);\n            _context.next = 9;\n            return comment.save();\n\n          case 9:\n            newComment = _context.sent;\n\n            if (newComment) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(400).json({\n              message: Constants.MESSAGE_400,\n              status: Constants.STATUS_400\n            }));\n\n          case 12:\n            return _context.abrupt(\"return\", res.status(201).json({\n              data: newComment,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (!(_context.t0.name == 'MongoError' && _context.t0.code == 11000)) {\n              _context.next = 19;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.status(409).json({\n              message: _context.t0.message,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 19:\n            return _context.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 15]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.getCommentsByFarmerId =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var farmerId, comments, i, buyer;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            farmerId = req.params.farmerId;\n            _context2.prev = 1;\n            _context2.next = 4;\n            return Comment.find({\n              sellerId: farmerId\n            }).lean();\n\n          case 4:\n            comments = _context2.sent;\n\n            if (comments) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(404).json({\n              message: Constants.MESSAGE_404,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 7:\n            i = 0;\n\n          case 8:\n            if (!(i < comments.length)) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.next = 11;\n            return User.findOne({\n              _id: comments[i].buyerId\n            });\n\n          case 11:\n            buyer = _context2.sent;\n            buyer.hash_password = undefined;\n\n            if (buyer) {\n              comments[i].buyer = buyer;\n            }\n\n            console.log(comments[i]);\n\n          case 15:\n            i++;\n            _context2.next = 8;\n            break;\n\n          case 18:\n            return _context2.abrupt(\"return\", res.status(200).json({\n              data: comments,\n              message: Constants.MESSAGE_SUCCESS,\n              status: Constants.STATUS_200\n            }));\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](1);\n\n            if (!(_context2.t0.name == 'MongoError' && _context2.t0.code == 11000)) {\n              _context2.next = 25;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(409).json({\n              message: _context2.t0.message,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 25:\n            return _context2.abrupt(\"return\", res.status(500).json({\n              message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n              status: Constants.STATUS_ERROR\n            }));\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[1, 21]]);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "comments.js"
      ],
      "names": [
        "Comment",
        "require",
        "User",
        "Constants",
        "module",
        "exports",
        "createComment",
        "req",
        "res",
        "findOne",
        "orderId",
        "body",
        "check",
        "status",
        "json",
        "message",
        "MESSAGE_ERROR_DUPLICATE",
        "comment",
        "save",
        "newComment",
        "MESSAGE_400",
        "STATUS_400",
        "data",
        "MESSAGE_SUCCESS",
        "STATUS_200",
        "name",
        "code",
        "STATUS_ERROR",
        "MESSAGE_UNKNOWN_SEVER_ERROR",
        "getCommentsByFarmerId",
        "farmerId",
        "params",
        "find",
        "sellerId",
        "lean",
        "comments",
        "MESSAGE_404",
        "i",
        "length",
        "_id",
        "buyerId",
        "buyer",
        "hash_password",
        "undefined",
        "console",
        "log"
      ],
      "mappings": ";;;;;;AAAA,IAAIA,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAArB;AAAA,IACIC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CADlB;AAAA,IAEIE,SAAS,GAAGF,OAAO,CAAC,oBAAD,CAFvB;;AAIAG,MAAM,CAACC,OAAP,CAAeC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA+B,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAELR,OAAO,CAACS,OAAR,CAAgB;AAC9BC,cAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASD;AADY,aAAhB,CAFK;;AAAA;AAEnBE,YAAAA,KAFmB;;AAAA,iBAMnBA,KANmB;AAAA;AAAA;AAAA;;AAAA,6CAOZJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAE,mCADe;AAExBF,cAAAA,MAAM,EAAEV,SAAS,CAACa;AAFM,aAArB,CAPY;;AAAA;AAajBC,YAAAA,OAbiB,GAaP,IAAIjB,OAAJ,CAAYO,GAAG,CAACI,IAAhB,CAbO;AAAA;AAAA,mBAcEM,OAAO,CAACC,IAAR,EAdF;;AAAA;AAcjBC,YAAAA,UAdiB;;AAAA,gBAelBA,UAfkB;AAAA;AAAA;AAAA;;AAAA,6CAgBZX,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAEZ,SAAS,CAACiB,WADK;AAExBP,cAAAA,MAAM,EAAEV,SAAS,CAACkB;AAFM,aAArB,CAhBY;;AAAA;AAAA,6CAoBhBb,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBQ,cAAAA,IAAI,EAAEH,UADkB;AAExBJ,cAAAA,OAAO,EAAEZ,SAAS,CAACoB,eAFK;AAGxBV,cAAAA,MAAM,EAAEV,SAAS,CAACqB;AAHM,aAArB,CApBgB;;AAAA;AAAA;AAAA;;AAAA,kBA0BnB,YAAIC,IAAJ,IAAY,YAAZ,IAA4B,YAAIC,IAAJ,IAAY,KA1BrB;AAAA;AAAA;AAAA;;AAAA,6CA2BZlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAE,YAAIA,OADW;AAExBF,cAAAA,MAAM,EAAEV,SAAS,CAACwB;AAFM,aAArB,CA3BY;;AAAA;AAAA,6CA+BhBnB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAEZ,SAAS,CAACyB,2BADK;AAExBf,cAAAA,MAAM,EAAEV,SAAS,CAACwB;AAFM,aAArB,CA/BgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAsCAvB,MAAM,CAACC,OAAP,CAAewB,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAuC,kBAAOtB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BsB,YAAAA,QAD6B,GAClBvB,GAAG,CAACwB,MAAJ,CAAWD,QADO;AAAA;AAAA;AAAA,mBAGV9B,OAAO,CAACgC,IAAR,CAAa;AAC9BC,cAAAA,QAAQ,EAAEH;AADoB,aAAb,EAElBI,IAFkB,EAHU;;AAAA;AAG3BC,YAAAA,QAH2B;;AAAA,gBAO1BA,QAP0B;AAAA;AAAA;AAAA;;AAAA,8CAQpB3B,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAEZ,SAAS,CAACiC,WADK;AAExBvB,cAAAA,MAAM,EAAEV,SAAS,CAACwB;AAFM,aAArB,CARoB;;AAAA;AAatBU,YAAAA,CAbsB,GAalB,CAbkB;;AAAA;AAAA,kBAafA,CAAC,GAAGF,QAAQ,CAACG,MAbE;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAcTpC,IAAI,CAACO,OAAL,CAAa;AAC3B8B,cAAAA,GAAG,EAAEJ,QAAQ,CAACE,CAAD,CAAR,CAAYG;AADU,aAAb,CAdS;;AAAA;AAcvBC,YAAAA,KAduB;AAiB3BA,YAAAA,KAAK,CAACC,aAAN,GAAsBC,SAAtB;;AACA,gBAAIF,KAAJ,EAAW;AACPN,cAAAA,QAAQ,CAACE,CAAD,CAAR,CAAYI,KAAZ,GAAoBA,KAApB;AACH;;AACDG,YAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACE,CAAD,CAApB;;AArB2B;AAaMA,YAAAA,CAAC,EAbP;AAAA;AAAA;;AAAA;AAAA,8CAwBxB7B,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBQ,cAAAA,IAAI,EAAEa,QADkB;AAExBpB,cAAAA,OAAO,EAAEZ,SAAS,CAACoB,eAFK;AAGxBV,cAAAA,MAAM,EAAEV,SAAS,CAACqB;AAHM,aAArB,CAxBwB;;AAAA;AAAA;AAAA;;AAAA,kBA8B3B,aAAIC,IAAJ,IAAY,YAAZ,IAA4B,aAAIC,IAAJ,IAAY,KA9Bb;AAAA;AAAA;AAAA;;AAAA,8CA+BpBlB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAE,aAAIA,OADW;AAExBF,cAAAA,MAAM,EAAEV,SAAS,CAACwB;AAFM,aAArB,CA/BoB;;AAAA;AAAA,8CAmCxBnB,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBC,cAAAA,OAAO,EAAEZ,SAAS,CAACyB,2BADK;AAExBf,cAAAA,MAAM,EAAEV,SAAS,CAACwB;AAFM,aAArB,CAnCwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/controllers",
      "sourcesContent": [
        "var Comment = require('../models/comment'),\n    User = require('../models/user'),\n    Constants = require('../utils/constants');\n\nmodule.exports.createComment = async (req, res) => {\n    try {\n        let check = await Comment.findOne({\n            orderId: req.body.orderId\n        })\n\n        if (check) {\n            return res.status(200).json({\n                message: \"Bạn đã đánh giá đơn hàng này rồi!\",\n                status: Constants.MESSAGE_ERROR_DUPLICATE\n            })\n        }\n\n        const comment = new Comment(req.body)\n        const newComment = await comment.save()\n        if (!newComment)\n            return res.status(400).json({\n                message: Constants.MESSAGE_400,\n                status: Constants.STATUS_400\n            })\n        return res.status(201).json({\n            data: newComment,\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        })\n    } catch (err) {\n        if (err.name == 'MongoError' && err.code == 11000)\n            return res.status(409).json({\n                message: err.message,\n                status: Constants.STATUS_ERROR\n            });\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n            status: Constants.STATUS_ERROR\n        });\n    }\n}\n\nmodule.exports.getCommentsByFarmerId = async (req, res) => {\n    const farmerId = req.params.farmerId\n    try {\n        let comments = await Comment.find({\n            sellerId: farmerId\n        }).lean()\n\n        if (!comments)\n            return res.status(404).json({\n                message: Constants.MESSAGE_404,\n                status: Constants.STATUS_ERROR\n            })\n\n        for (var i = 0; i < comments.length; i++) {\n            let buyer = await User.findOne({\n                _id: comments[i].buyerId\n            })\n            buyer.hash_password = undefined\n            if (buyer) {\n                comments[i].buyer = buyer\n            }\n            console.log(comments[i])\n        }\n\n        return res.status(200).json({\n            data: comments,\n            message: Constants.MESSAGE_SUCCESS,\n            status: Constants.STATUS_200\n        })\n    } catch (err) {\n        if (err.name == 'MongoError' && err.code == 11000)\n            return res.status(409).json({\n                message: err.message,\n                status: Constants.STATUS_ERROR\n            });\n        return res.status(500).json({\n            message: Constants.MESSAGE_UNKNOWN_SEVER_ERROR,\n            status: Constants.STATUS_ERROR\n        });\n    }\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1577527473791
  },
  "{\"sourceRoot\":\"/home/anh/Documents/nodejs/myfood-api/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/anh/Documents/nodejs/myfood-api\",\"filename\":\"/home/anh/Documents/nodejs/myfood-api/models/comment.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/anh/Documents/nodejs/myfood-api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/anh/Documents/nodejs/myfood-api",
      "filename": "/home/anh/Documents/nodejs/myfood-api/models/comment.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/anh/Documents/nodejs/myfood-api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/anh/Documents/nodejs/myfood-api/models/comment.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/anh/Documents/nodejs/myfood-api/models/comment.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
        "sourceFileName": "comment.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar mongoose = require('mongoose');\n\nvar CommentSchema = new mongoose.Schema({\n  rating: {\n    type: Number,\n    \"default\": 0\n  },\n  comment: {\n    type: String\n  },\n  foodId: {\n    type: String\n  },\n  buyerId: {\n    type: String\n  },\n  sellerId: {\n    type: String\n  },\n  orderId: {\n    type: String\n  },\n  date_created: {\n    type: Date,\n    \"default\": Date.now\n  }\n});\nvar Comment = mongoose.model('Comment', CommentSchema, 'comments');\nmodule.exports = Comment;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuanMiXSwibmFtZXMiOlsibW9uZ29vc2UiLCJyZXF1aXJlIiwiQ29tbWVudFNjaGVtYSIsIlNjaGVtYSIsInJhdGluZyIsInR5cGUiLCJOdW1iZXIiLCJjb21tZW50IiwiU3RyaW5nIiwiZm9vZElkIiwiYnV5ZXJJZCIsInNlbGxlcklkIiwib3JkZXJJZCIsImRhdGVfY3JlYXRlZCIsIkRhdGUiLCJub3ciLCJDb21tZW50IiwibW9kZWwiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBRUEsSUFBSUMsYUFBYSxHQUFHLElBQUlGLFFBQVEsQ0FBQ0csTUFBYixDQUFvQjtBQUNwQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pDLElBQUFBLElBQUksRUFBRUMsTUFERjtBQUVKLGVBQVM7QUFGTCxHQUQ0QjtBQUtwQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQ0xGLElBQUFBLElBQUksRUFBRUc7QUFERCxHQUwyQjtBQVFwQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRUc7QUFERixHQVI0QjtBQVdwQ0UsRUFBQUEsT0FBTyxFQUFFO0FBQ0xMLElBQUFBLElBQUksRUFBRUc7QUFERCxHQVgyQjtBQWNwQ0csRUFBQUEsUUFBUSxFQUFFO0FBQ05OLElBQUFBLElBQUksRUFBRUc7QUFEQSxHQWQwQjtBQWlCcENJLEVBQUFBLE9BQU8sRUFBRTtBQUNMUCxJQUFBQSxJQUFJLEVBQUVHO0FBREQsR0FqQjJCO0FBb0JwQ0ssRUFBQUEsWUFBWSxFQUFFO0FBQ1ZSLElBQUFBLElBQUksRUFBRVMsSUFESTtBQUVWLGVBQVNBLElBQUksQ0FBQ0M7QUFGSjtBQXBCc0IsQ0FBcEIsQ0FBcEI7QUEwQkEsSUFBSUMsT0FBTyxHQUFHaEIsUUFBUSxDQUFDaUIsS0FBVCxDQUFlLFNBQWYsRUFBMEJmLGFBQTFCLEVBQXlDLFVBQXpDLENBQWQ7QUFFQWdCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsT0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvYW5oL0RvY3VtZW50cy9ub2RlanMvbXlmb29kLWFwaS9tb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtb25nb29zZSA9IHJlcXVpcmUoJ21vbmdvb3NlJyk7XG5cbnZhciBDb21tZW50U2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XG4gICAgcmF0aW5nOiB7XG4gICAgICAgIHR5cGU6IE51bWJlcixcbiAgICAgICAgZGVmYXVsdDogMFxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LFxuICAgIGZvb2RJZDoge1xuICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LFxuICAgIGJ1eWVySWQ6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfSxcbiAgICBzZWxsZXJJZDoge1xuICAgICAgICB0eXBlOiBTdHJpbmdcbiAgICB9LFxuICAgIG9yZGVySWQ6IHtcbiAgICAgICAgdHlwZTogU3RyaW5nXG4gICAgfSxcbiAgICBkYXRlX2NyZWF0ZWQ6IHtcbiAgICAgICAgdHlwZTogRGF0ZSxcbiAgICAgICAgZGVmYXVsdDogRGF0ZS5ub3dcbiAgICB9XG59KTtcblxudmFyIENvbW1lbnQgPSBtb25nb29zZS5tb2RlbCgnQ29tbWVudCcsIENvbW1lbnRTY2hlbWEsICdjb21tZW50cycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IENvbW1lbnQ7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "comment.js"
      ],
      "names": [
        "mongoose",
        "require",
        "CommentSchema",
        "Schema",
        "rating",
        "type",
        "Number",
        "comment",
        "String",
        "foodId",
        "buyerId",
        "sellerId",
        "orderId",
        "date_created",
        "Date",
        "now",
        "Comment",
        "model",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAIC,aAAa,GAAG,IAAIF,QAAQ,CAACG,MAAb,CAAoB;AACpCC,EAAAA,MAAM,EAAE;AACJC,IAAAA,IAAI,EAAEC,MADF;AAEJ,eAAS;AAFL,GAD4B;AAKpCC,EAAAA,OAAO,EAAE;AACLF,IAAAA,IAAI,EAAEG;AADD,GAL2B;AAQpCC,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAEG;AADF,GAR4B;AAWpCE,EAAAA,OAAO,EAAE;AACLL,IAAAA,IAAI,EAAEG;AADD,GAX2B;AAcpCG,EAAAA,QAAQ,EAAE;AACNN,IAAAA,IAAI,EAAEG;AADA,GAd0B;AAiBpCI,EAAAA,OAAO,EAAE;AACLP,IAAAA,IAAI,EAAEG;AADD,GAjB2B;AAoBpCK,EAAAA,YAAY,EAAE;AACVR,IAAAA,IAAI,EAAES,IADI;AAEV,eAASA,IAAI,CAACC;AAFJ;AApBsB,CAApB,CAApB;AA0BA,IAAIC,OAAO,GAAGhB,QAAQ,CAACiB,KAAT,CAAe,SAAf,EAA0Bf,aAA1B,EAAyC,UAAzC,CAAd;AAEAgB,MAAM,CAACC,OAAP,GAAiBH,OAAjB",
      "sourceRoot": "/home/anh/Documents/nodejs/myfood-api/models",
      "sourcesContent": [
        "const mongoose = require('mongoose');\n\nvar CommentSchema = new mongoose.Schema({\n    rating: {\n        type: Number,\n        default: 0\n    },\n    comment: {\n        type: String\n    },\n    foodId: {\n        type: String\n    },\n    buyerId: {\n        type: String\n    },\n    sellerId: {\n        type: String\n    },\n    orderId: {\n        type: String\n    },\n    date_created: {\n        type: Date,\n        default: Date.now\n    }\n});\n\nvar Comment = mongoose.model('Comment', CommentSchema, 'comments');\n\nmodule.exports = Comment;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1577518194353
  }
}